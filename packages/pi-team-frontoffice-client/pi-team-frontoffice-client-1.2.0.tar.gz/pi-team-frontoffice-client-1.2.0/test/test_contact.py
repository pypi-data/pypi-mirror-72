# coding: utf-8

"""
    MN Frontoffice CORE & PERE

    Highly available and searchable datastore for MN  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import frontoffice
from frontoffice.models.contact import Contact  # noqa: E501
from frontoffice.rest import ApiException

class TestContact(unittest.TestCase):
    """Contact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Contact
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = frontoffice.models.contact.Contact()  # noqa: E501
        if include_optional :
            return Contact(
                uuid = '69d6d7c8-59de-48b8-a2a1-49ce4a06b58a', 
                version = 56, 
                identificatie = 'a', 
                administratie = '0', 
                relatiesoort = '0', 
                persoonsnummer = '0', 
                persoonsgegevens = null, 
                contactgegevens_events = [
                    frontoffice.models.contactgegevens_event.ContactgegevensEvent(
                        bron = '0', 
                        correlatie_id = '0', 
                        event_datum_bron = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        event_title = '0', 
                        indiener = '0', 
                        event_payload = null, 
                        aanmaakdatum = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        event_id = 'c8255641-04a6-4e0a-9d3b-bc19bc91aa74', )
                    ], 
                contactgegevens = null
            )
        else :
            return Contact(
                identificatie = 'a',
        )

    def testContact(self):
        """Test Contact"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
