Metadata-Version: 2.1
Name: replitdb
Version: 0.0.7
Summary: a client for replit db
Home-page: https://github.com/Codemonkey51/replit-db-client
Author: codemonkey51
Author-email: pypi@codemonkey51.dev
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: requests-async

[![PyPI version](https://badge.fury.io/py/replitdb.svg)](https://pypi.org/project/replitdb) [![Run on Repl.it](https://repl.it/badge/github/codemonkey51/replit-db-client)](https://repl.it/github/codemonkey51/replit-db-client) [![Downloads](https://pepy.tech/badge/replitdb/week)](https://pepy.tech/project/replitdb)
# replit-db-client
a client for repl db for python

# installing
### repl
on repl you will need to add the package on the packager tab
### everywhare else
install with pip or your prefered python packager

# docs
### import
`import replitdb`
### define the client
`client = replitdb.Client()`
### use async
`client = replitdb.AsyncClient()` (all commands same except with await before them)
### edit keys
##### adding
`client.add(name=value)` note you can add multiple at one time just add a comma and another `name=value` (returns nothing)
`client.add_dict({key:value})` adds all the key value pairs in the passed in dict (returns nothing)
##### removing
`client.remove(name)` like before just add more seperated by commas todo more (returns nothing)
`client.remove_list([key])` removes all keys in the list passed (returns nothing)
##### clearing
`client.wipe` WARNING THIS CANNOT BE UNDONE (returns nothing)
### viewing keys
##### list keys
`client.list(prefix)` list all keys with that in the begining of there name (returns list)
`client.list_multiple(prefix)` you can add more seperated by commas (returns dict)
`client.list_multiple_list([key])` it works like `client.list_multiple` but takes in a list instead (returns dict)
##### viewing keys
`client.view(name)` returns the value
`client.view_multiple(name)` add more seperated by commas (returns dict)
`client.view_multiple_list([key])` it works like `client.view_multiple` but takes in a list instead (returns dict)
##### view all keys
`client.all` returns all key names (returns list)
##### view all data
`client.all_dict` (returns dict)

