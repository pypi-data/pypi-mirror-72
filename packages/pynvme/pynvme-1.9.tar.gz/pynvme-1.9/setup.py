# for pypi package information
import setuptools

with open("README.md", "r") as fh:
    long_description = fh.read()

setuptools.setup(
    name="pynvme",
    version="1.9",
    author="Crane Chu",
    author_email="cranechu@gmail.com",
    description="build your own tests.",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/pynvme/pynvme",
    packages=setuptools.find_packages(),
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Programming Language :: C",
        "Programming Language :: Python :: 3.5",
        "License :: OSI Approved :: BSD License",
        "Operating System :: POSIX :: Linux",
    ],
    python_requires='>=3.5',
    install_requires=['pytest', 'pytemperature', 'pylspci', 'quarchpy'],
    data_files=[
        ('pynvme',
         ['nvme.so',
          'identify_nvme',
          'Makefile',
          'conftest.py',
          'driver_test.py',
          'pytest.ini']),
        ('pynvme/src',
         ['src/common.sh',
          'src/setup.sh']),
        ('pynvme/scripts',
         ['scripts/psd.py',
          'scripts/test_examples.py',
          'scripts/test_utilities.py']),
        ('pynvme/scripts/stress',
         ['scripts/stress/dirty_power_cycle_test.py']),
        ('pynvme/include/spdk',
         ['include/spdk/pci_ids.h']),
        ('pynvme/scripts/conformance/01_admin_cmd',
         ['scripts/conformance/01_admin_cmd/abort_test.py',
          'scripts/conformance/01_admin_cmd/identify_test.py',
          'scripts/conformance/01_admin_cmd/queue_test.py',
          'scripts/conformance/01_admin_cmd/firmware_test.py',
          'scripts/conformance/01_admin_cmd/dst_test.py',
          'scripts/conformance/01_admin_cmd/format_test.py',
          'scripts/conformance/01_admin_cmd/aer_test.py',
          'scripts/conformance/01_admin_cmd/sanitize_test.py',
          'scripts/conformance/01_admin_cmd/mi_test.py',
          'scripts/conformance/01_admin_cmd/features_test.py',
          'scripts/conformance/01_admin_cmd/logpage_test.py']),
        ('pynvme/scripts/conformance/02_nvm_cmd',
         ['scripts/conformance/02_nvm_cmd/compare_test.py',
          'scripts/conformance/02_nvm_cmd/flush_test.py',
          'scripts/conformance/02_nvm_cmd/read_test.py',
          'scripts/conformance/02_nvm_cmd/write_uncorrectable_test.py',
          'scripts/conformance/02_nvm_cmd/deallocate_test.py',
          'scripts/conformance/02_nvm_cmd/write_test.py',
          'scripts/conformance/02_nvm_cmd/verify_test.py',
          'scripts/conformance/02_nvm_cmd/write_zeroes_test.py']),
        ('pynvme/scripts/conformance/03_features',
         ['scripts/conformance/03_features/write_protect_test.py',
          'scripts/conformance/03_features/power_management_test.py',
          'scripts/conformance/03_features/reset_test.py']),
        ('pynvme/scripts/conformance/04_registers',
         ['scripts/conformance/04_registers/controller_test.py',
          'scripts/conformance/04_registers/power_test.py',
          'scripts/conformance/04_registers/pcie_test.py']), 
        ('pynvme/scripts/conformance/05_controller',
         ['scripts/conformance/05_controller/sq_cq_test.py',
          'scripts/conformance/05_controller/sqe_cqe_test.py',
          'scripts/conformance/05_controller/interrupt_test.py',
          'scripts/conformance/05_controller/prp_test.py',
          'scripts/conformance/05_controller/arbitration_test.py']),
    ]
)
