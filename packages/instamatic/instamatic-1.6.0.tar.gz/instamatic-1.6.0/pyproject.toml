[tool.poetry]
name = 'instamatic'
version = "1.6.0"
description = 'Python program for automated electron diffraction data collection'
license = 'GPL-3.0-only'
classifiers = [
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Operating System :: Microsoft :: Windows',
    'Topic :: Scientific/Engineering :: Human Machine Interfaces',
    'Topic :: Scientific/Engineering :: Chemistry',
    'Topic :: Software Development :: Libraries',
]
homepage = 'http://github.com/stefsmeets/instamatic'
repository = 'http://github.com/stefsmeets/instamatic'
documentation = 'http://github.com/stefsmeets/instamatic'
authors = ["Stef Smeets <s.smeets@tudelft.nl>"]
maintainers = ['Stef Smeets <s.smeets@tudelft.nl>']
readme = "readme.md"
keywords = [
    'electron-crystallography',
    'electron-microscopy',
    'electron-diffraction',
    'serial-crystallography',
    '3D-electron-diffraction',
    'micro-ed',
    'data-collection',
    'automation'
]
include = [
    '.pre-commit-config.yaml',
    'THANKS.md',
    'LICENCE',
    'demos/*.ipynb',
    'demos/nav.nav',
    'demos/readme.md',
    'docs/*.md',
    'docs/*.png',
    'docs/*.py',
    'requirements.txt',
    'scripts/*.py',
    'setup_win.bat',
    'tests/*.py',
    'tests/config/*.yaml',
    'tests/config/*/*.yaml',
]

[tool.poetry.dependencies]
python = ">=3.6.1"
comtypes = '>=1.1.7'
h5py = '>=2.10.0'
ipython = '>=7.11.1'
lmfit = '>=1.0.0'
matplotlib = '>=3.1.2'
mrcfile = '>=1.1.2'
numpy = '>=1.17.3'
pandas = '>=1.0.0'
pillow = '>=7.0.0'
pywinauto = '>=0.6.8'
pyyaml = '>=5.3'
scikit-image = '>=0.17.1'
scipy = '>=1.3.2'
tifffile = '>=2019.7.26.2'
tqdm = '>=4.41.1'
virtualbox = '>=2.0.0'
pyserialem = ">=0.3.0"

[tool.poetry.dev-dependencies]
check-manifest = "*"
pre-commit = "*"
pytest = "==5.*,>=5.4.1"
pytest-cov = "==2.*,>=2.8.1"

[tool.poetry.scripts]
# main
instamatic = 'instamatic.main:main'
"instamatic.controller" = 'instamatic.TEMController.TEMController:main_entry'
# experiments
"instamatic.serialed" = 'instamatic.experiments.serialed.experiment:main'
"instamatic.camera" = 'instamatic.camera.camera:main_entry'
# calibrate
"instamatic.calibrate_stage_lowmag" = 'instamatic.calibrate.calibrate_stage_lowmag:main_entry'
"instamatic.calibrate_stage_mag1" = 'instamatic.calibrate.calibrate_stage_mag1:main_entry'
"instamatic.calibrate_beamshift" = 'instamatic.calibrate.calibrate_beamshift:main_entry'
"instamatic.calibrate_directbeam" = 'instamatic.calibrate.calibrate_directbeam:main_entry'
"instamatic.calibrate_stagematrix" = 'instamatic.calibrate.calibrate_stagematrix:main_entry'
"instamatic.flatfield" = 'instamatic.processing.flatfield:main_entry'
"instamatic.stretch_correction" = 'instamatic.processing.stretch_correction:main_entry'
# tools
"instamatic.browser" = 'scripts.browser:main'
"instamatic.viewer" = 'scripts.viewer:main'
"instamatic.defocus_helper" = 'instamatic.gui.defocus_button:main'
"instamatic.find_crystals" = 'instamatic.processing.find_crystals:main_entry'
"instamatic.find_crystals_ilastik" = 'instamatic.processing.find_crystals_ilastik:main_entry'
"instamatic.learn" = 'scripts.learn:main_entry'
# server
"instamatic.temserver" = 'instamatic.server.tem_server:main'
"instamatic.camserver" = 'instamatic.server.cam_server:main'
"instamatic.dialsserver" = 'instamatic.server.dials_server:main'
"instamatic.VMserver" = 'instamatic.server.vm_ubuntu_server:main'
"instamatic.xdsserver" = 'instamatic.server.xds_server:main'
"instamatic.temserver_fei" = 'instamatic.server.TEMServer_FEI:main'
"instamatic.goniotoolserver" = 'instamatic.server.goniotool_server:main'
# setup
"instamatic.autoconfig" = 'instamatic.config.autoconfig:main'

[tool.poetry.urls]
'Bug Reports' = 'https://github.com/stefsmeets/instamatic/issues'

[tool.dephell.main]
from = {format = 'poetry', path = 'pyproject.toml'}
to = {format = 'setuppy', path = 'setup.py'}
versioning = "semver"

[build-system]
requires = ['poetry>=0.12']
build-backend = 'poetry.masonry.api'
