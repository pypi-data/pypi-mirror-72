name: pygom

on:
  push:
    branches:
      - master
      - dev
      - feature/*
      - bugfix/*
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v1
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check python version
        run: python -c "import sys; print(sys.version)"
        
      - name: RC.exe for Windows
        if: startsWith(runner.os, 'Windows')
        run: |
          function Invoke-VSDevEnvironment {
            $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
                  $installationPath = & $vswhere -prerelease -legacy -latest -property installationPath
                  $Command = Join-Path $installationPath "Common7\Tools\vsdevcmd.bat"
                & "${env:COMSPEC}" /s /c "`"$Command`" -no_logo && set" | Foreach-Object {
                      if ($_ -match '^([^=]+)=(.*)') {
                          [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
                      }
                }
          }
          Invoke-VSDevEnvironment
          Get-Command rc.exe | Format-Table -AutoSize
          echo "::add-path::$(Get-Command rc.exe | Split-Path)"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build and install package for c files
        run: |
          python setup.py build
          python setup.py install
      - name: Fix matplotlib backend for MacOS
        if: startsWith(runner.os, 'macOS')
        run: |
          mkdir ~/.matplotlib
          echo "backend: TkAgg" >> ~/.matplotlib/matplotlibrc
      - name: Test and coverage
        run: python setup.py test
