# coding: utf-8

"""
    RegObs API

      ## Introduction    RegObs is a tool for collecting observations and events   related to natural hazards. It is currently used by the   Norwegian flood, landslide and avalanche warning service in   Norway, but the data is openly available for anyone through this API.    Regobs has been developed by the Norwegian Water resources and   Energy Directorate (NVE), in collaboration with the Norwegian   Meteorological Institute (MET) and the Norwegian Public Roads   Administration (NPRA).    You can check out our representation of the data at [regobs.no](http://regobs.no).    ## Authentication    Some endpoints require an api key.  You can get an API key by sending an email to   [raek@nve.no](mailto:raek@nve.no?subject=RegObs%20API%20Key).  To use the api key with the swagger ui, fill in the api\\_key input above.   It should then be included with every request in the   `regObs_apptoken` header.    ## Getting started    Get the last 10 observations using python:    ```python  import requests  r = requests.post('https://api.regobs.no/v4/Search',       data={'NumberOfRecords': 10},      headers={'Content-Type': 'application/json'}  )  data = r.json()  print(len(data))  # 10  ```      # noqa: E501

    OpenAPI spec version: v4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class LandslideViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dt_land_slide_time': 'datetime',
        'utm_north_stop': 'int',
        'utm_east_stop': 'int',
        'utm_zone_stop': 'int',
        'land_slide_tid': 'int',
        'land_slide_name': 'str',
        'land_slide_trigger_tid': 'int',
        'land_slide_trigger_name': 'str',
        'land_slide_size_tid': 'int',
        'land_slide_size_name': 'str',
        'comment': 'str',
        'dt_land_slide_time_end': 'datetime',
        'geo_hazard_tid': 'int',
        'geo_hazard_name': 'str',
        'activity_influenced_tid': 'int',
        'activity_influenced_name': 'str',
        'forecast_accurate_tid': 'int',
        'forecast_accurate_name': 'str',
        'damage_extent_tid': 'int',
        'damage_extent_name': 'str',
        'utm_zone_start': 'int',
        'utm_north_start': 'int',
        'utm_east_start': 'int',
        'dt_off_land_slide_time': 'datetime',
        'dt_off_land_slide_time_end': 'datetime',
        'urls': 'list[UrlViewModel]'
    }

    attribute_map = {
        'dt_land_slide_time': 'DtLandSlideTime',
        'utm_north_stop': 'UTMNorthStop',
        'utm_east_stop': 'UTMEastStop',
        'utm_zone_stop': 'UTMZoneStop',
        'land_slide_tid': 'LandSlideTID',
        'land_slide_name': 'LandSlideName',
        'land_slide_trigger_tid': 'LandSlideTriggerTID',
        'land_slide_trigger_name': 'LandSlideTriggerName',
        'land_slide_size_tid': 'LandSlideSizeTID',
        'land_slide_size_name': 'LandSlideSizeName',
        'comment': 'Comment',
        'dt_land_slide_time_end': 'DtLandSlideTimeEnd',
        'geo_hazard_tid': 'GeoHazardTID',
        'geo_hazard_name': 'GeoHazardName',
        'activity_influenced_tid': 'ActivityInfluencedTID',
        'activity_influenced_name': 'ActivityInfluencedName',
        'forecast_accurate_tid': 'ForecastAccurateTID',
        'forecast_accurate_name': 'ForecastAccurateName',
        'damage_extent_tid': 'DamageExtentTID',
        'damage_extent_name': 'DamageExtentName',
        'utm_zone_start': 'UTMZoneStart',
        'utm_north_start': 'UTMNorthStart',
        'utm_east_start': 'UTMEastStart',
        'dt_off_land_slide_time': 'DtOffLandSlideTime',
        'dt_off_land_slide_time_end': 'DtOffLandSlideTimeEnd',
        'urls': 'Urls'
    }

    def __init__(self, dt_land_slide_time=None, utm_north_stop=None, utm_east_stop=None, utm_zone_stop=None, land_slide_tid=None, land_slide_name=None, land_slide_trigger_tid=None, land_slide_trigger_name=None, land_slide_size_tid=None, land_slide_size_name=None, comment=None, dt_land_slide_time_end=None, geo_hazard_tid=None, geo_hazard_name=None, activity_influenced_tid=None, activity_influenced_name=None, forecast_accurate_tid=None, forecast_accurate_name=None, damage_extent_tid=None, damage_extent_name=None, utm_zone_start=None, utm_north_start=None, utm_east_start=None, dt_off_land_slide_time=None, dt_off_land_slide_time_end=None, urls=None):  # noqa: E501
        """LandslideViewModel - a model defined in Swagger"""  # noqa: E501
        self._dt_land_slide_time = None
        self._utm_north_stop = None
        self._utm_east_stop = None
        self._utm_zone_stop = None
        self._land_slide_tid = None
        self._land_slide_name = None
        self._land_slide_trigger_tid = None
        self._land_slide_trigger_name = None
        self._land_slide_size_tid = None
        self._land_slide_size_name = None
        self._comment = None
        self._dt_land_slide_time_end = None
        self._geo_hazard_tid = None
        self._geo_hazard_name = None
        self._activity_influenced_tid = None
        self._activity_influenced_name = None
        self._forecast_accurate_tid = None
        self._forecast_accurate_name = None
        self._damage_extent_tid = None
        self._damage_extent_name = None
        self._utm_zone_start = None
        self._utm_north_start = None
        self._utm_east_start = None
        self._dt_off_land_slide_time = None
        self._dt_off_land_slide_time_end = None
        self._urls = None
        self.discriminator = None
        if dt_land_slide_time is not None:
            self.dt_land_slide_time = dt_land_slide_time
        if utm_north_stop is not None:
            self.utm_north_stop = utm_north_stop
        if utm_east_stop is not None:
            self.utm_east_stop = utm_east_stop
        if utm_zone_stop is not None:
            self.utm_zone_stop = utm_zone_stop
        if land_slide_tid is not None:
            self.land_slide_tid = land_slide_tid
        if land_slide_name is not None:
            self.land_slide_name = land_slide_name
        if land_slide_trigger_tid is not None:
            self.land_slide_trigger_tid = land_slide_trigger_tid
        if land_slide_trigger_name is not None:
            self.land_slide_trigger_name = land_slide_trigger_name
        if land_slide_size_tid is not None:
            self.land_slide_size_tid = land_slide_size_tid
        if land_slide_size_name is not None:
            self.land_slide_size_name = land_slide_size_name
        if comment is not None:
            self.comment = comment
        if dt_land_slide_time_end is not None:
            self.dt_land_slide_time_end = dt_land_slide_time_end
        if geo_hazard_tid is not None:
            self.geo_hazard_tid = geo_hazard_tid
        if geo_hazard_name is not None:
            self.geo_hazard_name = geo_hazard_name
        if activity_influenced_tid is not None:
            self.activity_influenced_tid = activity_influenced_tid
        if activity_influenced_name is not None:
            self.activity_influenced_name = activity_influenced_name
        if forecast_accurate_tid is not None:
            self.forecast_accurate_tid = forecast_accurate_tid
        if forecast_accurate_name is not None:
            self.forecast_accurate_name = forecast_accurate_name
        if damage_extent_tid is not None:
            self.damage_extent_tid = damage_extent_tid
        if damage_extent_name is not None:
            self.damage_extent_name = damage_extent_name
        if utm_zone_start is not None:
            self.utm_zone_start = utm_zone_start
        if utm_north_start is not None:
            self.utm_north_start = utm_north_start
        if utm_east_start is not None:
            self.utm_east_start = utm_east_start
        if dt_off_land_slide_time is not None:
            self.dt_off_land_slide_time = dt_off_land_slide_time
        if dt_off_land_slide_time_end is not None:
            self.dt_off_land_slide_time_end = dt_off_land_slide_time_end
        if urls is not None:
            self.urls = urls

    @property
    def dt_land_slide_time(self):
        """Gets the dt_land_slide_time of this LandslideViewModel.  # noqa: E501


        :return: The dt_land_slide_time of this LandslideViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._dt_land_slide_time

    @dt_land_slide_time.setter
    def dt_land_slide_time(self, dt_land_slide_time):
        """Sets the dt_land_slide_time of this LandslideViewModel.


        :param dt_land_slide_time: The dt_land_slide_time of this LandslideViewModel.  # noqa: E501
        :type: datetime
        """

        self._dt_land_slide_time = dt_land_slide_time

    @property
    def utm_north_stop(self):
        """Gets the utm_north_stop of this LandslideViewModel.  # noqa: E501


        :return: The utm_north_stop of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_north_stop

    @utm_north_stop.setter
    def utm_north_stop(self, utm_north_stop):
        """Sets the utm_north_stop of this LandslideViewModel.


        :param utm_north_stop: The utm_north_stop of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_north_stop = utm_north_stop

    @property
    def utm_east_stop(self):
        """Gets the utm_east_stop of this LandslideViewModel.  # noqa: E501


        :return: The utm_east_stop of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_east_stop

    @utm_east_stop.setter
    def utm_east_stop(self, utm_east_stop):
        """Sets the utm_east_stop of this LandslideViewModel.


        :param utm_east_stop: The utm_east_stop of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_east_stop = utm_east_stop

    @property
    def utm_zone_stop(self):
        """Gets the utm_zone_stop of this LandslideViewModel.  # noqa: E501


        :return: The utm_zone_stop of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_zone_stop

    @utm_zone_stop.setter
    def utm_zone_stop(self, utm_zone_stop):
        """Sets the utm_zone_stop of this LandslideViewModel.


        :param utm_zone_stop: The utm_zone_stop of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_zone_stop = utm_zone_stop

    @property
    def land_slide_tid(self):
        """Gets the land_slide_tid of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._land_slide_tid

    @land_slide_tid.setter
    def land_slide_tid(self, land_slide_tid):
        """Sets the land_slide_tid of this LandslideViewModel.


        :param land_slide_tid: The land_slide_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._land_slide_tid = land_slide_tid

    @property
    def land_slide_name(self):
        """Gets the land_slide_name of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._land_slide_name

    @land_slide_name.setter
    def land_slide_name(self, land_slide_name):
        """Sets the land_slide_name of this LandslideViewModel.


        :param land_slide_name: The land_slide_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._land_slide_name = land_slide_name

    @property
    def land_slide_trigger_tid(self):
        """Gets the land_slide_trigger_tid of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_trigger_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._land_slide_trigger_tid

    @land_slide_trigger_tid.setter
    def land_slide_trigger_tid(self, land_slide_trigger_tid):
        """Sets the land_slide_trigger_tid of this LandslideViewModel.


        :param land_slide_trigger_tid: The land_slide_trigger_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._land_slide_trigger_tid = land_slide_trigger_tid

    @property
    def land_slide_trigger_name(self):
        """Gets the land_slide_trigger_name of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_trigger_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._land_slide_trigger_name

    @land_slide_trigger_name.setter
    def land_slide_trigger_name(self, land_slide_trigger_name):
        """Sets the land_slide_trigger_name of this LandslideViewModel.


        :param land_slide_trigger_name: The land_slide_trigger_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._land_slide_trigger_name = land_slide_trigger_name

    @property
    def land_slide_size_tid(self):
        """Gets the land_slide_size_tid of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_size_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._land_slide_size_tid

    @land_slide_size_tid.setter
    def land_slide_size_tid(self, land_slide_size_tid):
        """Sets the land_slide_size_tid of this LandslideViewModel.


        :param land_slide_size_tid: The land_slide_size_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._land_slide_size_tid = land_slide_size_tid

    @property
    def land_slide_size_name(self):
        """Gets the land_slide_size_name of this LandslideViewModel.  # noqa: E501


        :return: The land_slide_size_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._land_slide_size_name

    @land_slide_size_name.setter
    def land_slide_size_name(self, land_slide_size_name):
        """Sets the land_slide_size_name of this LandslideViewModel.


        :param land_slide_size_name: The land_slide_size_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._land_slide_size_name = land_slide_size_name

    @property
    def comment(self):
        """Gets the comment of this LandslideViewModel.  # noqa: E501


        :return: The comment of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this LandslideViewModel.


        :param comment: The comment of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def dt_land_slide_time_end(self):
        """Gets the dt_land_slide_time_end of this LandslideViewModel.  # noqa: E501


        :return: The dt_land_slide_time_end of this LandslideViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._dt_land_slide_time_end

    @dt_land_slide_time_end.setter
    def dt_land_slide_time_end(self, dt_land_slide_time_end):
        """Sets the dt_land_slide_time_end of this LandslideViewModel.


        :param dt_land_slide_time_end: The dt_land_slide_time_end of this LandslideViewModel.  # noqa: E501
        :type: datetime
        """

        self._dt_land_slide_time_end = dt_land_slide_time_end

    @property
    def geo_hazard_tid(self):
        """Gets the geo_hazard_tid of this LandslideViewModel.  # noqa: E501


        :return: The geo_hazard_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._geo_hazard_tid

    @geo_hazard_tid.setter
    def geo_hazard_tid(self, geo_hazard_tid):
        """Sets the geo_hazard_tid of this LandslideViewModel.


        :param geo_hazard_tid: The geo_hazard_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._geo_hazard_tid = geo_hazard_tid

    @property
    def geo_hazard_name(self):
        """Gets the geo_hazard_name of this LandslideViewModel.  # noqa: E501


        :return: The geo_hazard_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._geo_hazard_name

    @geo_hazard_name.setter
    def geo_hazard_name(self, geo_hazard_name):
        """Sets the geo_hazard_name of this LandslideViewModel.


        :param geo_hazard_name: The geo_hazard_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._geo_hazard_name = geo_hazard_name

    @property
    def activity_influenced_tid(self):
        """Gets the activity_influenced_tid of this LandslideViewModel.  # noqa: E501


        :return: The activity_influenced_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._activity_influenced_tid

    @activity_influenced_tid.setter
    def activity_influenced_tid(self, activity_influenced_tid):
        """Sets the activity_influenced_tid of this LandslideViewModel.


        :param activity_influenced_tid: The activity_influenced_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._activity_influenced_tid = activity_influenced_tid

    @property
    def activity_influenced_name(self):
        """Gets the activity_influenced_name of this LandslideViewModel.  # noqa: E501


        :return: The activity_influenced_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._activity_influenced_name

    @activity_influenced_name.setter
    def activity_influenced_name(self, activity_influenced_name):
        """Sets the activity_influenced_name of this LandslideViewModel.


        :param activity_influenced_name: The activity_influenced_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._activity_influenced_name = activity_influenced_name

    @property
    def forecast_accurate_tid(self):
        """Gets the forecast_accurate_tid of this LandslideViewModel.  # noqa: E501


        :return: The forecast_accurate_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._forecast_accurate_tid

    @forecast_accurate_tid.setter
    def forecast_accurate_tid(self, forecast_accurate_tid):
        """Sets the forecast_accurate_tid of this LandslideViewModel.


        :param forecast_accurate_tid: The forecast_accurate_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._forecast_accurate_tid = forecast_accurate_tid

    @property
    def forecast_accurate_name(self):
        """Gets the forecast_accurate_name of this LandslideViewModel.  # noqa: E501


        :return: The forecast_accurate_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._forecast_accurate_name

    @forecast_accurate_name.setter
    def forecast_accurate_name(self, forecast_accurate_name):
        """Sets the forecast_accurate_name of this LandslideViewModel.


        :param forecast_accurate_name: The forecast_accurate_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._forecast_accurate_name = forecast_accurate_name

    @property
    def damage_extent_tid(self):
        """Gets the damage_extent_tid of this LandslideViewModel.  # noqa: E501


        :return: The damage_extent_tid of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._damage_extent_tid

    @damage_extent_tid.setter
    def damage_extent_tid(self, damage_extent_tid):
        """Sets the damage_extent_tid of this LandslideViewModel.


        :param damage_extent_tid: The damage_extent_tid of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._damage_extent_tid = damage_extent_tid

    @property
    def damage_extent_name(self):
        """Gets the damage_extent_name of this LandslideViewModel.  # noqa: E501


        :return: The damage_extent_name of this LandslideViewModel.  # noqa: E501
        :rtype: str
        """
        return self._damage_extent_name

    @damage_extent_name.setter
    def damage_extent_name(self, damage_extent_name):
        """Sets the damage_extent_name of this LandslideViewModel.


        :param damage_extent_name: The damage_extent_name of this LandslideViewModel.  # noqa: E501
        :type: str
        """

        self._damage_extent_name = damage_extent_name

    @property
    def utm_zone_start(self):
        """Gets the utm_zone_start of this LandslideViewModel.  # noqa: E501


        :return: The utm_zone_start of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_zone_start

    @utm_zone_start.setter
    def utm_zone_start(self, utm_zone_start):
        """Sets the utm_zone_start of this LandslideViewModel.


        :param utm_zone_start: The utm_zone_start of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_zone_start = utm_zone_start

    @property
    def utm_north_start(self):
        """Gets the utm_north_start of this LandslideViewModel.  # noqa: E501


        :return: The utm_north_start of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_north_start

    @utm_north_start.setter
    def utm_north_start(self, utm_north_start):
        """Sets the utm_north_start of this LandslideViewModel.


        :param utm_north_start: The utm_north_start of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_north_start = utm_north_start

    @property
    def utm_east_start(self):
        """Gets the utm_east_start of this LandslideViewModel.  # noqa: E501


        :return: The utm_east_start of this LandslideViewModel.  # noqa: E501
        :rtype: int
        """
        return self._utm_east_start

    @utm_east_start.setter
    def utm_east_start(self, utm_east_start):
        """Sets the utm_east_start of this LandslideViewModel.


        :param utm_east_start: The utm_east_start of this LandslideViewModel.  # noqa: E501
        :type: int
        """

        self._utm_east_start = utm_east_start

    @property
    def dt_off_land_slide_time(self):
        """Gets the dt_off_land_slide_time of this LandslideViewModel.  # noqa: E501


        :return: The dt_off_land_slide_time of this LandslideViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._dt_off_land_slide_time

    @dt_off_land_slide_time.setter
    def dt_off_land_slide_time(self, dt_off_land_slide_time):
        """Sets the dt_off_land_slide_time of this LandslideViewModel.


        :param dt_off_land_slide_time: The dt_off_land_slide_time of this LandslideViewModel.  # noqa: E501
        :type: datetime
        """

        self._dt_off_land_slide_time = dt_off_land_slide_time

    @property
    def dt_off_land_slide_time_end(self):
        """Gets the dt_off_land_slide_time_end of this LandslideViewModel.  # noqa: E501


        :return: The dt_off_land_slide_time_end of this LandslideViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._dt_off_land_slide_time_end

    @dt_off_land_slide_time_end.setter
    def dt_off_land_slide_time_end(self, dt_off_land_slide_time_end):
        """Sets the dt_off_land_slide_time_end of this LandslideViewModel.


        :param dt_off_land_slide_time_end: The dt_off_land_slide_time_end of this LandslideViewModel.  # noqa: E501
        :type: datetime
        """

        self._dt_off_land_slide_time_end = dt_off_land_slide_time_end

    @property
    def urls(self):
        """Gets the urls of this LandslideViewModel.  # noqa: E501


        :return: The urls of this LandslideViewModel.  # noqa: E501
        :rtype: list[UrlViewModel]
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this LandslideViewModel.


        :param urls: The urls of this LandslideViewModel.  # noqa: E501
        :type: list[UrlViewModel]
        """

        self._urls = urls

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LandslideViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LandslideViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
