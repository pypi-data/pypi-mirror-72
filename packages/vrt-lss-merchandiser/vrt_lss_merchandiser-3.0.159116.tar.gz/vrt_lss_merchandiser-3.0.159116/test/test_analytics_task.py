# coding: utf-8

"""
    VeeRoute.LSS Merchandiser

    Программный интерфейс для планирования работ торговых предствителей.  # noqa: E501

    The version of the OpenAPI document: 3.0.159116
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_merchandiser
from vrt_lss_merchandiser.models.analytics_task import AnalyticsTask  # noqa: E501
from vrt_lss_merchandiser.rest import ApiException

class TestAnalyticsTask(unittest.TestCase):
    """AnalyticsTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AnalyticsTask
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_merchandiser.models.analytics_task.AnalyticsTask()  # noqa: E501
        if include_optional :
            return AnalyticsTask(
                plan_task = vrt_lss_merchandiser.models.plan_task.PlanTask(
                    performer = vrt_lss_merchandiser.models.performer.Performer(
                        key = 'performer0001', 
                        start_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        finish_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_type = 'CAR', 
                        shifts = [
                            vrt_lss_merchandiser.models.shift.Shift(
                                availability_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-10-21T09:30+03:00', 
                                    to = '2020-10-21T19:45Z', ), 
                                working_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-10-21T09:30+03:00', 
                                    to = '2020-10-21T19:45Z', ), 
                                trip = vrt_lss_merchandiser.models.trip.Trip(
                                    key = 'trip01', 
                                    trip_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-10-21T09:30+03:00', 
                                        to = '2020-10-21T19:45Z', ), 
                                    actions = [
                                        vrt_lss_merchandiser.models.order_action.OrderAction(
                                            order = vrt_lss_merchandiser.models.order.Order(
                                                key = 'order0001', 
                                                location = vrt_lss_merchandiser.models.location.Location(
                                                    latitude = 55.692789, 
                                                    longitude = 37.554554, 
                                                    arrival_duration = 15, 
                                                    departure_duration = 5, ), 
                                                visits = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-10-21T09:30+03:00', 
                                                            to = '2020-10-21T19:45Z', ), )
                                                    ], 
                                                facts = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-10-21T09:30+03:00', 
                                                            to = '2020-10-21T19:45Z', ), )
                                                    ], 
                                                duration = 30, 
                                                reward = 199.1, ), 
                                            order_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-10-21T09:30+03:00', 
                                                to = '2020-10-21T19:45Z', ), 
                                            location_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-10-21T09:30+03:00', 
                                                to = '2020-10-21T19:45Z', ), )
                                        ], 
                                    waitlist = [
                                        vrt_lss_merchandiser.models.trip_waitlist.Trip_waitlist()
                                        ], ), )
                            ], 
                        tariff = vrt_lss_merchandiser.models.tariff.Tariff(
                            basic = vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                cost_per_shift = 1000.9, 
                                cost_per_meter = 0.05, 
                                max_length = 200000, 
                                cost_per_minute = 0.12, 
                                max_time = 480, ), 
                            extra = [
                                vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                    cost_per_shift = 1000.9, 
                                    cost_per_meter = 0.05, 
                                    max_length = 200000, 
                                    cost_per_minute = 0.12, 
                                    max_time = 480, )
                                ], ), ), 
                    orders = [
                        vrt_lss_merchandiser.models.order.Order(
                            key = 'order0001', 
                            location = vrt_lss_merchandiser.models.location.Location(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                arrival_duration = 15, 
                                departure_duration = 5, ), 
                            visits = [
                                vrt_lss_merchandiser.models.event_window.EventWindow(
                                    time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-10-21T09:30+03:00', 
                                        to = '2020-10-21T19:45Z', ), )
                                ], 
                            duration = 30, 
                            reward = 199.1, )
                        ], 
                    settings = vrt_lss_merchandiser.models.plan_settings.PlanSettings(
                        configuration = 'default', 
                        planning_time = 30, 
                        result_ttl = 10, 
                        result_timezone = 3, 
                        predict_slots = 2, 
                        transport_factor = [
                            vrt_lss_merchandiser.models.transport_factor.TransportFactor(
                                transport_type = 'CAR', 
                                speed = 2.5, )
                            ], 
                        capacity_factor = [
                            vrt_lss_merchandiser.models.capacity_factor.CapacityFactor(
                                transport_type = 'CAR', 
                                capacity = 2.5, )
                            ], 
                        routing = [
                            vrt_lss_merchandiser.models.routing.Routing(
                                transport_type = 'CAR', 
                                matrix = {"waypoints":[{"latitude":59.9345,"longitude":30.1504},{"latitude":59.942383,"longitude":30.258951},{"latitude":59.9545,"longitude":30.2004},{"latitude":59.89527,"longitude":30.261747},{"latitude":59.9745,"longitude":30.5004}],"distances":[[0,5822,1820,14130,23304],[5936,0,4931,8365,17731],[1819,4853,0,13161,22335],[14859,9056,13854,0,21440],[21777,16306,20772,19290,0]],"durations":[[0,13,7,24,36],[13,0,9,13,25],[7,9,0,21,32],[26,14,22,0,30],[34,23,30,28,0]]}, 
                                traffic_jams = [
                                    vrt_lss_merchandiser.models.traffic_factor.TrafficFactor(
                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                            from = '2020-10-21T09:30+03:00', 
                                            to = '2020-10-21T19:45Z', ), 
                                        length_multiplier = 2, 
                                        length_additive = 20, 
                                        time_multiplier = 2, 
                                        time_additive = 30, )
                                    ], )
                            ], 
                        assumptions = vrt_lss_merchandiser.models.plan_assumptions.PlanAssumptions(
                            flight_distance = True, 
                            disable_compatibility = True, 
                            disable_capacity = True, 
                            same_order_time_window = True, 
                            expand_shift_time_window = True, ), 
                        precision = 2, ), 
                    merchandiser_settings = vrt_lss_merchandiser.models.merchandiser_settings.MerchandiserSettings(
                        accuracy = 'DAY', ), ), 
                plan_result = {"tracedata":{"code":"test_LssTesting_MerchandiserServicePlanner_2020-02-13 11:53_1296afd8-678a-4ad5-b256-c193edadffa6"},"timetable":{"key":"performer_1","start_location":{"latitude":55.7664,"longitude":37.503,"arrival_duration":0,"departure_duration":0},"finish_location":{"latitude":55.7664,"longitude":37.503,"arrival_duration":0,"departure_duration":0},"transport_type":"CAR","shifts":[{"availability_time":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-01T19:00:00+03:00"},"working_time":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-01T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-02T09:00:00+03:00","to":"2020-02-02T19:00:00+03:00"},"working_time":{"from":"2020-02-02T09:00:00+03:00","to":"2020-02-02T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-03T09:00:00+03:00","to":"2020-02-03T19:00:00+03:00"},"working_time":{"from":"2020-02-03T09:00:00+03:00","to":"2020-02-03T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"},"working_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"},"trip":{"key":"trip_3_shft_perf_performer_1","trip_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T10:02:00+03:00"},"actions":[{"order":{"key":"order_2_visit#0","location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-15T09:00:00+03:00"}},{"time_window":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:20:00+03:00"},"location_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:20:00+03:00"}},{"order":{"key":"order_3_visit#0","location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"time_window":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"}},{"time_window":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-04T09:42:00+03:00","to":"2020-02-04T10:02:00+03:00"},"location_time":{"from":"2020-02-04T09:42:00+03:00","to":"2020-02-04T10:02:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-07T19:00:00+03:00"},"working_time":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-07T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-08T09:00:00+03:00","to":"2020-02-08T19:00:00+03:00"},"working_time":{"from":"2020-02-08T09:00:00+03:00","to":"2020-02-08T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-09T09:00:00+03:00","to":"2020-02-09T19:00:00+03:00"},"working_time":{"from":"2020-02-09T09:00:00+03:00","to":"2020-02-09T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-10T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"},"working_time":{"from":"2020-02-10T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"},"working_time":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-14T19:00:00+03:00"},"working_time":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-14T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-15T09:00:00+03:00","to":"2020-02-15T19:00:00+03:00"},"working_time":{"from":"2020-02-15T09:00:00+03:00","to":"2020-02-15T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-16T19:00:00+03:00"},"working_time":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-16T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-17T09:00:00+03:00","to":"2020-02-17T19:00:00+03:00"},"working_time":{"from":"2020-02-17T09:00:00+03:00","to":"2020-02-17T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"},"working_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"},"trip":{"key":"trip_13_shft_perf_performer_1","trip_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T10:02:00+03:00"},"actions":[{"order":{"key":"order_2_visit#1","location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-15T09:00:00+03:00"}},{"time_window":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:20:00+03:00"},"location_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:20:00+03:00"}},{"order":{"key":"order_3_visit#1","location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"time_window":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"}},{"time_window":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-18T09:42:00+03:00","to":"2020-02-18T10:02:00+03:00"},"location_time":{"from":"2020-02-18T09:42:00+03:00","to":"2020-02-18T10:02:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"},"working_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"},"trip":{"key":"trip_14_shft_perf_performer_1","trip_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"actions":[{"order":{"key":"order_4_visit#3","location":{"latitude":55.7471,"longitude":37.5986,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"}},{"time_window":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"}},{"time_window":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"}},{"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"location_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-22T19:00:00+03:00"},"working_time":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-22T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-23T09:00:00+03:00","to":"2020-02-23T19:00:00+03:00"},"working_time":{"from":"2020-02-23T09:00:00+03:00","to":"2020-02-23T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-24T09:00:00+03:00","to":"2020-02-24T19:00:00+03:00"},"working_time":{"from":"2020-02-24T09:00:00+03:00","to":"2020-02-24T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-25T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"},"working_time":{"from":"2020-02-25T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-28T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"},"working_time":{"from":"2020-02-28T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-29T09:00:00+03:00","to":"2020-02-29T19:00:00+03:00"},"working_time":{"from":"2020-02-29T09:00:00+03:00","to":"2020-02-29T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-27T09:00:00+03:00","to":"2020-02-27T19:00:00+03:00"},"working_time":{"from":"2020-02-27T09:00:00+03:00","to":"2020-02-27T19:00:00+03:00"}}],"tariff":{"basic":{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":1,"max_time":300},"extra":[{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":2,"max_time":240},{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":3,"max_time":120}]}},"statistics":{"total_statistics":{"cost":3463.52,"reward":5000,"measurements":{"driving_time":40,"waiting_time":0,"working_time":100,"arriving_time":2,"departure_time":2,"total_time":104,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-21T09:00:00+03:00"},"distance":31952},"orders_count":5,"performers_count":3,"capacity_utilization":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"trips_statistics":[{"trip_key":"trip_13_shft_perf_performer_1","statistics":{"cost":1221.76,"reward":2000,"measurements":{"driving_time":20,"waiting_time":0,"working_time":40,"arriving_time":1,"departure_time":1,"total_time":42,"time_window":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T10:02:00+03:00"},"distance":15976},"orders_count":2,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_2_visit#1#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":1,"total_time":21,"time_window":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:21:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_3_visit#1#dmd_"],"measurements":{"driving_time":20,"waiting_time":0,"working_time":20,"arriving_time":1,"departure_time":0,"total_time":21,"time_window":{"from":"2020-02-18T09:41:00+03:00","to":"2020-02-18T10:02:00+03:00"},"distance":15976},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_3_shft_perf_performer_1","statistics":{"cost":1221.76,"reward":2000,"measurements":{"driving_time":20,"waiting_time":0,"working_time":40,"arriving_time":1,"departure_time":1,"total_time":42,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T10:02:00+03:00"},"distance":15976},"orders_count":2,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_2_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":1,"total_time":21,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:21:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_3_visit#0#dmd_"],"measurements":{"driving_time":20,"waiting_time":0,"working_time":20,"arriving_time":1,"departure_time":0,"total_time":21,"time_window":{"from":"2020-02-04T09:41:00+03:00","to":"2020-02-04T10:02:00+03:00"},"distance":15976},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_14_shft_perf_performer_1","statistics":{"cost":1020,"reward":1000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"distance":0},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.7471,"longitude":37.5986,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_4_visit#3#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}]},"validations":[],"unplanned_orders":[]}
            )
        else :
            return AnalyticsTask(
                plan_task = vrt_lss_merchandiser.models.plan_task.PlanTask(
                    performer = vrt_lss_merchandiser.models.performer.Performer(
                        key = 'performer0001', 
                        start_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        finish_location = vrt_lss_merchandiser.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_type = 'CAR', 
                        shifts = [
                            vrt_lss_merchandiser.models.shift.Shift(
                                availability_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-10-21T09:30+03:00', 
                                    to = '2020-10-21T19:45Z', ), 
                                working_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                    from = '2020-10-21T09:30+03:00', 
                                    to = '2020-10-21T19:45Z', ), 
                                trip = vrt_lss_merchandiser.models.trip.Trip(
                                    key = 'trip01', 
                                    trip_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-10-21T09:30+03:00', 
                                        to = '2020-10-21T19:45Z', ), 
                                    actions = [
                                        vrt_lss_merchandiser.models.order_action.OrderAction(
                                            order = vrt_lss_merchandiser.models.order.Order(
                                                key = 'order0001', 
                                                location = vrt_lss_merchandiser.models.location.Location(
                                                    latitude = 55.692789, 
                                                    longitude = 37.554554, 
                                                    arrival_duration = 15, 
                                                    departure_duration = 5, ), 
                                                visits = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-10-21T09:30+03:00', 
                                                            to = '2020-10-21T19:45Z', ), )
                                                    ], 
                                                facts = [
                                                    vrt_lss_merchandiser.models.event_window.EventWindow(
                                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                            from = '2020-10-21T09:30+03:00', 
                                                            to = '2020-10-21T19:45Z', ), )
                                                    ], 
                                                duration = 30, 
                                                reward = 199.1, ), 
                                            order_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-10-21T09:30+03:00', 
                                                to = '2020-10-21T19:45Z', ), 
                                            location_time = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                                from = '2020-10-21T09:30+03:00', 
                                                to = '2020-10-21T19:45Z', ), )
                                        ], 
                                    waitlist = [
                                        vrt_lss_merchandiser.models.trip_waitlist.Trip_waitlist()
                                        ], ), )
                            ], 
                        tariff = vrt_lss_merchandiser.models.tariff.Tariff(
                            basic = vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                cost_per_shift = 1000.9, 
                                cost_per_meter = 0.05, 
                                max_length = 200000, 
                                cost_per_minute = 0.12, 
                                max_time = 480, ), 
                            extra = [
                                vrt_lss_merchandiser.models.tariff_primary.TariffPrimary(
                                    cost_per_shift = 1000.9, 
                                    cost_per_meter = 0.05, 
                                    max_length = 200000, 
                                    cost_per_minute = 0.12, 
                                    max_time = 480, )
                                ], ), ), 
                    orders = [
                        vrt_lss_merchandiser.models.order.Order(
                            key = 'order0001', 
                            location = vrt_lss_merchandiser.models.location.Location(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                arrival_duration = 15, 
                                departure_duration = 5, ), 
                            visits = [
                                vrt_lss_merchandiser.models.event_window.EventWindow(
                                    time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                        from = '2020-10-21T09:30+03:00', 
                                        to = '2020-10-21T19:45Z', ), )
                                ], 
                            duration = 30, 
                            reward = 199.1, )
                        ], 
                    settings = vrt_lss_merchandiser.models.plan_settings.PlanSettings(
                        configuration = 'default', 
                        planning_time = 30, 
                        result_ttl = 10, 
                        result_timezone = 3, 
                        predict_slots = 2, 
                        transport_factor = [
                            vrt_lss_merchandiser.models.transport_factor.TransportFactor(
                                transport_type = 'CAR', 
                                speed = 2.5, )
                            ], 
                        capacity_factor = [
                            vrt_lss_merchandiser.models.capacity_factor.CapacityFactor(
                                transport_type = 'CAR', 
                                capacity = 2.5, )
                            ], 
                        routing = [
                            vrt_lss_merchandiser.models.routing.Routing(
                                transport_type = 'CAR', 
                                matrix = {"waypoints":[{"latitude":59.9345,"longitude":30.1504},{"latitude":59.942383,"longitude":30.258951},{"latitude":59.9545,"longitude":30.2004},{"latitude":59.89527,"longitude":30.261747},{"latitude":59.9745,"longitude":30.5004}],"distances":[[0,5822,1820,14130,23304],[5936,0,4931,8365,17731],[1819,4853,0,13161,22335],[14859,9056,13854,0,21440],[21777,16306,20772,19290,0]],"durations":[[0,13,7,24,36],[13,0,9,13,25],[7,9,0,21,32],[26,14,22,0,30],[34,23,30,28,0]]}, 
                                traffic_jams = [
                                    vrt_lss_merchandiser.models.traffic_factor.TrafficFactor(
                                        time_window = vrt_lss_merchandiser.models.time_window.TimeWindow(
                                            from = '2020-10-21T09:30+03:00', 
                                            to = '2020-10-21T19:45Z', ), 
                                        length_multiplier = 2, 
                                        length_additive = 20, 
                                        time_multiplier = 2, 
                                        time_additive = 30, )
                                    ], )
                            ], 
                        assumptions = vrt_lss_merchandiser.models.plan_assumptions.PlanAssumptions(
                            flight_distance = True, 
                            disable_compatibility = True, 
                            disable_capacity = True, 
                            same_order_time_window = True, 
                            expand_shift_time_window = True, ), 
                        precision = 2, ), 
                    merchandiser_settings = vrt_lss_merchandiser.models.merchandiser_settings.MerchandiserSettings(
                        accuracy = 'DAY', ), ),
                plan_result = {"tracedata":{"code":"test_LssTesting_MerchandiserServicePlanner_2020-02-13 11:53_1296afd8-678a-4ad5-b256-c193edadffa6"},"timetable":{"key":"performer_1","start_location":{"latitude":55.7664,"longitude":37.503,"arrival_duration":0,"departure_duration":0},"finish_location":{"latitude":55.7664,"longitude":37.503,"arrival_duration":0,"departure_duration":0},"transport_type":"CAR","shifts":[{"availability_time":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-01T19:00:00+03:00"},"working_time":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-01T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-02T09:00:00+03:00","to":"2020-02-02T19:00:00+03:00"},"working_time":{"from":"2020-02-02T09:00:00+03:00","to":"2020-02-02T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-03T09:00:00+03:00","to":"2020-02-03T19:00:00+03:00"},"working_time":{"from":"2020-02-03T09:00:00+03:00","to":"2020-02-03T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"},"working_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"},"trip":{"key":"trip_3_shft_perf_performer_1","trip_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T10:02:00+03:00"},"actions":[{"order":{"key":"order_2_visit#0","location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-15T09:00:00+03:00"}},{"time_window":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:20:00+03:00"},"location_time":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:20:00+03:00"}},{"order":{"key":"order_3_visit#0","location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"time_window":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"}},{"time_window":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-04T09:42:00+03:00","to":"2020-02-04T10:02:00+03:00"},"location_time":{"from":"2020-02-04T09:42:00+03:00","to":"2020-02-04T10:02:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-07T19:00:00+03:00"},"working_time":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-07T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-08T09:00:00+03:00","to":"2020-02-08T19:00:00+03:00"},"working_time":{"from":"2020-02-08T09:00:00+03:00","to":"2020-02-08T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-09T09:00:00+03:00","to":"2020-02-09T19:00:00+03:00"},"working_time":{"from":"2020-02-09T09:00:00+03:00","to":"2020-02-09T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-10T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"},"working_time":{"from":"2020-02-10T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"},"working_time":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-14T19:00:00+03:00"},"working_time":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-14T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-15T09:00:00+03:00","to":"2020-02-15T19:00:00+03:00"},"working_time":{"from":"2020-02-15T09:00:00+03:00","to":"2020-02-15T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-16T19:00:00+03:00"},"working_time":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-16T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-17T09:00:00+03:00","to":"2020-02-17T19:00:00+03:00"},"working_time":{"from":"2020-02-17T09:00:00+03:00","to":"2020-02-17T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"},"working_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"},"trip":{"key":"trip_13_shft_perf_performer_1","trip_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T10:02:00+03:00"},"actions":[{"order":{"key":"order_2_visit#1","location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-15T09:00:00+03:00"}},{"time_window":{"from":"2020-02-16T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:20:00+03:00"},"location_time":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:20:00+03:00"}},{"order":{"key":"order_3_visit#1","location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-10T19:00:00+03:00"}},{"time_window":{"from":"2020-02-11T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"}},{"time_window":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-18T09:42:00+03:00","to":"2020-02-18T10:02:00+03:00"},"location_time":{"from":"2020-02-18T09:42:00+03:00","to":"2020-02-18T10:02:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"},"working_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T19:00:00+03:00"},"trip":{"key":"trip_14_shft_perf_performer_1","trip_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"actions":[{"order":{"key":"order_4_visit#3","location":{"latitude":55.7471,"longitude":37.5986,"arrival_duration":1,"departure_duration":1},"visits":[{"time_window":{"from":"2020-02-01T09:00:00+03:00","to":"2020-02-04T19:00:00+03:00"}},{"time_window":{"from":"2020-02-07T09:00:00+03:00","to":"2020-02-11T19:00:00+03:00"}},{"time_window":{"from":"2020-02-14T09:00:00+03:00","to":"2020-02-18T19:00:00+03:00"}},{"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"}}],"duration":20,"reward":1000},"order_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"location_time":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"}}],"waitlist":[]}},{"availability_time":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-22T19:00:00+03:00"},"working_time":{"from":"2020-02-22T09:00:00+03:00","to":"2020-02-22T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-23T09:00:00+03:00","to":"2020-02-23T19:00:00+03:00"},"working_time":{"from":"2020-02-23T09:00:00+03:00","to":"2020-02-23T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-24T09:00:00+03:00","to":"2020-02-24T19:00:00+03:00"},"working_time":{"from":"2020-02-24T09:00:00+03:00","to":"2020-02-24T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-25T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"},"working_time":{"from":"2020-02-25T09:00:00+03:00","to":"2020-02-25T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-28T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"},"working_time":{"from":"2020-02-28T09:00:00+03:00","to":"2020-02-28T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-29T09:00:00+03:00","to":"2020-02-29T19:00:00+03:00"},"working_time":{"from":"2020-02-29T09:00:00+03:00","to":"2020-02-29T19:00:00+03:00"}},{"availability_time":{"from":"2020-02-27T09:00:00+03:00","to":"2020-02-27T19:00:00+03:00"},"working_time":{"from":"2020-02-27T09:00:00+03:00","to":"2020-02-27T19:00:00+03:00"}}],"tariff":{"basic":{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":1,"max_time":300},"extra":[{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":2,"max_time":240},{"cost_per_shift":1000,"cost_per_meter":0.01,"max_length":1159116,"cost_per_minute":3,"max_time":120}]}},"statistics":{"total_statistics":{"cost":3463.52,"reward":5000,"measurements":{"driving_time":40,"waiting_time":0,"working_time":100,"arriving_time":2,"departure_time":2,"total_time":104,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-21T09:00:00+03:00"},"distance":31952},"orders_count":5,"performers_count":3,"capacity_utilization":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"trips_statistics":[{"trip_key":"trip_13_shft_perf_performer_1","statistics":{"cost":1221.76,"reward":2000,"measurements":{"driving_time":20,"waiting_time":0,"working_time":40,"arriving_time":1,"departure_time":1,"total_time":42,"time_window":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T10:02:00+03:00"},"distance":15976},"orders_count":2,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_2_visit#1#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":1,"total_time":21,"time_window":{"from":"2020-02-18T09:00:00+03:00","to":"2020-02-18T09:21:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_3_visit#1#dmd_"],"measurements":{"driving_time":20,"waiting_time":0,"working_time":20,"arriving_time":1,"departure_time":0,"total_time":21,"time_window":{"from":"2020-02-18T09:41:00+03:00","to":"2020-02-18T10:02:00+03:00"},"distance":15976},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_3_shft_perf_performer_1","statistics":{"cost":1221.76,"reward":2000,"measurements":{"driving_time":20,"waiting_time":0,"working_time":40,"arriving_time":1,"departure_time":1,"total_time":42,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T10:02:00+03:00"},"distance":15976},"orders_count":2,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.6044,"longitude":37.6639,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_2_visit#0#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":1,"total_time":21,"time_window":{"from":"2020-02-04T09:00:00+03:00","to":"2020-02-04T09:21:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"location":{"latitude":55.7278,"longitude":37.6126,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_3_visit#0#dmd_"],"measurements":{"driving_time":20,"waiting_time":0,"working_time":20,"arriving_time":1,"departure_time":0,"total_time":21,"time_window":{"from":"2020-02-04T09:41:00+03:00","to":"2020-02-04T10:02:00+03:00"},"distance":15976},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}},{"trip_key":"trip_14_shft_perf_performer_1","statistics":{"cost":1020,"reward":1000,"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"distance":0},"orders_count":1,"performers_count":1,"capacity_utilization":{"mass":1,"volume":1,"capacity_x":1,"capacity_y":1,"capacity_z":1}},"stop_statistics":[{"location":{"latitude":55.7471,"longitude":37.5986,"arrival_duration":1,"departure_duration":1},"demand_ids":["order_4_visit#3#dmd_"],"measurements":{"driving_time":0,"waiting_time":0,"working_time":20,"arriving_time":0,"departure_time":0,"total_time":20,"time_window":{"from":"2020-02-21T09:00:00+03:00","to":"2020-02-21T09:20:00+03:00"},"distance":0},"current_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}],"total_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}},"max_load":{"count":0,"capacity":{"mass":0,"volume":0,"capacity_x":0,"capacity_y":0,"capacity_z":0}}}]},"validations":[],"unplanned_orders":[]},
        )

    def testAnalyticsTask(self):
        """Test AnalyticsTask"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
