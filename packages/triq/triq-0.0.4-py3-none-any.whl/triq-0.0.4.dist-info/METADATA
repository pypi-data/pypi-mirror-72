Metadata-Version: 2.1
Name: triq
Version: 0.0.4
Summary: Use trio async framework with PySide2/PyQt5
Home-page: https://github.com/innodatalabs/triq/
Author: Mike Kroutikov
Author-email: mkroutikov@innodata.com
License: MIT
Keywords: pyqt pyside async trio
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
Requires-Dist: trio (~=0.16.0)

# triq
Use [trio](https://github.com/python-trio/trio) async framework
with PyQt5/PySide2

## Caution
This is an alpha-quality software.

## How to
```python
...
import triq
import trio

async def some_async_func(message):
    await trio.sleep(0.5)
    print(message)

app = QApplication([])

hitme = QPushButton('Hit me')
hitme.clicked.connect(lambda: triq.call_async(some_async_func, 'hello, world!'))
hitme.show()

bye = QPushButton('Bye')
bye.clicked.connect(triq.exit)
bye.show()

triq.run(app)
```

The above should work in PyQt5 and PySide2


