Metadata-Version: 2.1
Name: fhir.resources
Version: 5.1.1
Summary: FHIR Resources as Model Class
Home-page: https://github.com/nazrulworld/fhir.resources
Author: Md Nazrul Islam
Author-email: email2nazrul@gmail.com
License: BSD license
Description: =================================
        FHIR® Resources (R4, STU3, DSTU2)
        =================================
        
        
        .. image:: https://img.shields.io/pypi/v/fhir.resources.svg
                :target: https://pypi.python.org/pypi/fhir.resources
        
        .. image:: https://img.shields.io/pypi/pyversions/fhir.resources.svg
                :target: https://pypi.python.org/pypi/fhir.resources
                :alt: Supported Python Versions
        
        .. image:: https://img.shields.io/travis/nazrulworld/fhir.resources.svg
                :target: https://travis-ci.org/nazrulworld/fhir.resources
        
        .. image:: https://codecov.io/gh/nazrulworld/fhir.resources/branch/master/graph/badge.svg
                :target: https://codecov.io/gh/nazrulworld/fhir.resources
        
        .. image:: https://img.shields.io/badge/code%20style-black-000000.svg
            :target: https://github.com/psf/black
        
        .. image:: https://fire.ly/wp-content/themes/fhir/images/fhir.svg
                :target: https://www.hl7.org/implement/standards/product_brief.cfm?product_id=449
                :alt: HL7® FHIR®
        
        
        
        All `FHIR Resources <https://www.hl7.org/fhir/resourcelist.html>`_ are available as python class with built-in
        initial validation, exporter as json value.
        
        * Provides ``Resource Factory`` class (see example 4) to create resource object in more convenient way.
        * Previous version of FHIR® Resources are available.
        * Fully support for `fhirclient <https://pypi.org/project/fhirclient/>`_ as models.
        * Free software: BSD license
        
        
        FHIR® Version Info
        ------------------
        
        FHIR® (Release R4, version 4.0.1) is available as default. Also previous versions are available as Python sub-package
        (each release name string becomes sub-package name, i.e ``STU3`` ).
        
        **Available Previous Versions**:
        
        * ``STU3`` (3.0.2)
        
        * ``DSTU2`` (1.0.2)
        
        Installation
        ------------
        
        Just a simple ``pip install fhir.resources`` or ``easy_install fhir.resources`` is enough. But if you want development
        version, just clone from https://github.com/nazrulworld/fhir.resources and ``python setup.py install``.
        
        
        **Example: 1**: Resource object created from json string::
        
        
            >>> from fhir.resources.organization import Organization
            >>> from fhir.resources.address import Address
            >>> json_dict = {"resourceType": "Organization",
            ...     "id": "mmanu",
            ...     "active": True,
            ...     "name": "Acme Corporation",
            ...     "address": [{"country": "Swizterland"}]
            ... }
            >>> org = Organization(json_dict)
            >>> isinstance(org.address[0], Address)
            >>> True
            >>> org.address[0].country == "Swizterland"
            True
            >>> org.as_json()['active'] is True
            True
        
        
        **Example: 2**: Construct resource object in python way::
        
        
            >>> org = Organization()
            >>> org.id = "mmanu"
            >>> org.active = True
            >>> org.name = "Acme Corporation"
            >>> org.address = list()
            >>> address = Address()
            >>> address.country = "Swizterland"
            >>> org.address.append(address)
            >>> org.as_json() == json_dict
            True
        
        
        **Example: 3**: Auto validation while providing wrong datatype::
        
            >>> from fhir.resources.fhirabstractbase import FHIRValidationError
            >>> try:
            ...     org = Organization({"id": "fmk", "address": ["i am wrong type"]})
            ...     raise AssertionError("Code should not come here")
            ... except FHIRValidationError:
            ...     pass
        
        
        **Example: 4**: Using Resource Factory::
        
            This package provides a convenient factory to create FHIR® resource, you never need to import manually each resource class.
        
            >>> from fhir.resources.fhirelementfactory import FHIRElementFactory
            >>> json_dict = {"resourceType": "Organization",
            ...     "id": "mmanu",
            ...     "active": True,
            ...     "name": "Acme Corporation",
            ...     "address": [{"country": "Swizterland"}]
            ... }
            >>> org = FHIRElementFactory.instantiate('Organization', json_dict)
            >>> org.address[0].country == "Swizterland"
            True
            >>> org.as_json()['active'] is True
            True
        
        Release and Version Policy
        --------------------------
        
        Starting from  version ``5.0.0`` we are following our own release policy and we although follow Semantic Versioning scheme like FHIR® version.
        Unlike previous statement (bellow), releasing now is not dependent on FHIR®.
        
        
        **removed statement**
        
            This package is following `FHIR® release and versioning policy <https://www.hl7.org/fhir/versions.html>`_, for example say, FHIR releases next version 4.0.1,
            we also release same version here.
        
        
        Credits
        -------
        
        All FHIR® Resources (python classes) are generated using fhir-parser_ which is forked from https://github.com/smart-on-fhir/fhir-parser.git.
        
        
        This package skeleton was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        .. _`fhir-parser`: https://github.com/nazrulworld/fhir-parser
        
        © Copyright HL7® logo, FHIR® logo and the flaming fire are registered trademarks
        owned by `Health Level Seven International <https://www.hl7.org/legal/trademarks.cfm?ref=https://pypi.org/project/fhir-resources/>`_
        
        .. role:: strike
            :class: strike
        
        
        =======
        History
        =======
        
        5.1.1 (2020-06-26)
        ------------------
        Improvements
        
        - Strict flag support to FHIRElementFactory classes [mmabey]
        
        Bugfixes
        
        - Fixed cyclical import that starts in BackboneElement (DSTU2) [mmabey]
        
        
        5.1.0 (2020-04-11)
        ------------------
        
        Improvements
        
        - FHIR ``STU3`` release version upgraded from ``3.0.1`` to ``3.0.2``, Please find changes history here https://www.hl7.org/fhir/history.html.
        
        - FHIR ``R4`` release version upgraded from ``4.0.0`` to ``4.0.1``, find changes history here https://www.hl7.org/fhir/history.html.
        
        
        5.0.1 (2019-07-18)
        ------------------
        
        Bugfixes:
        
        - `Issue#5 <https://github.com/nazrulworld/fhir.resources/issues/5>`_ confusing error message "name 'self' is not defined" [nazrulworld]
        
        
        5.0.0 (2019-06-08)
        ------------------
        
        - Nothing but release stable version.
        
        
        5.0.0b3 (2019-05-14)
        --------------------
        
        New features
        
        - Isuue#1 `Add DSTU2 Support <https://github.com/nazrulworld/fhir.resources/issues/1>`_
        
        
        5.0.0b2 (2019-05-13)
        --------------------
        
        Breaking or Improvments
        
        - ``elementProperties``: element now has extra property ``type_name``. Now format like ``(name, json_name, type, type_name, is_list, "of_many", not_optional)``
          The ``type_name`` refers original type name (code) from FHIR Structure Definition and it would be very helpful while
          making fhir search, fhirpath navigator.
        
        
        
        5.0.0b1 (2019-01-19)
        --------------------
        
        New features
        
        - Implemented own build policy, now previous version of FHIR® resources are available as python sub-package.
        
        Build info
        
        - Default version is ``R4`` (see version info at `4.0.0b1 (2019-01-13)` section)
        
        - ``STU3`` (see version info at `3.0.1 (2019-01-13)` section)
        
        
        4.0.0 (2019-01-14)
        ------------------
        
        - see version info at ``4.0.0b1`` section.
        
        
        4.0.0b1 (2019-01-13)
        --------------------
        
        `Version Info (R4)`_ ::
        
            [FHIR]
            FhirVersion=4.0.0-a53ec6ee1b
            version=4.0.0
            buildId=a53ec6ee1b
            date=20181227223754
        
        
        
        3.0.1 (2019-01-13)
        ------------------
        
        `Version Info (STU3)`_ ::
        
            [FHIR]
            FhirVersion=3.0.1.11917
            version=3.0.1
            revision=11917
            date=20170419074443
        
        
        .. _`Version Info (STU3)`: http://hl7.org/fhir/stu3/
        .. _`Version Info (R4)`: http://hl7.org/fhir/R4/
        
Keywords: fhir,resources,python,hl7,health IT,healthcare
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Provides-Extra: test
Provides-Extra: all
