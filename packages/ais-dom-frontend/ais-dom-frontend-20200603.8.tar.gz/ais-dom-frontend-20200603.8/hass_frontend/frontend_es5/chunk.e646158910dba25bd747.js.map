{"version":3,"file":"chunk.e646158910dba25bd747.js","sources":["webpack:///./src/panels/config/areas/dialog-area-registry-detail.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/dialog/ha-paper-dialog\";\nimport { AreaRegistryEntryMutableParams } from \"../../../data/area_registry\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { AreaRegistryDetailDialogParams } from \"./show-dialog-area-registry-detail\";\n\nclass DialogAreaDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _name!: string;\n\n  @property() private _error?: string;\n\n  @property() private _params?: AreaRegistryDetailDialogParams;\n\n  @property() private _submitting?: boolean;\n\n  public async showDialog(\n    params: AreaRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._name = this._params.entry ? this._params.entry.name : \"\";\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const entry = this._params.entry;\n    const nameInvalid = this._name.trim() === \"\";\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>\n          ${entry\n            ? entry.name\n            : this.hass.localize(\"ui.panel.config.areas.editor.default_name\")}\n        </h2>\n        <paper-dialog-scrollable>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            ${entry\n              ? html`\n                  <div>\n                    ${this.hass.localize(\n                      \"ui.panel.config.areas.editor.area_id\"\n                    )}:\n                    ${entry.area_id}\n                  </div>\n                `\n              : \"\"}\n\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              .label=${this.hass.localize(\"ui.panel.config.areas.editor.name\")}\n              .errorMessage=${this.hass.localize(\n                \"ui.panel.config.areas.editor.name_required\"\n              )}\n              .invalid=${nameInvalid}\n            ></paper-input>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          ${entry\n            ? html`\n                <mwc-button\n                  class=\"warning\"\n                  @click=\"${this._deleteEntry}\"\n                  .disabled=${this._submitting}\n                >\n                  ${this.hass.localize(\"ui.panel.config.areas.editor.delete\")}\n                </mwc-button>\n              `\n            : html``}\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${nameInvalid || this._submitting}\n          >\n            ${entry\n              ? this.hass.localize(\"ui.panel.config.areas.editor.update\")\n              : this.hass.localize(\"ui.panel.config.areas.editor.create\")}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: AreaRegistryEntryMutableParams = {\n        name: this._name.trim(),\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry!(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error =\n        err.message ||\n        this.hass.localize(\"ui.panel.config.areas.editor.unknown_error\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .form {\n          padding-bottom: 24px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-area-registry-detail\": DialogAreaDetail;\n  }\n}\n\ncustomElements.define(\"dialog-area-registry-detail\", DialogAreaDetail);\n"],"mappings":"AAkBA","sourceRoot":""}