{"version":3,"file":"chunk.c1956578c074621ec6ba.js","sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-button-toggle-group.ts","webpack:///./src/panels/calendar/ha-full-calendar.ts","webpack:///./src/panels/calendar/ha-panel-calendar.ts"],"sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html` <div class=\"card-header\">${this.header}</div> `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import {\n  customElement,\n  html,\n  TemplateResult,\n  property,\n  LitElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\n\nimport \"./ha-icon-button\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { ToggleButton } from \"../types\";\n\n@customElement(\"ha-button-toggle-group\")\nexport class HaButtonToggleGroup extends LitElement {\n  @property() public buttons!: ToggleButton[];\n\n  @property() public active?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div>\n        ${this.buttons.map(\n          (button) => html` <ha-icon-button\n            .label=${button.label}\n            .icon=${button.icon}\n            .value=${button.value}\n            ?active=${this.active === button.value}\n            @click=${this._handleClick}\n          >\n          </ha-icon-button>`\n        )}\n      </div>\n    `;\n  }\n\n  private _handleClick(ev): void {\n    this.active = ev.target.value;\n    fireEvent(this, \"value-changed\", { value: this.active });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      div {\n        display: flex;\n        --mdc-icon-button-size: var(--button-toggle-size, 36px);\n        --mdc-icon-size: var(--button-toggle-icon-size, 20px);\n      }\n      ha-icon-button {\n        border: 1px solid var(--primary-color);\n        border-right-width: 0px;\n        position: relative;\n      }\n      ha-icon-button::before {\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        background-color: currentColor;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\";\n        transition: opacity 15ms linear, background-color 15ms linear;\n      }\n      ha-icon-button[active]::before {\n        opacity: var(--mdc-icon-button-ripple-opacity, 0.12);\n      }\n      ha-icon-button:first-child {\n        border-radius: 4px 0 0 4px;\n      }\n      ha-icon-button:last-child {\n        border-radius: 0 4px 4px 0;\n        border-right-width: 1px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-toggle-button\": HaButtonToggleGroup;\n  }\n}\n","import {\n  property,\n  PropertyValues,\n  LitElement,\n  CSSResult,\n  html,\n  css,\n  unsafeCSS,\n  TemplateResult,\n} from \"lit-element\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n// @ts-ignore\nimport fullcalendarStyle from \"@fullcalendar/core/main.css\";\n// @ts-ignore\nimport daygridStyle from \"@fullcalendar/daygrid/main.css\";\nimport \"@material/mwc-button\";\n\nimport \"../../components/ha-icon-button\";\nimport \"../../components/ha-button-toggle-group\";\n\nimport type {\n  CalendarViewChanged,\n  CalendarEvent,\n  ToggleButton,\n  HomeAssistant,\n} from \"../../types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { haStyle } from \"../../resources/styles\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"view-changed\": CalendarViewChanged;\n  }\n}\n\nconst fullCalendarConfig = {\n  headerToolbar: false,\n  plugins: [dayGridPlugin],\n  initialView: \"dayGridMonth\",\n  dayMaxEventRows: true,\n  height: \"parent\",\n};\n\nconst viewButtons: ToggleButton[] = [\n  { label: \"Month View\", value: \"dayGridMonth\", icon: \"hass:view-module\" },\n  { label: \"Week View\", value: \"dayGridWeek\", icon: \"hass:view-week\" },\n  { label: \"Day View\", value: \"dayGridDay\", icon: \"hass:view-day\" },\n];\n\nclass HAFullCalendar extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public events: CalendarEvent[] = [];\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  @property() private calendar?: Calendar;\n\n  @property() private _activeView = \"dayGridMonth\";\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.calendar\n        ? html`\n            <div class=\"header\">\n              ${!this.narrow\n                ? html`\n                    <div class=\"navigation\">\n                      <mwc-button\n                        outlined\n                        class=\"today\"\n                        @click=${this._handleToday}\n                        >${this.hass.localize(\n                          \"ui.panel.calendar.today\"\n                        )}</mwc-button\n                      >\n                      <ha-icon-button\n                        label=${this.hass.localize(\"ui.common.previous\")}\n                        icon=\"hass:chevron-left\"\n                        class=\"prev\"\n                        @click=${this._handlePrev}\n                      >\n                      </ha-icon-button>\n                      <ha-icon-button\n                        label=${this.hass.localize(\"ui.common.next\")}\n                        icon=\"hass:chevron-right\"\n                        class=\"next\"\n                        @click=${this._handleNext}\n                      >\n                      </ha-icon-button>\n                    </div>\n                    <h1>\n                      ${this.calendar.view.title}\n                    </h1>\n                    <ha-button-toggle-group\n                      .buttons=${viewButtons}\n                      .active=${this._activeView}\n                      @value-changed=${this._handleView}\n                    ></ha-button-toggle-group>\n                  `\n                : html`\n                    <div class=\"controls\">\n                      <mwc-button\n                        outlined\n                        class=\"today\"\n                        @click=${this._handleToday}\n                        >${this.hass.localize(\n                          \"ui.panel.calendar.today\"\n                        )}</mwc-button\n                      >\n                      <ha-button-toggle-group\n                        .buttons=${viewButtons}\n                        .active=${this._activeView}\n                        @value-changed=${this._handleView}\n                      ></ha-button-toggle-group>\n                    </div>\n                    <div class=\"controls\">\n                      <h1>\n                        ${this.calendar.view.title}\n                      </h1>\n                      <div>\n                        <ha-icon-button\n                          label=${this.hass.localize(\"ui.common.previous\")}\n                          icon=\"hass:chevron-left\"\n                          class=\"prev\"\n                          @click=${this._handlePrev}\n                        >\n                        </ha-icon-button>\n                        <ha-icon-button\n                          label=${this.hass.localize(\"ui.common.next\")}\n                          icon=\"hass:chevron-right\"\n                          class=\"next\"\n                          @click=${this._handleNext}\n                        >\n                        </ha-icon-button>\n                      </div>\n                    </div>\n                  `}\n            </div>\n          `\n        : \"\"}\n      <div id=\"calendar\"></div>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (!this.calendar) {\n      return;\n    }\n\n    if (changedProps.has(\"events\")) {\n      this.calendar.removeAllEventSources();\n      this.calendar.addEventSource(this.events);\n    }\n  }\n\n  protected firstUpdated(): void {\n    const config = { ...fullCalendarConfig, locale: this.hass.language };\n\n    this.calendar = new Calendar(\n      this.shadowRoot!.getElementById(\"calendar\")!,\n      // @ts-ignore\n      config\n    );\n\n    this.calendar!.render();\n    this._fireViewChanged();\n  }\n\n  private _handleNext(): void {\n    this.calendar!.next();\n    this._fireViewChanged();\n  }\n\n  private _handlePrev(): void {\n    this.calendar!.prev();\n    this._fireViewChanged();\n  }\n\n  private _handleToday(): void {\n    this.calendar!.today();\n    this._fireViewChanged();\n  }\n\n  private _handleView(ev): void {\n    this._activeView = ev.detail.value;\n    this.calendar!.changeView(this._activeView);\n    this._fireViewChanged();\n  }\n\n  private _fireViewChanged(): void {\n    fireEvent(this, \"view-changed\", {\n      start: this.calendar!.view.activeStart,\n      end: this.calendar!.view.activeEnd,\n      view: this.calendar!.view.type,\n    });\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        ${unsafeCSS(fullcalendarStyle)}\n        ${unsafeCSS(daygridStyle)}\n\n      :host {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding-bottom: 8px;\n        }\n\n        :host([narrow]) .header {\n          padding-right: 8px;\n          padding-left: 8px;\n          flex-direction: column;\n          align-items: flex-start;\n          justify-content: initial;\n        }\n\n        .navigation {\n          display: flex;\n          align-items: center;\n          flex-grow: 0;\n        }\n\n        .controls {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n\n        .today {\n          margin-right: 20px;\n        }\n\n        .prev,\n        .next {\n          --mdc-icon-button-size: 32px;\n        }\n\n        ha-button-toggle-group {\n          color: var(--primary-color);\n        }\n\n        #calendar {\n          flex-grow: 1;\n          background-color: var(--card-background-color);\n        }\n\n        .fc-scrollgrid-section-header td {\n          border: none;\n        }\n\n        th.fc-col-header-cell.fc-day {\n          color: #70757a;\n          font-size: 11px;\n          font-weight: 400;\n          text-transform: uppercase;\n        }\n\n        .fc-daygrid-day-top {\n          text-align: center;\n          padding-top: 8px;\n        }\n\n        table.fc-scrollgrid-sync-table\n          tbody\n          tr:first-child\n          .fc-daygrid-day-top {\n          padding-top: 0;\n        }\n\n        a.fc-daygrid-day-number {\n          float: none !important;\n          font-size: 12px;\n        }\n\n        td.fc-day-today {\n          background: inherit;\n        }\n\n        td.fc-day-today .fc-daygrid-day-number {\n          height: 24px;\n          color: #fff;\n          background-color: #1a73e8;\n          border-radius: 50%;\n          display: inline-block;\n          text-align: center;\n          white-space: nowrap;\n          width: max-content;\n          min-width: 24px;\n        }\n\n        .fc-daygrid-day-events {\n          margin-top: 4px;\n        }\n\n        .fc-event {\n          border-radius: 4px;\n          line-height: 1.7;\n        }\n\n        .fc-daygrid-block-event .fc-event-main {\n          padding: 0 1px;\n        }\n\n        .fc-day-past .fc-daygrid-day-events {\n          opacity: 0.5;\n        }\n\n        .fc-icon-x:before {\n          font-family: var(--material-font-family);\n          content: \"X\";\n        }\n\n        .fc-popover {\n          background-color: var(--primary-background-color) !important;\n        }\n\n        .fc-popover-header {\n          background-color: var(--secondary-background-color) !important;\n        }\n      `,\n    ];\n  }\n}\n\nwindow.customElements.define(\"ha-full-calendar\", HAFullCalendar);\n","import {\n  customElement,\n  LitElement,\n  property,\n  CSSResultArray,\n  css,\n  TemplateResult,\n  html,\n  PropertyValues,\n} from \"lit-element\";\nimport { styleMap } from \"lit-html/directives/style-map\";\n\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-checkbox\";\nimport \"@material/mwc-formfield\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport \"./ha-full-calendar\";\n\nimport type {\n  HomeAssistant,\n  SelectedCalendar,\n  CalendarEvent,\n  CalendarViewChanged,\n  Calendar,\n} from \"../../types\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HASSDomEvent } from \"../../common/dom/fire_event\";\nimport { getCalendars, fetchCalendarEvents } from \"../../data/calendar\";\n\n@customElement(\"ha-panel-calendar\")\nclass PanelCalendar extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  @property() private _calendars: SelectedCalendar[] = [];\n\n  @property() private _events: CalendarEvent[] = [];\n\n  private _start?: Date;\n\n  private _end?: Date;\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._calendars = getCalendars(this.hass).map((calendar) => ({\n      selected: true,\n      calendar,\n    }));\n\n    if (!this._start || !this._end) {\n      return;\n    }\n\n    this._fetchEvents(this._start, this._end, this._selectedCalendars);\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>${this.hass.localize(\"panel.calendar\")}</div>\n            <ha-icon-button\n              icon=\"hass:refresh\"\n              @click=${this._handleRefresh}\n            ></ha-icon-button>\n          </app-toolbar>\n        </app-header>\n        <div class=\"content\">\n          <div class=\"calendar-list\">\n            <div class=\"calendar-list-header\">\n              ${this.hass.localize(\"ui.panel.calendar.my_calendars\")}\n            </div>\n            ${this._calendars.map(\n              (selCal) =>\n                html`<div>\n                  <mwc-formfield .label=${selCal.calendar.name}>\n                    <mwc-checkbox\n                      style=${styleMap({\n                        \"--mdc-theme-secondary\":\n                          selCal.calendar.backgroundColor,\n                      })}\n                      .value=${selCal.calendar.entity_id}\n                      .checked=${selCal.selected}\n                      @change=${this._handleToggle}\n                    ></mwc-checkbox>\n                  </mwc-formfield>\n                </div>`\n            )}\n          </div>\n          <ha-full-calendar\n            .events=${this._events}\n            .narrow=${this.narrow}\n            .hass=${this.hass}\n            @view-changed=${this._handleViewChanged}\n          ></ha-full-calendar>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  private get _selectedCalendars(): Calendar[] {\n    return this._calendars\n      .filter((selCal) => selCal.selected)\n      .map((cal) => cal.calendar);\n  }\n\n  private async _fetchEvents(\n    start: Date,\n    end: Date,\n    calendars: Calendar[]\n  ): Promise<CalendarEvent[]> {\n    if (!calendars.length) {\n      return [];\n    }\n\n    return fetchCalendarEvents(this.hass, start, end, calendars);\n  }\n\n  private async _handleToggle(ev): Promise<void> {\n    const results = this._calendars.map(async (cal) => {\n      if (ev.target.value !== cal.calendar.entity_id) {\n        return cal;\n      }\n\n      const checked = ev.target.checked;\n\n      if (checked) {\n        const events = await this._fetchEvents(this._start!, this._end!, [\n          cal.calendar,\n        ]);\n        this._events = [...this._events, ...events];\n      } else {\n        this._events = this._events.filter(\n          (event) => event.calendar !== cal.calendar.entity_id\n        );\n      }\n\n      cal.selected = checked;\n      return cal;\n    });\n\n    this._calendars = await Promise.all(results);\n  }\n\n  private async _handleViewChanged(\n    ev: HASSDomEvent<CalendarViewChanged>\n  ): Promise<void> {\n    this._start = ev.detail.start;\n    this._end = ev.detail.end;\n    this._events = await this._fetchEvents(\n      this._start,\n      this._end,\n      this._selectedCalendars\n    );\n  }\n\n  private async _handleRefresh(): Promise<void> {\n    this._events = await this._fetchEvents(\n      this._start!,\n      this._end!,\n      this._selectedCalendars\n    );\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding: 16px;\n          display: flex;\n          box-sizing: border-box;\n        }\n\n        :host(:not([narrow])) .content {\n          height: calc(100vh - 64px);\n        }\n\n        .calendar-list {\n          padding-right: 16px;\n          min-width: 170px;\n          flex: 0 0 15%;\n          overflow: hidden;\n          --mdc-theme-text-primary-on-background: var(--primary-text-color);\n        }\n\n        .calendar-list > div {\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n\n        .calendar-list-header {\n          font-size: 16px;\n          padding: 16px 16px 8px 8px;\n        }\n\n        ha-full-calendar {\n          flex-grow: 1;\n        }\n\n        :host([narrow]) ha-full-calendar {\n          height: calc(100vh - 72px);\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column-reverse;\n          padding: 8px 0 0 0;\n        }\n\n        :host([narrow]) .calendar-list {\n          margin-bottom: 24px;\n          width: 100%;\n          padding-right: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-calendar\": PanelCalendar;\n  }\n}\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AAEA;;AArDA;;ACaA;AAEA;AACA;AACA;AACA;AACA;;;;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;ACgDA;;AAGA;;;;;AAwCA;AACA;;;AAKA;AACA;AACA;;;;;AAKA;;;;AAIA;;;AAGA;;;;AAIA;;;AAGA;;;;;AAlEA;;;;;AAKA;AACA;;;AAKA;;;AAGA;;;;AAIA;;;AAGA;;;;;AAKA;;;AAGA;AACA;AACA;;;;AA2CA;;AAKA;AA2DA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9JA;;;;;ACkBA;AACA;;AAEA;;;AAGA;;;;;;;AAOA;;AAEA;AAGA;;AAEA;AAIA;AACA;AACA;;;;;;AAOA;AACA;AACA;AACA;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7EA","sourceRoot":""}