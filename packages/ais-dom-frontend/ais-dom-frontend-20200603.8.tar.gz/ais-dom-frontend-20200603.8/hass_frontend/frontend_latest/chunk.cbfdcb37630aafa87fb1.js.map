{"version":3,"file":"chunk.cbfdcb37630aafa87fb1.js","sources":["webpack:///./src/panels/lovelace/cards/hui-ais-monster-card.js"],"sourcesContent":["!(function (t) {\n  var e = {};\n  function i(r) {\n    if (e[r]) return e[r].exports;\n    var s = (e[r] = { i: r, l: !1, exports: {} });\n    return t[r].call(s.exports, s, s.exports, i), (s.l = !0), s.exports;\n  }\n  (i.m = t),\n    (i.c = e),\n    (i.d = function (t, e, r) {\n      i.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: r });\n    }),\n    (i.r = function (t) {\n      \"undefined\" != typeof Symbol &&\n        Symbol.toStringTag &&\n        Object.defineProperty(t, Symbol.toStringTag, { value: \"Module\" }),\n        Object.defineProperty(t, \"__esModule\", { value: !0 });\n    }),\n    (i.t = function (t, e) {\n      if ((1 & e && (t = i(t)), 8 & e)) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var r = Object.create(null);\n      if (\n        (i.r(r),\n        Object.defineProperty(r, \"default\", { enumerable: !0, value: t }),\n        2 & e && \"string\" != typeof t)\n      )\n        for (var s in t)\n          i.d(\n            r,\n            s,\n            function (e) {\n              return t[e];\n            }.bind(null, s)\n          );\n      return r;\n    }),\n    (i.n = function (t) {\n      var e =\n        t && t.__esModule\n          ? function () {\n              return t.default;\n            }\n          : function () {\n              return t;\n            };\n      return i.d(e, \"a\", e), e;\n    }),\n    (i.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }),\n    (i.p = \"\"),\n    i((i.s = 0));\n})([\n  function (t, e, i) {\n    \"use strict\";\n    i.r(e);\n    const r = customElements.get(\"home-assistant-main\")\n        ? Object.getPrototypeOf(customElements.get(\"home-assistant-main\"))\n        : Object.getPrototypeOf(customElements.get(\"hui-view\")),\n      s = r.prototype.html;\n    r.prototype.css;\n    function n() {\n      return document.querySelector(\"hc-main\")\n        ? document.querySelector(\"hc-main\").hass\n        : document.querySelector(\"home-assistant\")\n        ? document.querySelector(\"home-assistant\").hass\n        : void 0;\n    }\n    const a = n().callWS({ type: \"config/area_registry/list\" }),\n      o = n().callWS({ type: \"config/device_registry/list\" }),\n      l = n().callWS({ type: \"config/entity_registry/list\" });\n    async function c() {\n      return (\n        (window.cardToolsData = window.cardToolsData || {\n          areas: await a,\n          devices: await o,\n          entities: await l,\n        }),\n        window.cardToolsData\n      );\n    }\n    function u(t) {\n      const e = window.cardToolsData;\n      let i = [];\n      if (!t) return i;\n      for (const r of e.devices) r.area_id === t.area_id && i.push(r);\n      return i;\n    }\n    function d(t) {\n      const e = window.cardToolsData;\n      let i = [];\n      if (!t) return i;\n      for (const r of e.entities) r.device_id === t.id && i.push(r.entity_id);\n      return i;\n    }\n    function f(t, e) {\n      if (\n        \"string\" == typeof e &&\n        \"string\" == typeof t &&\n        ((t.startsWith(\"/\") && t.endsWith(\"/\")) || -1 !== t.indexOf(\"*\"))\n      ) {\n        return (\n          t.startsWith(\"/\") ||\n            (t = `/^${(t = t.replace(/\\./g, \".\").replace(/\\*/g, \".*\"))}$/`),\n          new RegExp(t.slice(1, -1)).test(e)\n        );\n      }\n      if (\"string\" == typeof t) {\n        if (t.startsWith(\"<=\")) return parseFloat(e) <= parseFloat(t.substr(2));\n        if (t.startsWith(\">=\")) return parseFloat(e) >= parseFloat(t.substr(2));\n        if (t.startsWith(\"<\")) return parseFloat(e) < parseFloat(t.substr(1));\n        if (t.startsWith(\">\")) return parseFloat(e) > parseFloat(t.substr(1));\n        if (t.startsWith(\"!\")) return parseFloat(e) != parseFloat(t.substr(1));\n        if (t.startsWith(\"=\")) return parseFloat(e) == parseFloat(t.substr(1));\n      }\n      return t === e;\n    }\n    function h(t, e) {\n      return function (i) {\n        const r = \"string\" == typeof i ? t.states[i] : t.states[i.entity];\n        if (!i) return !1;\n        for (const [s, n] of Object.entries(e))\n          switch (s.split(\" \")[0]) {\n            case \"options\":\n            case \"sort\":\n              break;\n            case \"domain\":\n              if (!f(n, r.entity_id.split(\".\")[0])) return !1;\n              break;\n            case \"entity_id\":\n              if (!f(n, r.entity_id)) return !1;\n              break;\n            case \"state\":\n              if (!f(n, r.state)) return !1;\n              break;\n            case \"name\":\n              if (\n                !r.attributes.friendly_name ||\n                !f(n, r.attributes.friendly_name)\n              )\n                return !1;\n              break;\n            case \"group\":\n              if (\n                !(\n                  n.startsWith(\"group.\") &&\n                  t.states[n] &&\n                  t.states[n].attributes.entity_id &&\n                  t.states[n].attributes.entity_id.includes(r.entity_id)\n                )\n              )\n                return !1;\n              break;\n            case \"attributes\":\n              for (const [t, e] of Object.entries(n)) {\n                let i = t.trim(),\n                  s = r.attributes;\n                for (; i && s; ) {\n                  let t;\n                  ([t, i] = i.split(\":\")), (s = s[t]);\n                }\n                if (void 0 === s || (void 0 !== e && !f(e, s))) return !1;\n              }\n              break;\n            case \"not\":\n              if (h(t, n)(i)) return !1;\n              break;\n            case \"device\":\n              if (!window.cardToolsData || !window.cardToolsData.devices)\n                return !1;\n              let e = !1;\n              for (const t of window.cardToolsData.devices)\n                f(n, t.name) && d(t).includes(r.entity_id) && (e = !0);\n              if (!e) return !1;\n              break;\n            case \"area\":\n              if (!window.cardToolsData || !window.cardToolsData.areas)\n                return !1;\n              let s = !1;\n              for (const t of window.cardToolsData.areas)\n                f(n, t.name) &&\n                  u(t).flatMap(d).includes(r.entity_id) &&\n                  (s = !0);\n              if (!s) return !1;\n              break;\n            case \"last_changed\":\n              if (\n                !f(\n                  n,\n                  (new Date().getTime() - new Date(r.last_changed).getTime()) /\n                    6e4\n                )\n              )\n                return !1;\n              break;\n            case \"last_updated\":\n              if (\n                !f(\n                  n,\n                  (new Date().getTime() - new Date(r.last_updated).getTime()) /\n                    6e4\n                )\n              )\n                return !1;\n              break;\n            default:\n              return !1;\n          }\n        return !0;\n      };\n    }\n    function g(t, e) {\n      return (\n        \"string\" == typeof e && (e = { method: e }),\n        function (i, r) {\n          const s = \"string\" == typeof i ? t.states[i] : t.states[i.entity],\n            n = \"string\" == typeof r ? t.states[r] : t.states[r.entity];\n          if (void 0 === s || void 0 === n) return 0;\n          const [a, o] = e.reverse ? [-1, 1] : [1, -1];\n          function l(t, i) {\n            return (\n              e.ignore_case && t.toLowerCase && (t = t.toLowerCase()),\n              e.ignore_case && i.toLowerCase && (i = i.toLowerCase()),\n              e.numeric &&\n                ((isNaN(parseFloat(t)) && isNaN(parseFloat(i))) ||\n                  ((t = isNaN(parseFloat(t)) ? void 0 : parseFloat(t)),\n                  (i = isNaN(parseFloat(i)) ? void 0 : parseFloat(i)))),\n              void 0 === t && void 0 === i\n                ? 0\n                : void 0 === t\n                ? a\n                : void 0 === i || t < i\n                ? o\n                : t > i\n                ? a\n                : 0\n            );\n          }\n          switch (e.method) {\n            case \"domain\":\n              return l(s.entity_id.split(\".\")[0], n.entity_id.split(\".\")[0]);\n            case \"entity_id\":\n              return l(s.entity_id, n.entity_id);\n            case \"friendly_name\":\n            case \"name\":\n              return l(\n                s.attributes.friendly_name || s.entity_id.split(\".\")[1],\n                n.attributes.friendly_name || n.entity_id.split(\".\")[1]\n              );\n            case \"state\":\n              return l(s.state, n.state);\n            case \"attribute\":\n              let t = s.attributes,\n                i = n.attributes,\n                r = e.attribute;\n              for (; r; ) {\n                let e;\n                if (\n                  (([e, r] = r.split(\":\")),\n                  (t = t[e]),\n                  (i = i[e]),\n                  void 0 === t && void 0 === i)\n                )\n                  return 0;\n                if (void 0 === t) return a;\n                if (void 0 === i) return o;\n              }\n              return l(t, i);\n            case \"last_changed\":\n            case \"last_updated\":\n              return (\n                (e.numeric = !0),\n                l(\n                  new Date(n.last_changed).getTime(),\n                  new Date(s.last_changed).getTime()\n                )\n              );\n            case \"last_triggered\":\n              return null == s.attributes.last_triggered ||\n                null == n.attributes.last_triggered\n                ? 0\n                : ((e.numeric = !0),\n                  l(\n                    new Date(n.attributes.last_triggered).getTime(),\n                    new Date(s.attributes.last_triggered).getTime()\n                  ));\n            default:\n              return 0;\n          }\n        }\n      );\n    }\n    function p(t, e, i = null) {\n      if (\n        (((t = new Event(t, {\n          bubbles: !0,\n          cancelable: !1,\n          composed: !0,\n        })).detail = e || {}),\n        i)\n      )\n        i.dispatchEvent(t);\n      else {\n        var r = (function () {\n          var t = document.querySelector(\"hc-main\");\n          return (t = t\n            ? (t =\n                (t =\n                  (t = t && t.shadowRoot) && t.querySelector(\"hc-lovelace\")) &&\n                t.shadowRoot) && t.querySelector(\"hui-view\")\n            : (t =\n                (t =\n                  (t =\n                    (t =\n                      (t =\n                        (t =\n                          ((t =\n                            (t =\n                              (t =\n                                (t =\n                                  (t = document.querySelector(\n                                    \"home-assistant\"\n                                  )) && t.shadowRoot) &&\n                                t.querySelector(\"home-assistant-main\")) &&\n                              t.shadowRoot) &&\n                            t.querySelector(\n                              \"app-drawer-layout partial-panel-resolver\"\n                            )) &&\n                            t.shadowRoot) ||\n                          t) && t.querySelector(\"ha-panel-lovelace\")) &&\n                      t.shadowRoot) && t.querySelector(\"hui-root\")) &&\n                  t.shadowRoot) && t.querySelector(\"ha-app-layout #view\")) &&\n              t.firstElementChild);\n        })();\n        r && r.dispatchEvent(t);\n      }\n    }\n    c();\n    let y = window.cardHelpers;\n    const m = new Promise(async (t, e) => {\n      y && t(),\n        window.loadCardHelpers &&\n          ((y = await window.loadCardHelpers()), (window.cardHelpers = y), t());\n    });\n    function _(t, e) {\n      const i = document.createElement(\"hui-error-card\");\n      return (\n        i.setConfig({ type: \"error\", error: t, origConfig: e }),\n        m.then(() => {\n          p(\"ll-rebuild\", {}, i);\n        }),\n        i\n      );\n    }\n    function b(t, e) {\n      if (!e || \"object\" != typeof e || !e.type)\n        return _(`No ${t} type configured`, e);\n      let i = e.type;\n      if (\n        ((i = i.startsWith(\"custom:\")\n          ? i.substr(\"custom:\".length)\n          : `hui-${i}-${t}`),\n        customElements.get(i))\n      )\n        return (function (t, e) {\n          let i = document.createElement(t);\n          try {\n            i.setConfig(JSON.parse(JSON.stringify(e)));\n          } catch (t) {\n            i = _(t, e);\n          }\n          return (\n            m.then(() => {\n              p(\"ll-rebuild\", {}, i);\n            }),\n            i\n          );\n        })(i, e);\n      const r = _(`Custom element doesn't exist: ${i}.`, e);\n      r.style.display = \"None\";\n      const s = setTimeout(() => {\n        r.style.display = \"\";\n      }, 2e3);\n      return (\n        customElements.whenDefined(i).then(() => {\n          clearTimeout(s), p(\"ll-rebuild\", {}, r);\n        }),\n        r\n      );\n    }\n    let w = (function () {\n      if (window.fully && \"function\" == typeof fully.getDeviceId)\n        return fully.getDeviceId();\n      if (!localStorage[\"lovelace-player-device-id\"]) {\n        const t = () =>\n          Math.floor(1e5 * (1 + Math.random()))\n            .toString(16)\n            .substring(1);\n        localStorage[\"lovelace-player-device-id\"] = `${t()}${t()}-${t()}${t()}`;\n      }\n      return localStorage[\"lovelace-player-device-id\"];\n    })();\n    customElements.define(\n      \"hui-ais-monster-card\",\n      class extends r {\n        static get properties() {\n          return { hass: {} };\n        }\n        setConfig(t) {\n          if (!t || !t.card) throw new Error(\"Invalid configuration\");\n          (t = JSON.parse(JSON.stringify(t))),\n            this._config\n              ? ((this._config = t), (this.hass = this.hass))\n              : ((this._config = t),\n                (this.hass = n()),\n                this._getEntities(),\n                (this.cardConfig = { entities: this.entities, ...t.card }),\n                (this.card = (function (t) {\n                  return y ? y.createCardElement(t) : b(\"card\", t);\n                })(this.cardConfig))),\n            t.filter &&\n              t.filter.template &&\n              ((this.template = \"\"),\n              (String(t.filter.template).includes(\"{%\") ||\n                String(t.filter.template).includes(\"{{\")) &&\n                (function (t, e, i) {\n                  t || (t = n().connection);\n                  let r = {\n                      user: n().user.name,\n                      browser: w,\n                      hash: location.hash.substr(1) || \" \",\n                      ...i.variables,\n                    },\n                    s = i.template,\n                    a = i.entity_ids;\n                  t.subscribeMessage(\n                    (t) => {\n                      let i = t.result;\n                      (i = i.replace(\n                        /_\\([^)]*\\)/g,\n                        (t) => n().localize(t.substring(2, t.length - 1)) || t\n                      )),\n                        e(i);\n                    },\n                    {\n                      type: \"render_template\",\n                      template: s,\n                      variables: r,\n                      entity_ids: a,\n                    }\n                  );\n                })(\n                  null,\n                  (t) => {\n                    (this.template = t), this._getEntities();\n                  },\n                  {\n                    template: t.filter.template,\n                    variables: { config: t },\n                    entity_ids: t.filter.entity_ids,\n                  }\n                )),\n            c().then(() => this._getEntities());\n        }\n        _getEntities() {\n          const t = (t) =>\n            t ? (\"string\" == typeof t ? { entity: t.trim() } : t) : null;\n          let e = [];\n          if (\n            (this._config.entities &&\n              (e = e.concat(this._config.entities.map(t))),\n            !this.hass || !this._config.filter)\n          )\n            return e;\n          if (\n            (this.template &&\n              (e = e.concat(this.template.split(/[\\s,]+/).map(t))),\n            (e = e.filter(Boolean)),\n            this._config.filter.include)\n          ) {\n            const i = Object.keys(this.hass.states).map(t);\n            for (const t of this._config.filter.include) {\n              if (void 0 !== t.type) {\n                e.push(t);\n                continue;\n              }\n              let r = i\n                .filter(h(this.hass, t))\n                .map((e) =>\n                  JSON.parse(\n                    JSON.stringify(new Object({ ...e, ...t.options })).replace(\n                      /this.entity_id/g,\n                      e.entity\n                    )\n                  )\n                );\n              void 0 !== t.sort && (r = r.sort(g(this.hass, t.sort))),\n                (e = e.concat(r));\n            }\n          }\n          if (this._config.filter.exclude)\n            for (const t of this._config.filter.exclude)\n              e = e.filter(\n                (e) =>\n                  (\"string\" != typeof e && void 0 === e.entity) ||\n                  !h(this.hass, t)(e)\n              );\n          if (\n            this._config.sort &&\n            ((e = e.sort(g(this.hass, this._config.sort))),\n            this._config.sort.count)\n          ) {\n            const t = this._config.sort.first || 0;\n            e = e.slice(t, t + this._config.sort.count);\n          }\n          if (this._config.unique) {\n            function i(t, e) {\n              return (\n                typeof t == typeof e &&\n                (\"object\" != typeof t\n                  ? t === e\n                  : !Object.keys(t).some((t) => !Object.keys(e).includes(t)) &&\n                    Object.keys(t).every((r) => i(t[r], e[r])))\n              );\n            }\n            let t = [];\n            for (const r of e) t.some((t) => i(t, r)) || t.push(r);\n            e = t;\n          }\n          this.entities = e;\n        }\n        set entities(t) {\n          (function (t, e) {\n            if (t === e) return !0;\n            if (null == t || null == e) return !1;\n            if (t.length != e.length) return !1;\n            for (var i = 0; i < t.length; i++)\n              if (JSON.stringify(t[i]) !== JSON.stringify(e[i])) return !1;\n            return !0;\n          })(t, this._entities) ||\n            ((this._entities = t),\n            (this.cardConfig = {\n              ...this.cardConfig,\n              entities: this._entities,\n            }),\n            0 === t.length && !1 === this._config.show_empty\n              ? ((this.style.display = \"none\"), (this.style.margin = \"0\"))\n              : ((this.style.display = null), (this.style.margin = null)));\n        }\n        get entities() {\n          return this._entities;\n        }\n        set cardConfig(t) {\n          (this._cardConfig = t), this.card && this.card.setConfig(t);\n        }\n        get cardConfig() {\n          return this._cardConfig;\n        }\n        updated(t) {\n          t.has(\"hass\") &&\n            this.hass &&\n            ((this.card.hass = this.hass),\n            setTimeout(() => this._getEntities(), 0));\n        }\n        createRenderRoot() {\n          return this;\n        }\n        render() {\n          return s`\n    ${this.card}`;\n        }\n        getCardSize() {\n          let t = 0;\n          return (\n            this.card && this.card.getCardSize && (t = this.card.getCardSize()),\n            1 === t && this.entities.length && (t = this.entities.length),\n            0 === t &&\n              this._config.filter &&\n              this._config.filter.include &&\n              (t = Object.keys(this._config.filter.include).length),\n            t || 1\n          );\n        }\n      }\n    ),\n      p(\"ll-rebuild\", {});\n  },\n]);\n"],"mappings":"AAAA;AA0jBA","sourceRoot":""}