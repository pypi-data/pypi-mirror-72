{"version":3,"file":"chunk.5023d088fd927fdc0427.js","sources":["webpack:///./node_modules/@polymer/paper-spinner/paper-spinner-lite.js","webpack:///./src/panels/lovelace/cards/hui-starting-card.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a single color material design circular spinner.\n\n    <paper-spinner-lite active></paper-spinner-lite>\n\nThe default spinner is blue. It can be customized to be a different color.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner-lite alt=\"Loading contacts list\" active></paper-spinner-lite>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-color` | Color of the spinner | `--google-blue-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner-lite\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner-lite',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","import \"@material/mwc-button/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { LovelaceCardConfig } from \"../../../data/lovelace\";\nimport \"@polymer/paper-spinner/paper-spinner-lite\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { STATE_NOT_RUNNING } from \"home-assistant-js-websocket\";\n\n@customElement(\"hui-starting-card\")\nexport class HuiStartingCard extends LitElement implements LovelaceCard {\n  @property() public hass?: HomeAssistant;\n\n  public getCardSize(): number {\n    return 2;\n  }\n\n  public setConfig(_config: LovelaceCardConfig): void {\n    // eslint-disable-next-line\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"hass\") || !this.hass!.config) {\n      return;\n    }\n\n    if (this.hass!.config.state !== STATE_NOT_RUNNING) {\n      fireEvent(this, \"config-refresh\");\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"content\">\n        <paper-spinner-lite active></paper-spinner-lite>\n        ${this.hass.localize(\"ui.panel.lovelace.cards.starting.description\")}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: calc(100vh - 64px);\n      }\n      paper-spinner-lite {\n        padding-bottom: 20px;\n      }\n      .content {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-starting-card\": HuiStartingCard;\n  }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;AAiCA;;;ACiBA;;AANA;;;;;;;;;;;;;;;AAxBA","sourceRoot":""}