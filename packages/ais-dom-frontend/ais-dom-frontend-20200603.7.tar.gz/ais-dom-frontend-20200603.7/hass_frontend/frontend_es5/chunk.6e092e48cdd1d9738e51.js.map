{"version":3,"file":"chunk.6e092e48cdd1d9738e51.js","sources":["webpack:///./src/data/lovelace.ts"],"sourcesContent":["import {\n  Connection,\n  getCollection,\n  HassEventBase,\n} from \"home-assistant-js-websocket\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface LovelacePanelConfig {\n  mode: \"yaml\" | \"storage\";\n}\n\nexport interface LovelaceConfig {\n  title?: string;\n  views: LovelaceViewConfig[];\n  background?: string;\n}\n\nexport interface LegacyLovelaceConfig extends LovelaceConfig {\n  resources?: LovelaceResource[];\n}\n\nexport interface LovelaceResource {\n  id: string;\n  type: \"css\" | \"js\" | \"module\" | \"html\";\n  url: string;\n}\n\nexport interface LovelaceResourcesMutableParams {\n  res_type: \"css\" | \"js\" | \"module\" | \"html\";\n  url: string;\n}\n\nexport type LovelaceDashboard =\n  | LovelaceYamlDashboard\n  | LovelaceStorageDashboard;\n\ninterface LovelaceGenericDashboard {\n  id: string;\n  url_path: string;\n  require_admin: boolean;\n  show_in_sidebar: boolean;\n  icon?: string;\n  title: string;\n}\n\nexport interface LovelaceYamlDashboard extends LovelaceGenericDashboard {\n  mode: \"yaml\";\n  filename: string;\n}\n\nexport interface LovelaceStorageDashboard extends LovelaceGenericDashboard {\n  mode: \"storage\";\n}\n\nexport interface LovelaceDashboardMutableParams {\n  require_admin: boolean;\n  show_in_sidebar: boolean;\n  icon?: string;\n  title: string;\n}\n\nexport interface LovelaceDashboardCreateParams\n  extends LovelaceDashboardMutableParams {\n  url_path: string;\n  mode: \"storage\";\n}\n\nexport interface LovelaceViewConfig {\n  index?: number;\n  title?: string;\n  badges?: Array<string | LovelaceBadgeConfig>;\n  cards?: LovelaceCardConfig[];\n  path?: string;\n  icon?: string;\n  theme?: string;\n  panel?: boolean;\n  background?: string;\n  visible?: boolean | ShowViewConfig[];\n}\n\nexport interface ShowViewConfig {\n  user?: string;\n}\n\nexport interface LovelaceBadgeConfig {\n  type?: string;\n  [key: string]: any;\n}\n\nexport interface LovelaceCardConfig {\n  index?: number;\n  view_index?: number;\n  type: string;\n  [key: string]: any;\n}\n\nexport interface ToggleActionConfig extends BaseActionConfig {\n  action: \"toggle\";\n}\n\nexport interface CallServiceActionConfig extends BaseActionConfig {\n  action: \"call-service\";\n  service: string;\n  service_data?: {\n    entity_id?: string | [string];\n    [key: string]: any;\n  };\n}\n\nexport interface NavigateActionConfig extends BaseActionConfig {\n  action: \"navigate\";\n  navigation_path: string;\n}\n\nexport interface UrlActionConfig extends BaseActionConfig {\n  action: \"url\";\n  url_path: string;\n}\n\nexport interface MoreInfoActionConfig extends BaseActionConfig {\n  action: \"more-info\";\n}\n\nexport interface NoActionConfig extends BaseActionConfig {\n  action: \"none\";\n}\n\nexport interface CustomActionConfig extends BaseActionConfig {\n  action: \"fire-dom-event\";\n}\n\nexport interface BaseActionConfig {\n  confirmation?: ConfirmationRestrictionConfig;\n}\n\nexport interface ConfirmationRestrictionConfig {\n  text?: string;\n  exemptions?: RestrictionConfig[];\n}\n\nexport interface RestrictionConfig {\n  user: string;\n}\n\nexport type ActionConfig =\n  | ToggleActionConfig\n  | CallServiceActionConfig\n  | NavigateActionConfig\n  | UrlActionConfig\n  | MoreInfoActionConfig\n  | NoActionConfig\n  | CustomActionConfig;\n\ntype LovelaceUpdatedEvent = HassEventBase & {\n  event_type: \"lovelace_updated\";\n  data: {\n    url_path: string | null;\n    mode: \"yaml\" | \"storage\";\n  };\n};\n\nexport const fetchResources = (conn: Connection): Promise<LovelaceResource[]> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/resources\",\n  });\n\nexport const createResource = (\n  hass: HomeAssistant,\n  values: LovelaceResourcesMutableParams\n) =>\n  hass.callWS<LovelaceResource>({\n    type: \"lovelace/resources/create\",\n    ...values,\n  });\n\nexport const updateResource = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<LovelaceResourcesMutableParams>\n) =>\n  hass.callWS<LovelaceResource>({\n    type: \"lovelace/resources/update\",\n    resource_id: id,\n    ...updates,\n  });\n\nexport const deleteResource = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"lovelace/resources/delete\",\n    resource_id: id,\n  });\n\nexport const fetchDashboards = (\n  hass: HomeAssistant\n): Promise<LovelaceDashboard[]> =>\n  hass.callWS({\n    type: \"lovelace/dashboards/list\",\n  });\n\nexport const createDashboard = (\n  hass: HomeAssistant,\n  values: LovelaceDashboardCreateParams\n) =>\n  hass.callWS<LovelaceDashboard>({\n    type: \"lovelace/dashboards/create\",\n    ...values,\n  });\n\nexport const updateDashboard = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<LovelaceDashboardMutableParams>\n) =>\n  hass.callWS<LovelaceDashboard>({\n    type: \"lovelace/dashboards/update\",\n    dashboard_id: id,\n    ...updates,\n  });\n\nexport const deleteDashboard = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"lovelace/dashboards/delete\",\n    dashboard_id: id,\n  });\n\nexport const fetchConfig = (\n  conn: Connection,\n  urlPath: string | null,\n  force: boolean\n): Promise<LovelaceConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    url_path: urlPath,\n    force,\n  });\n\nexport const saveConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null,\n  config: LovelaceConfig\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/save\",\n    url_path: urlPath,\n    config,\n  });\n\nexport const deleteConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/delete\",\n    url_path: urlPath,\n  });\n\nexport const subscribeLovelaceUpdates = (\n  conn: Connection,\n  urlPath: string | null,\n  onChange: () => void\n) =>\n  conn.subscribeEvents<LovelaceUpdatedEvent>((ev) => {\n    if (ev.data.url_path === urlPath) {\n      onChange();\n    }\n  }, \"lovelace_updated\");\n\nexport const getLovelaceCollection = (\n  conn: Connection,\n  urlPath: string | null = null\n) =>\n  getCollection(\n    conn,\n    `_lovelace_${urlPath ?? \"\"}`,\n    (conn2) => fetchConfig(conn2, urlPath, false),\n    (_conn, store) =>\n      subscribeLovelaceUpdates(conn, urlPath, () =>\n        fetchConfig(conn, urlPath, false).then((config) =>\n          store.setState(config, true)\n        )\n      )\n  );\n\n// Legacy functions to support cast for Home Assistion < 0.107\nconst fetchLegacyConfig = (\n  conn: Connection,\n  force: boolean\n): Promise<LovelaceConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    force,\n  });\n\nconst subscribeLegacyLovelaceUpdates = (\n  conn: Connection,\n  onChange: () => void\n) => conn.subscribeEvents(onChange, \"lovelace_updated\");\n\nexport const getLegacyLovelaceCollection = (conn: Connection) =>\n  getCollection(\n    conn,\n    \"_lovelace\",\n    (conn2) => fetchLegacyConfig(conn2, false),\n    (_conn, store) =>\n      subscribeLegacyLovelaceUpdates(conn, () =>\n        fetchLegacyConfig(conn, false).then((config) =>\n          store.setState(config, true)\n        )\n      )\n  );\n\nexport interface WindowWithLovelaceProm extends Window {\n  llConfProm?: Promise<LovelaceConfig>;\n  llResProm?: Promise<LovelaceResource[]>;\n}\n\nexport interface ActionHandlerOptions {\n  hasHold?: boolean;\n  hasDoubleClick?: boolean;\n}\n\nexport interface ActionHandlerDetail {\n  action: string;\n}\n\nexport type ActionHandlerEvent = HASSDomEvent<ActionHandlerDetail>;\n"],"mappings":";AAAA","sourceRoot":""}