{"version":3,"file":"chunk.35152adf75719f010a27.js","sources":["webpack:///./src/data/device_automation.ts"],"sourcesContent":["import { computeStateName } from \"../common/entity/compute_state_name\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface DeviceAutomation {\n  device_id: string;\n  domain: string;\n  entity_id: string;\n  type?: string;\n  subtype?: string;\n  event?: string;\n}\n\nexport type DeviceAction = DeviceAutomation;\n\nexport interface DeviceCondition extends DeviceAutomation {\n  condition: string;\n}\n\nexport interface DeviceTrigger extends DeviceAutomation {\n  platform: \"device\";\n}\n\nexport const fetchDeviceActions = (hass: HomeAssistant, deviceId: string) =>\n  hass.callWS<DeviceAction[]>({\n    type: \"device_automation/action/list\",\n    device_id: deviceId,\n  });\n\nexport const fetchDeviceConditions = (hass: HomeAssistant, deviceId: string) =>\n  hass.callWS<DeviceCondition[]>({\n    type: \"device_automation/condition/list\",\n    device_id: deviceId,\n  });\n\nexport const fetchDeviceTriggers = (hass: HomeAssistant, deviceId: string) =>\n  hass.callWS<DeviceTrigger[]>({\n    type: \"device_automation/trigger/list\",\n    device_id: deviceId,\n  });\n\nexport const fetchDeviceActionCapabilities = (\n  hass: HomeAssistant,\n  action: DeviceAction\n) =>\n  hass.callWS<DeviceAction[]>({\n    type: \"device_automation/action/capabilities\",\n    action,\n  });\n\nexport const fetchDeviceConditionCapabilities = (\n  hass: HomeAssistant,\n  condition: DeviceCondition\n) =>\n  hass.callWS<DeviceCondition[]>({\n    type: \"device_automation/condition/capabilities\",\n    condition,\n  });\n\nexport const fetchDeviceTriggerCapabilities = (\n  hass: HomeAssistant,\n  trigger: DeviceTrigger\n) =>\n  hass.callWS<DeviceTrigger[]>({\n    type: \"device_automation/trigger/capabilities\",\n    trigger,\n  });\n\nconst deviceAutomationIdentifiers = [\n  \"device_id\",\n  \"domain\",\n  \"entity_id\",\n  \"type\",\n  \"subtype\",\n  \"event\",\n  \"condition\",\n  \"platform\",\n];\n\nexport const deviceAutomationsEqual = (\n  a: DeviceAutomation,\n  b: DeviceAutomation\n) => {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  for (const property in a) {\n    if (!deviceAutomationIdentifiers.includes(property)) {\n      continue;\n    }\n    if (!Object.is(a[property], b[property])) {\n      return false;\n    }\n  }\n  for (const property in b) {\n    if (!deviceAutomationIdentifiers.includes(property)) {\n      continue;\n    }\n    if (!Object.is(a[property], b[property])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const localizeDeviceAutomationAction = (\n  hass: HomeAssistant,\n  action: DeviceAction\n): string => {\n  const state = action.entity_id ? hass.states[action.entity_id] : undefined;\n  return (\n    hass.localize(\n      `component.${action.domain}.device_automation.action_type.${action.type}`,\n      \"entity_name\",\n      state ? computeStateName(state) : action.entity_id || \"<unknown>\",\n      \"subtype\",\n      action.subtype\n        ? hass.localize(\n            `component.${action.domain}.device_automation.action_subtype.${action.subtype}`\n          ) || action.subtype\n        : \"\"\n    ) || (action.subtype ? `\"${action.subtype}\" ${action.type}` : action.type!)\n  );\n};\n\nexport const localizeDeviceAutomationCondition = (\n  hass: HomeAssistant,\n  condition: DeviceCondition\n): string => {\n  const state = condition.entity_id\n    ? hass.states[condition.entity_id]\n    : undefined;\n  return (\n    hass.localize(\n      `component.${condition.domain}.device_automation.condition_type.${condition.type}`,\n      \"entity_name\",\n      state ? computeStateName(state) : condition.entity_id || \"<unknown>\",\n      \"subtype\",\n      condition.subtype\n        ? hass.localize(\n            `component.${condition.domain}.device_automation.condition_subtype.${condition.subtype}`\n          ) || condition.subtype\n        : \"\"\n    ) ||\n    (condition.subtype\n      ? `\"${condition.subtype}\" ${condition.type}`\n      : condition.type!)\n  );\n};\n\nexport const localizeDeviceAutomationTrigger = (\n  hass: HomeAssistant,\n  trigger: DeviceTrigger\n): string => {\n  const state = trigger.entity_id ? hass.states[trigger.entity_id] : undefined;\n  return (\n    hass.localize(\n      `component.${trigger.domain}.device_automation.trigger_type.${trigger.type}`,\n      \"entity_name\",\n      state ? computeStateName(state) : trigger.entity_id || \"<unknown>\",\n      \"subtype\",\n      trigger.subtype\n        ? hass.localize(\n            `component.${trigger.domain}.device_automation.trigger_subtype.${trigger.subtype}`\n          ) || trigger.subtype\n        : \"\"\n    ) ||\n    (trigger.subtype ? `\"${trigger.subtype}\" ${trigger.type}` : trigger.type!)\n  );\n};\n"],"mappings":"AAsBA","sourceRoot":""}