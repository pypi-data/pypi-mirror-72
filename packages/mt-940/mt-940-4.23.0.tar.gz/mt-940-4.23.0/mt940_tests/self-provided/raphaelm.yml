&id003 !!python/object:mt940.models.Transactions
data:
  account_identification: '3346780111'
  final_closing_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['0.00']
      currency: '950'
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDGA==
    status: C
  final_opening_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['145000.00']
      currency: DEM
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDGA==
    status: C
  intermediate_closing_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['0.00']
      currency: '105'
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDDw==
    status: C
  intermediate_opening_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['105000.00']
      currency: DEM
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDDw==
    status: C
  non_swift: '22Test GmbH

    23Testkonto

    240,800

    25010102311202

    3037010000

    3190000022

    32

    33

    34LEER'
  non_swift_22: Test GmbH
  non_swift_23: Testkonto
  non_swift_24: 0,800
  non_swift_25: '010102311202'
  non_swift_30: '37010000'
  non_swift_31: '90000022'
  non_swift_34: LEER
  non_swift_text: 'Test GmbH

    Testkonto

    0,800

    010102311202

    37010000

    90000022


    33

    LEER'
  sequence_number: '1'
  statement_number: '2'
  transaction_reference: STARTUMS
processors:
  post_account_identification: []
  post_available_balance: []
  post_closing_balance: []
  post_date_time_indication: []
  post_final_closing_balance: []
  post_final_opening_balance: []
  post_floor_limit_indicator: []
  post_forward_available_balance: []
  post_intermediate_closing_balance: []
  post_intermediate_opening_balance: []
  post_non_swift: []
  post_opening_balance: []
  post_related_reference: []
  post_statement: [!!python/name:mt940.processors.date_cleanup_post_processor '']
  post_statement_number: []
  post_sum_credit_entries: []
  post_sum_debit_entries: []
  post_transaction_details: [!!python/name:mt940.processors.transaction_details_post_processor '']
  post_transaction_reference_number: []
  pre_account_identification: []
  pre_available_balance: []
  pre_closing_balance: []
  pre_date_time_indication: []
  pre_final_closing_balance: []
  pre_final_opening_balance: []
  pre_floor_limit_indicator: []
  pre_forward_available_balance: []
  pre_intermediate_closing_balance: []
  pre_intermediate_opening_balance: []
  pre_non_swift: []
  pre_opening_balance: []
  pre_related_reference: []
  pre_statement: [!!python/name:mt940.processors.date_fixup_pre_processor '']
  pre_statement_number: []
  pre_sum_credit_entries: []
  pre_sum_debit_entries: []
  pre_transaction_details: []
  pre_transaction_reference_number: []
tags:
  13: !!python/object:mt940.tags.DateTimeIndication
    re: !!python/object/apply:re._compile ["^\n    (?P<year>\\d{2})\n    (?P<month>\\\
        d{2})\n    (?P<day>\\d{2})\n    (?P<hour>\\d{2})\n    (?P<minute>\\d{2})\n\
        \    (\\+(?P<offset>\\d{4})|)\n    ", 98]
  20: !!python/object:mt940.tags.TransactionReferenceNumber
    re: !!python/object/apply:re._compile ['(?P<transaction_reference>.{0,16})', 98]
  21: !!python/object:mt940.tags.RelatedReference
    re: !!python/object/apply:re._compile ['(?P<related_reference>.{0,16})', 98]
  25: !!python/object:mt940.tags.AccountIdentification
    re: !!python/object/apply:re._compile ['(?P<account_identification>.{0,35})',
      98]
  28: !!python/object:mt940.tags.StatementNumber
    re: !!python/object/apply:re._compile ["\n    (?P<statement_number>\\d{1,5}) \
        \ # 5n\n    (?:/?(?P<sequence_number>\\d{1,5}))?  # [/5n]\n    $", 98]
  60: !!python/object:mt940.tags.OpeningBalance
    re: &id001 !!python/object/apply:re._compile ["^\n    (?P<status>[DC])  # 1!a\
        \ Debit/Credit\n    (?P<year>\\d{2})  # 6!n Value Date (YYMMDD)\n    (?P<month>\\\
        d{2})\n    (?P<day>\\d{2})\n    (?P<currency>.{3})  # 3!a Currency\n    (?P<amount>[0-9,]{0,16})\
        \  # 15d Amount (includes decimal sign, so 16)\n    ", 98]
  60M: !!python/object:mt940.tags.IntermediateOpeningBalance
    re: *id001
  60F: !!python/object:mt940.tags.FinalOpeningBalance
    re: *id001
  61: !!python/object:mt940.tags.Statement
    re: !!python/object/apply:re._compile ["^\n    (?P<year>\\d{2})  # 6!n Value Date\
        \ (YYMMDD)\n    (?P<month>\\d{2})\n    (?P<day>\\d{2})\n    (?P<entry_month>\\\
        d{2})?  # [4!n] Entry Date (MMDD)\n    (?P<entry_day>\\d{2})?\n    (?P<status>[A-Z]?[DC])\
        \  # 2a Debit/Credit Mark\n    (?P<funds_code>[A-Z])? # [1!a] Funds Code (3rd\
        \ character of the currency\n                            # code, if needed)\n\
        \    \\n? # apparently some banks (sparkassen) incorporate newlines here\n\
        \    (?P<amount>[\\d,]{1,15})  # 15d Amount\n    (?P<id>[A-Z][A-Z0-9 ]{3})?\
        \  # 1!a3!c Transaction Type Identification Code\n    (?P<customer_reference>.{0,16})\
        \  # 16x Customer Reference\n    (//(?P<bank_reference>.{0,23}))?  # [//23x]\
        \ Bank Reference\n    (\\n?(?P<extra_details>.{0,34}))?  # [34x] Supplementary\
        \ Details\n    $", 98]
  62: !!python/object:mt940.tags.ClosingBalance
    re: *id001
  62M: !!python/object:mt940.tags.IntermediateClosingBalance
    re: *id001
  62F: !!python/object:mt940.tags.FinalClosingBalance
    re: *id001
  64: !!python/object:mt940.tags.AvailableBalance
    re: *id001
  65: !!python/object:mt940.tags.ForwardAvailableBalance
    re: *id001
  86: !!python/object:mt940.tags.TransactionDetails
    re: !!python/object/apply:re._compile ["\n    (?P<transaction_details>(([\\s\\\
        S]{0,65}\\r?\\n?){0,8}[\\s\\S]{0,65}))\n    ", 98]
  34: !!python/object:mt940.tags.FloorLimitIndicator
    re: !!python/object/apply:re._compile ["^\n    (?P<currency>[A-Z]{3})  # 3!a Currency\n\
        \    (?P<status>[DC ]?)  # 2a Debit/Credit Mark\n    (?P<amount>[0-9,]{0,16})\
        \  # 15d Amount (includes decimal sign, so 16)\n    $", 98]
  NS: !!python/object:mt940.tags.NonSwift
    re: !!python/object/apply:re._compile ["\n    (?P<non_swift>\n        (\n    \
        \        (\\d{2}.{0,})\n            (\\n\\d{2}.{0,})*\n        )|(\n     \
        \       [^\\n]*\n        )\n    )\n    $", 98]
  90: !!python/object:mt940.tags.SumEntries
    re: &id002 !!python/object/apply:re._compile ["^\n    (?P<number>\\d*)\n    (?P<currency>.{3})\
        \  # 3!a Currency\n    (?P<amount>[\\d,]{1,15})  # 15d Amount\n    ", 98]
  90D: !!python/object:mt940.tags.SumDebitEntries
    re: *id002
  90C: !!python/object:mt940.tags.SumCreditEntries
    re: *id002
transactions:
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['5000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: '68790452'
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDEQ==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFA==
    extra_details: ''
    funds_code: M
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFA==
    id: S051
    non_swift: "01Verwendungszweck 1\n02Verwendungszweck 2\n15Empf\xE4nger\n17Buchungstext\n\
      1812345\n191000\n204711"
    non_swift_01: Verwendungszweck 1
    non_swift_02: Verwendungszweck 2
    non_swift_15: "Empf\xE4nger"
    non_swift_17: Buchungstext
    non_swift_18: '12345'
    non_swift_19: '1000'
    non_swift_20: '4711'
    non_swift_text: "Verwendungszweck 1\nVerwendungszweck 2\nEmpf\xE4nger\nBuchungstext\n\
      12345\n1000\n4711"
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: NCHG
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    non_swift: '223037010000'
    non_swift_22: '3037010000'
    non_swift_text: '3037010000'
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['20000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDFg==
    extra_details: ''
    funds_code: M
    id: S051
    non_swift: '22Meyer + Schneider

      23Testkonto

      3037010000

      3187132101'
    non_swift_22: Meyer + Schneider
    non_swift_23: Testkonto
    non_swift_30: '37010000'
    non_swift_31: '87132101'
    non_swift_text: 'Meyer + Schneider

      Testkonto

      37010000

      87132101'
    status: C
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['-50000.00']
      currency: DEM
    bank_reference: null
    currency: DEM
    customer_reference: ''
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9IDGA==
    extra_details: ''
    funds_code: M
    id: S051
    non_swift: '01bekannt

      1812345'
    non_swift_01: bekannt
    non_swift_18: '12345'
    non_swift_text: 'bekannt

      12345'
    status: D
  transactions: *id003
