&id003 !!python/object:mt940.models.Transactions
data:
  account_identification: '1966315302010001'
  available_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['617874.30']
      currency: HUF
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    status: C
  final_closing_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['617874.30']
      currency: HUF
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    status: C
  final_opening_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['627311.30']
      currency: HUF
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    status: C
  non_swift: '22JOHN DOE

    23John Doe

    25171004171011

    3014100000

    318125061

    32010'
  non_swift_22: JOHN DOE
  non_swift_23: John Doe
  non_swift_25: '171004171011'
  non_swift_30: '14100000'
  non_swift_31: '8125061'
  non_swift_32: '010'
  non_swift_text: 'JOHN DOE

    John Doe

    171004171011

    14100000

    8125061

    010'
  sequence_number: null
  statement_number: '00046'
  transaction_reference: STARTUMS
processors:
  post_account_identification: []
  post_available_balance: []
  post_closing_balance: []
  post_date_time_indication: []
  post_final_closing_balance: []
  post_final_opening_balance: []
  post_floor_limit_indicator: []
  post_forward_available_balance: []
  post_intermediate_closing_balance: []
  post_intermediate_opening_balance: []
  post_non_swift: []
  post_opening_balance: []
  post_related_reference: []
  post_statement: [!!python/name:mt940.processors.date_cleanup_post_processor '']
  post_statement_number: []
  post_sum_credit_entries: []
  post_sum_debit_entries: []
  post_transaction_details: [!!python/name:mt940.processors.transaction_details_post_processor '']
  post_transaction_reference_number: []
  pre_account_identification: []
  pre_available_balance: []
  pre_closing_balance: []
  pre_date_time_indication: []
  pre_final_closing_balance: []
  pre_final_opening_balance: []
  pre_floor_limit_indicator: []
  pre_forward_available_balance: []
  pre_intermediate_closing_balance: []
  pre_intermediate_opening_balance: []
  pre_non_swift: []
  pre_opening_balance: []
  pre_related_reference: []
  pre_statement: [!!python/name:mt940.processors.date_fixup_pre_processor '']
  pre_statement_number: []
  pre_sum_credit_entries: []
  pre_sum_debit_entries: []
  pre_transaction_details: []
  pre_transaction_reference_number: []
tags:
  13: !!python/object:mt940.tags.DateTimeIndication
    re: !!python/object/apply:re._compile ["^\n    (?P<year>\\d{2})\n    (?P<month>\\\
        d{2})\n    (?P<day>\\d{2})\n    (?P<hour>\\d{2})\n    (?P<minute>\\d{2})\n\
        \    (\\+(?P<offset>\\d{4})|)\n    ", 98]
  20: !!python/object:mt940.tags.TransactionReferenceNumber
    re: !!python/object/apply:re._compile ['(?P<transaction_reference>.{0,16})', 98]
  21: !!python/object:mt940.tags.RelatedReference
    re: !!python/object/apply:re._compile ['(?P<related_reference>.{0,16})', 98]
  25: !!python/object:mt940.tags.AccountIdentification
    re: !!python/object/apply:re._compile ['(?P<account_identification>.{0,35})',
      98]
  28: !!python/object:mt940.tags.StatementNumber
    re: !!python/object/apply:re._compile ["\n    (?P<statement_number>\\d{1,5}) \
        \ # 5n\n    (?:/?(?P<sequence_number>\\d{1,5}))?  # [/5n]\n    $", 98]
  60: !!python/object:mt940.tags.OpeningBalance
    re: &id001 !!python/object/apply:re._compile ["^\n    (?P<status>[DC])  # 1!a\
        \ Debit/Credit\n    (?P<year>\\d{2})  # 6!n Value Date (YYMMDD)\n    (?P<month>\\\
        d{2})\n    (?P<day>\\d{2})\n    (?P<currency>.{3})  # 3!a Currency\n    (?P<amount>[0-9,]{0,16})\
        \  # 15d Amount (includes decimal sign, so 16)\n    ", 98]
  60M: !!python/object:mt940.tags.IntermediateOpeningBalance
    re: *id001
  60F: !!python/object:mt940.tags.FinalOpeningBalance
    re: *id001
  61: !!python/object:mt940.tags.Statement
    re: !!python/object/apply:re._compile ["^\n    (?P<year>\\d{2})  # 6!n Value Date\
        \ (YYMMDD)\n    (?P<month>\\d{2})\n    (?P<day>\\d{2})\n    (?P<entry_month>\\\
        d{2})?  # [4!n] Entry Date (MMDD)\n    (?P<entry_day>\\d{2})?\n    (?P<status>[A-Z]?[DC])\
        \  # 2a Debit/Credit Mark\n    (?P<funds_code>[A-Z])? # [1!a] Funds Code (3rd\
        \ character of the currency\n                            # code, if needed)\n\
        \    \\n? # apparently some banks (sparkassen) incorporate newlines here\n\
        \    (?P<amount>[\\d,]{1,15})  # 15d Amount\n    (?P<id>[A-Z][A-Z0-9 ]{3})?\
        \  # 1!a3!c Transaction Type Identification Code\n    (?P<customer_reference>.{0,16})\
        \  # 16x Customer Reference\n    (//(?P<bank_reference>.{0,23}))?  # [//23x]\
        \ Bank Reference\n    (\\n?(?P<extra_details>.{0,34}))?  # [34x] Supplementary\
        \ Details\n    $", 98]
  62: !!python/object:mt940.tags.ClosingBalance
    re: *id001
  62M: !!python/object:mt940.tags.IntermediateClosingBalance
    re: *id001
  62F: !!python/object:mt940.tags.FinalClosingBalance
    re: *id001
  64: !!python/object:mt940.tags.AvailableBalance
    re: *id001
  65: !!python/object:mt940.tags.ForwardAvailableBalance
    re: *id001
  86: !!python/object:mt940.tags.TransactionDetails
    re: !!python/object/apply:re._compile ["\n    (?P<transaction_details>(([\\s\\\
        S]{0,65}\\r?\\n?){0,8}[\\s\\S]{0,65}))\n    ", 98]
  34: !!python/object:mt940.tags.FloorLimitIndicator
    re: !!python/object/apply:re._compile ["^\n    (?P<currency>[A-Z]{3})  # 3!a Currency\n\
        \    (?P<status>[DC ]?)  # 2a Debit/Credit Mark\n    (?P<amount>[0-9,]{0,16})\
        \  # 15d Amount (includes decimal sign, so 16)\n    $", 98]
  NS: !!python/object:mt940.tags.NonSwift
    re: !!python/object/apply:re._compile ["\n    (?P<non_swift>\n        (\n    \
        \        (\\d{2}.{0,})\n            (\\n\\d{2}.{0,})*\n        )|(\n     \
        \       [^\\n]*\n        )\n    )\n    $", 98]
  90: !!python/object:mt940.tags.SumEntries
    re: &id002 !!python/object/apply:re._compile ["^\n    (?P<number>\\d*)\n    (?P<currency>.{3})\
        \  # 3!a Currency\n    (?P<amount>[\\d,]{1,15})  # 15d Amount\n    ", 98]
  90D: !!python/object:mt940.tags.SumDebitEntries
    re: *id002
  90C: !!python/object:mt940.tags.SumCreditEntries
    re: *id002
transactions:
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['-2402.00']
      currency: HUF
    bank_reference: null
    currency: HUF
    customer_reference: X
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    extra_details: ''
    funds_code: F
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    id: 'S   '
    non_swift: "01526715\n02A12596785    20170926000100\n031366\n04526715\n09Tranzakci\uFFFD\
      s Illet\uFFFDk:7.21HUF\n15ERGO Versicherung AG Fiokte\n16lep\n17G200000137791678\n\
      18652055\n3310918001\n340000004279070017"
    non_swift_01: '526715'
    non_swift_02: A12596785    20170926000100
    non_swift_03: '1366'
    non_swift_04: '526715'
    non_swift_09: "Tranzakci\uFFFDs Illet\uFFFDk:7.21HUF"
    non_swift_15: ERGO Versicherung AG Fiokte
    non_swift_16: lep
    non_swift_17: G200000137791678
    non_swift_18: '652055'
    non_swift_33: '10918001'
    non_swift_34: 0000004279070017
    non_swift_text: "526715\nA12596785    20170926000100\n1366\n526715\nTranzakci\uFFFD\
      s Illet\uFFFDk:7.21HUF\nERGO Versicherung AG Fiokte\nlep\nG200000137791678\n\
      652055\n10918001\n0000004279070017"
    status: D
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['-3460.00']
      currency: HUF
    bank_reference: null
    currency: HUF
    customer_reference: X
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    extra_details: ''
    funds_code: F
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    id: 'S   '
    non_swift: "01136508\n02A10580361    20170926000100\n033009\n04136508\n09Tranz.\
      \ Illet\uFFFDk: 10.38HUF\n15ERGO Eletbiztosito Zrt.\n17G200000015891789\n18791033\n\
      3310918001\n340000002595841185"
    non_swift_01: '136508'
    non_swift_02: A10580361    20170926000100
    non_swift_03: '3009'
    non_swift_04: '136508'
    non_swift_09: "Tranz. Illet\uFFFDk: 10.38HUF"
    non_swift_15: ERGO Eletbiztosito Zrt.
    non_swift_17: G200000015891789
    non_swift_18: '791033'
    non_swift_33: '10918001'
    non_swift_34: 0000002595841185
    non_swift_text: "136508\nA10580361    20170926000100\n3009\n136508\nTranz. Illet\uFFFD\
      k: 10.38HUF\nERGO Eletbiztosito Zrt.\nG200000015891789\n791033\n10918001\n0000002595841185"
    status: D
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal ['-3575.00']
      currency: HUF
    bank_reference: null
    currency: HUF
    customer_reference: X
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    extra_details: ''
    funds_code: F
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+EKCw==
    id: 'S   '
    non_swift: "01625006\n02A14282085    20170926000100\n031221\n04625006\n09Tranz.\
      \ Illet\uFFFDk: 10.73HUF\n15ERGO Versicherung AG Fiokte\n16lep\n17G200011025720127\n\
      18561351\n3310918001\n340000004279070017"
    non_swift_01: '625006'
    non_swift_02: A14282085    20170926000100
    non_swift_03: '1221'
    non_swift_04: '625006'
    non_swift_09: "Tranz. Illet\uFFFDk: 10.73HUF"
    non_swift_15: ERGO Versicherung AG Fiokte
    non_swift_16: lep
    non_swift_17: G200011025720127
    non_swift_18: '561351'
    non_swift_33: '10918001'
    non_swift_34: 0000004279070017
    non_swift_text: "625006\nA14282085    20170926000100\n1221\n625006\nTranz. Illet\uFFFD\
      k: 10.73HUF\nERGO Versicherung AG Fiokte\nlep\nG200011025720127\n561351\n10918001\n\
      0000004279070017"
    status: D
  transactions: *id003
