# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from admobilize.proto.iam.v1alpha1 import iam_service_pb2 as admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2
from admobilize.proto.iam.v1alpha1 import resources_pb2 as admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2


class IamServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePermission = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/CreatePermission',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreatePermissionRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Permission.FromString,
                )
        self.CreateIdentity = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/CreateIdentity',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateIdentityRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Identity.FromString,
                )
        self.CreateRole = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/CreateRole',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateRoleRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Role.FromString,
                )
        self.SetPolicy = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/SetPolicy',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.SetPolicyRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.FromString,
                )
        self.GetPolicy = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/GetPolicy',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.GetPolicyRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.FromString,
                )
        self.TestPermissions = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/TestPermissions',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsResponse.FromString,
                )
        self.ListResources = channel.unary_unary(
                '/admobilize.iam.v1alpha1.IamService/ListResources',
                request_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesRequest.SerializeToString,
                response_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesResponse.FromString,
                )


class IamServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePermission(self, request, context):
        """Create Permission
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIdentity(self, request, context):
        """Create Identity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRole(self, request, context):
        """Create Role
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPolicy(self, request, context):
        """Set Policy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicy(self, request, context):
        """Get Policy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestPermissions(self, request, context):
        """Test permissions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResources(self, request, context):
        """List Resources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IamServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePermission': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePermission,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreatePermissionRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Permission.SerializeToString,
            ),
            'CreateIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIdentity,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateIdentityRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Identity.SerializeToString,
            ),
            'CreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRole,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateRoleRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Role.SerializeToString,
            ),
            'SetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPolicy,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.SetPolicyRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.SerializeToString,
            ),
            'GetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicy,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.GetPolicyRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.SerializeToString,
            ),
            'TestPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.TestPermissions,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsResponse.SerializeToString,
            ),
            'ListResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResources,
                    request_deserializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesRequest.FromString,
                    response_serializer=admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'admobilize.iam.v1alpha1.IamService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IamService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/CreatePermission',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreatePermissionRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Permission.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/CreateIdentity',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateIdentityRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Identity.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/CreateRole',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.CreateRoleRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Role.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/SetPolicy',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.SetPolicyRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/GetPolicy',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.GetPolicyRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_resources__pb2.Policy.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/TestPermissions',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.TestPermissionsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admobilize.iam.v1alpha1.IamService/ListResources',
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesRequest.SerializeToString,
            admobilize_dot_iam_dot_v1alpha1_dot_iam__service__pb2.ListResourcesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
