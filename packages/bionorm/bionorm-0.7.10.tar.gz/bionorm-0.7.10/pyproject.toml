[tool.poetry]
name = "bionorm"
version = "0.7.10"
description = "normalize, verify, and select genomic data"
authors = ["Connor Cameron <ctc@ncgr.org>"]
maintainers = ["Joel Berendzen <joelb@ncgr.org>"]
license = "BSD-3-Clause"
readme = "README.rst"
homepage = "https://github.com/legumeinfo/bionorm"
documentation = "https://bionorm.readthedocs.org"
keywords = [
    "science",
    "biology",
    "bioinformatics",
    "genomics",
    "data science",
    "DNA",
    "protein",
    "sequences",
    "FASTA",
    "GFF",
    "curation",
    "wrangling"
    ]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Topic :: Scientific/Engineering :: Bio-Informatics'
    ]

[tool.poetry.dependencies]
python = "^3.6.1"
biopython = "^1.76"
click = "^7.0"
"ruamel.yaml" = "^0.16.6"
sequencetools = "^0.0.5"
importlib_metadata = "^1.5.0"
click_plugins = "^1.1.1"
requests_download = "^0.1.2"
sh = "^1.12.14"
packaging = "^20.3"
progressbar2 = "^3.50.1"
addict = "^2.2.1"
pandas = "^1.0.3"
pygit2 = "^1.2.0"
toml = "^0.10.0"
ansimarkup = "^1.4.0"
click_loguru = "^0.3.6"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
pytest-cov = "^2.8.1"
black = {version = "^19.10b0", allow-prereleases = true}
pre-commit = "^2.0.1"
pydocstyle = "^5.0.2"
pytest-datadir-mgr = "^1.0.1"
isort = {extras = ["pyproject"], version = "^4.3.21"}
pylint = "^2.5.2"
nox = "^2020.5.24"
flynt = "^0.48.1"
coverage = {extras = ["toml"], version = "^5.1"}

[tool.poetry.scripts]
bionorm = "bionorm:cli"

[tool.black]
line-length = 79
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.isort]
atomic=true
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79
import_heading_stdlib = "standard library imports"
import_heading_thirdparty = "third-party imports"
import_heading_firstparty = "first-party imports"
import_heading_localfolder = "module imports"
known_standard_library = "pkg_resources"

[tool.coverage.run]
parallel = true
omit = ["tests/*", "noxfile.py", ".nox/*"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
    ]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
