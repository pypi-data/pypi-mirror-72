# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from knack.arguments import CLIArgumentType


def load_arguments(self, _):

    with self.argument_context('msgraphusersuser user-user update') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('body', arg_type=CLIArgumentType(options_list=['--body'], help='New property values Expected value: '
                   'json-string/@json-file.'))

    with self.argument_context('msgraphusersuser user-user delete') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('if_match', help='ETag')

    with self.argument_context('msgraphusersuser user-user create-user') as c:
        c.argument('body', arg_type=CLIArgumentType(options_list=['--body'], help='New entity Expected value: json-stri'
                   'ng/@json-file.'))

    with self.argument_context('msgraphusersuser user-user get-user') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('msgraphusersuser user-user list-user') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('msgraphusersuser user update') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('availability', help='')
        c.argument('activity', help='')

    with self.argument_context('msgraphusersuser user get-presence') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')
