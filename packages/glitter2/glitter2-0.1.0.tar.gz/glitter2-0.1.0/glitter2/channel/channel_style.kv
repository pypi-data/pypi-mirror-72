<BoxShowMore@ShowMoreBehavior+BoxLayout>

<TrackFlatToggleButton@TrackPressingButtonBehavior+FlatToggleButton>
<TrackFlatImageButton@TrackPressingButtonBehavior+FlatImageButton>

<ChannelList@BoxLayout>:
    orientation: 'vertical'
    size_hint_x: None
    width: '250dp'
    size_hint_min_y: self.minimum_height
    spacing: '2dp'
    BoxLayout:
        orientation: 'vertical'
        spacing: '5dp'
        size_hint_min_y: self.minimum_height
        canvas:
            Color:
                rgba: app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            FlatImageToggleButton:
                id: expand_event
                height: '34dp'
                size_hint_y: None
                state: 'down'
                scale_down_color: False
                flat_color: app.theme.accent
                source: 'flat_arrow_right.png' if self.state == 'normal' else 'flat_arrow_down.png'
            FlatImageButton:
                scale_down_color: True
                source: 'flat_plus.png'
                flat_color: app.theme.accent
                on_release: app.create_channel('event')
            FlatLabel:
                text: 'Events'
                flat_color: app.theme.text_primary
        BoxShowMore:
            more: more_event.__self__
            show_more: expand_event.state == 'down'
            disabled: not app.interactive_player_mode
            ScrollView:
                id: more_event
                bar_width: '10dp'
                scroll_type: ['bars']
                do_scroll_x: False
                BoxLayout:
                    id: event_container
                    on_kv_post: app.image_display_manager.event_container_widget = self.__self__
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: '3dp'
    BoxLayout:
        orientation: 'vertical'
        spacing: '5dp'
        size_hint_min_y: self.minimum_height
        canvas:
            Color:
                rgba: app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            FlatImageToggleButton:
                id: expand_pos
                height: '34dp'
                size_hint_y: None
                state: 'down'
                scale_down_color: False
                flat_color: app.theme.accent
                source: 'flat_arrow_right.png' if self.state == 'normal' else 'flat_arrow_down.png'
            FlatImageButton:
                scale_down_color: True
                source: 'flat_plus.png'
                flat_color: app.theme.accent
                on_release: app.create_channel('pos')
            FlatLabel:
                text: 'Pos'
                flat_color: app.theme.text_primary
        BoxShowMore:
            more: more_pos.__self__
            show_more: expand_pos.state == 'down'
            disabled: not app.interactive_player_mode
            ScrollView:
                id: more_pos
                bar_width: '10dp'
                scroll_type: ['bars']
                do_scroll_x: False
                BoxLayout:
                    id: pos_container
                    on_kv_post: app.image_display_manager.pos_container_widget = self.__self__
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: '3dp'
    BoxLayout:
        orientation: 'vertical'
        spacing: '5dp'
        size_hint_min_y: self.minimum_height
        canvas:
            Color:
                rgba: app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            size_hint_y: None
            height: '34dp'
            size_hint_x: None
            width: self.minimum_width
            FlatImageToggleButton:
                id: edit_zones
                disabled: hide_shapes.state == 'normal'
                scale_down_color: True
                source: 'pencil-off.png' if self.state == 'normal' else 'pencil.png'
                flat_color: app.theme.accent
                on_state: app.interactive_player_mode = app.image_display_manager.zone_painter.locked = self.state == 'normal'
            FlatDivider:
                color: app.theme.divider
            BoxLayout:
                disabled: hide_shapes.state == 'normal' or edit_zones.state == 'normal'
                size_hint_y: None
                height: '34dp'
                size_hint_x: None
                width: self.minimum_width
                FlatImageToggleButton:
                    group: 'paint'
                    scale_down_color: True
                    source: 'flat_circle.png'
                    flat_color: app.theme.accent
                    on_state: app.image_display_manager.zone_painter.draw_mode = 'circle' if self.state == 'down' else 'none'
                FlatImageToggleButton:
                    group: 'paint'
                    scale_down_color: True
                    source: 'flat_ellipse.png'
                    flat_color: app.theme.accent
                    on_state: app.image_display_manager.zone_painter.draw_mode = 'ellipse' if self.state == 'down' else 'none'
                FlatImageToggleButton:
                    group: 'paint'
                    scale_down_color: True
                    source: 'flat_polyline.png'
                    flat_color: app.theme.accent
                    state: 'down'
                    on_state: app.image_display_manager.zone_painter.draw_mode = 'freeform' if self.state == 'down' else 'none'
                FlatImageToggleButton:
                    group: 'paint'
                    scale_down_color: True
                    source: 'flat_polygon.png'
                    flat_color: app.theme.accent
                    on_state: app.image_display_manager.zone_painter.draw_mode = 'polygon' if self.state == 'down' else 'none'
            FlatDivider:
                color: app.theme.divider
            FlatImageToggleButton:
                id: hide_shapes
                scale_down_color: True
                state: 'down'
                source: 'eye-off.png' if self.state == 'normal' else 'eye.png'
                flat_color: app.theme.accent
                on_state:
                    app.channel_controller.show_zone_drawing = self.state == 'down'
                    if self.state == 'normal': edit_zones.state = 'normal'
                    if self.state == 'normal': app.image_display_manager.zone_painter.clear_selected_shapes()
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            FlatImageToggleButton:
                id: expand_zone
                height: '34dp'
                size_hint_y: None
                state: 'down'
                scale_down_color: False
                flat_color: app.theme.accent
                source: 'flat_arrow_right.png' if self.state == 'normal' else 'flat_arrow_down.png'
            FlatLabel:
                text: 'Zones'
                flat_color: app.theme.text_primary
        BoxShowMore:
            more: more_zone.__self__
            show_more: expand_zone.state == 'down'
            size_hint_min_y: self.minimum_height
            # size_hint_max_y: event_container.height
            ScrollView:
                id: more_zone
                bar_width: '10dp'
                scroll_type: ['bars']
                do_scroll_x: False
                BoxLayout:
                    id: zone_container
                    disabled: hide_shapes.state == 'normal'
                    on_kv_post: app.image_display_manager.zone_container_widget = self.__self__
                    orientation: 'vertical'
                    size_hint_y: None
                    height: self.minimum_height
                    spacing: '3dp'


<EventChannelWidget>:
    size_hint_y: None
    height: '34dp'
    spacing: '2dp'
    selection_button: selection_button
    FlatImageToggleButton:
        id: selection_button
        source: 'reorder-horizontal.png'
        flat_color: list(root.channel.color_gl) + [1]
        state: 'down' if root.selected else 'normal'
        on_state: root.selected = self.state == 'down'
        group: 'channel_selection'
        canvas.before:
            Color:
                rgba: app.theme.primary_light if self.state == 'down' else app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
    TrackFlatToggleButton:
        center_texture: True
        padding: ('5dp', '5dp')
        flat_color: app.theme.text_primary
        flat_background_color: app.theme.primary_light if self.state == 'down' else app.theme.primary
        text: root.channel.name
        text_size: self.size
        shorten: True
        shorten_from: 'right'
        valign: 'middle'
        state: 'down' if root.channel.current_value else 'normal'
        on_user_pressed:
            root.channel.button_pressed = True
        on_user_released: root.channel.button_pressed = False
        on_press: root.channel.button_state(True)
        on_release: root.channel.button_state(False)
    TrackFlatImageButton:
        scale_down_color: True
        source: 'eraser.png'
        flat_color: app.theme.accent
        on_user_pressed: root.channel.eraser_pressed = True
        on_user_released: root.channel.eraser_pressed = False
        on_press: root.channel.reset_current_value()
    FlatImageButton:
        settings_widget: None
        scale_down_color: True
        source: 'flat_dots_vertical.png'
        flat_color: app.theme.accent
        on_release:
            if self.settings_widget is None: self.settings_widget = Factory.EventSettingsDropDown(channel=root.channel)
            self.settings_widget.open(root)


<PosChannelWidget>:
    size_hint_y: None
    height: '34dp'
    spacing: '2dp'
    selection_button: selection_button
    FlatImageToggleButton:
        id: selection_button
        source: 'reorder-horizontal.png'
        flat_color: list(root.channel.color_gl) + [1]
        state: 'down' if root.selected else 'normal'
        on_state: root.selected = self.state == 'down'
        group: 'channel_selection'
        canvas.before:
            Color:
                rgba: app.theme.primary_light if self.state == 'down' else app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
    FlatImageToggleButton:
        scale_down_color: True
        source: 'transit-connection-variant.png'
        flat_color: app.theme.accent
        state: 'down' if root.channel.display_line else 'normal'
        on_state: root.channel.display_line = self.state == 'down'
    FlatLabel:
        center_texture: True
        padding: ('5dp', '5dp')
        flat_color: app.theme.text_primary
        text: root.channel.name
        text_size: self.size
        shorten: True
        shorten_from: 'right'
        valign: 'middle'
    TrackFlatImageButton:
        scale_down_color: True
        source: 'eraser.png'
        flat_color: app.theme.accent
        on_user_pressed: root.channel.eraser_pressed = True
        on_user_released: root.channel.eraser_pressed = False
        on_press: root.channel.reset_current_value()
    FlatImageButton:
        settings_widget: None
        scale_down_color: True
        source: 'flat_dots_vertical.png'
        flat_color: app.theme.accent
        on_release:
            if self.settings_widget is None: self.settings_widget = Factory.PosSettingsDropDown(channel=root.channel)
            self.settings_widget.open(root)


<ZoneChannelWidget>:
    size_hint_y: None
    height: '34dp'
    spacing: '2dp'
    selection_button: selection_button
    FlatImageToggleButton:
        id: selection_button
        source: 'reorder-horizontal.png'
        flat_color: list(root.channel.color_gl) + [1]
        state: 'down' if root.selected else 'normal'
        on_state: root.selected = self.state == 'down'
        group: 'channel_selection'
        canvas.before:
            Color:
                rgba: app.theme.primary_light if self.state == 'down' else app.theme.primary
            Rectangle:
                pos: self.pos
                size: self.size
    FlatLabel:
        center_texture: True
        padding: ('5dp', '5dp')
        flat_color: app.theme.text_primary
        text: root.channel.name
        text_size: self.size
        shorten: True
        shorten_from: 'right'
        valign: 'middle'
    FlatImageButton:
        settings_widget: None
        scale_down_color: True
        source: 'flat_dots_vertical.png'
        flat_color: app.theme.accent
        on_release:
            if self.settings_widget is None: self.settings_widget = Factory.ZoneSettingsDropDown(channel=root.channel)
            self.settings_widget.open(root)


<EventSettingsDropDown@ChannelSettingsDropDown>:
    do_scroll: False, False
    flat_color: app.theme.primary_text
    flat_border_color: app.theme.divider
    BoxLayout:
        size_hint: None, None
        orientation: 'vertical'
        spacing: '5dp'
        padding: '5dp'
        size: self.minimum_size
        BoxLayout:
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.name
                on_focus: if not self.focus: root.channel.name = self.text
            FlatImageButton:
                scale_down_color: True
                source: 'flat_delete.png'
                flat_color: app.theme.accent
                on_release:
                    root.dismiss()
                    app.delete_channel(root.channel)
        GridLayout:
            size_hint: None, None
            size: self.minimum_size
            padding: '5dp'
            spacing: '5dp'
            cols: 2
            FlatLabel:
                text: 'Button type:'
                size_hint: None, None
                size: self.texture_size
                center_texture: True
                flat_color: app.theme.text_primary
            FlatSpinner:
                flat_color: app.theme.text_primary
                flat_menu_color: app.theme.accent
                flat_drop_background_color: app.theme.primary_text
                flat_drop_text_color: app.theme.text_primary
                flat_border_color: app.theme.divider
                size_hint: None, None
                size: self.minimum_width, '34dp'
                values: ['Press to mark', 'Press to toggle mark']
                text: self.values[1] if root.channel.is_toggle_button else self.values[0]
                on_text: root.channel.is_toggle_button = self.text == self.values[1]
            FlatLabel:
                text: 'Marker key-stroke:'
                size_hint: None, None
                size: self.texture_size
                center_texture: True
                flat_color: app.theme.text_primary
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.keyboard_key
                on_text: if self.text in app.channel_controller.channels_keys and app.channel_controller.channels_keys[self.text] is not root.channel: self.text = ''
                on_focus: if not self.focus: root.channel.keyboard_key = self.text
            FlatLabel:
                text: 'Channel group:'
                size_hint: None, None
                size: self.texture_size
                center_texture: True
                flat_color: app.theme.text_primary
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.channel_group
                on_focus: if not self.focus: root.channel.channel_group = self.text
        FlatButton:
            text: 'Clear data'
            size_hint_y: None
            height: self.texture_size[1]
            size_hint_min_x: self.texture_size[0]
            padding: '5dp', '5dp'
            bold: True
            scale_down_color: True
            flat_color: app.theme.primary_text
            flat_background_color: app.theme.accent
            on_release: root.channel.reset_data_to_default()


<PosSettingsDropDown@ChannelSettingsDropDown>:
    do_scroll: False, False
    flat_color: app.theme.primary_text
    flat_border_color: app.theme.divider
    BoxLayout:
        size_hint: None, None
        orientation: 'vertical'
        spacing: '5dp'
        padding: '5dp'
        size: self.minimum_size
        BoxLayout:
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.name
                on_focus: if not self.focus: root.channel.name = self.text
            FlatImageButton:
                scale_down_color: True
                source: 'flat_delete.png'
                flat_color: app.theme.accent
                on_release:
                    root.dismiss()
                    app.delete_channel(root.channel)
        GridLayout:
            size_hint: None, None
            size: self.minimum_size
            padding: '5dp'
            spacing: '5dp'
            cols: 2
            FlatLabel:
                text: 'Select key-stroke:'
                size_hint: None, None
                size: self.texture_size
                center_texture: True
                flat_color: app.theme.text_primary
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.keyboard_key
                on_text: if self.text in app.channel_controller.channels_keys and app.channel_controller.channels_keys[self.text] is not root.channel: self.text = ''
                on_focus: if not self.focus: root.channel.keyboard_key = self.text
        FlatButton:
            text: 'Clear data'
            size_hint_y: None
            height: self.texture_size[1]
            size_hint_min_x: self.texture_size[0]
            padding: '5dp', '5dp'
            bold: True
            scale_down_color: True
            flat_color: app.theme.primary_text
            flat_background_color: app.theme.accent
            on_release: root.channel.reset_data_to_default()


<ZoneSettingsDropDown@ChannelSettingsDropDown>:
    do_scroll: False, False
    flat_color: app.theme.primary_text
    flat_border_color: app.theme.divider
    BoxLayout:
        size_hint: None, None
        orientation: 'vertical'
        spacing: '5dp'
        padding: '5dp'
        size: self.minimum_size
        BoxLayout:
            spacing: '5dp'
            size_hint_y: None
            height: self.minimum_height
            size_hint_min_x: self.minimum_width
            FlatSizedTextInput:
                size_hint_min_x: '100dp'
                background_color: app.theme.primary_light
                text: root.channel.name
                on_focus: if not self.focus: root.channel.name = self.text
            FlatImageButton:
                scale_down_color: True
                source: 'flat_delete.png'
                flat_color: app.theme.accent
                on_release:
                    root.dismiss()
                    app.delete_channel(root.channel)
