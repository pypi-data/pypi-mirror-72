Read yaml pointers.yaml
C function void intargs_in(const int * arg +intent(in))
C function void intargs_inout(int * arg +intent(inout))
C function void intargs_out(int * arg +intent(out))
C function void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
C function void cos_doubles(double * in +intent(in)+rank(1), double * out +deref(allocatable)+dimension(size(in))+intent(out), int sizein +implied(size(in))+intent(in)+value)
C function void truncate_to_int(double * in +intent(in)+rank(1), int * out +deref(allocatable)+dimension(size(in))+intent(out), int sizein +implied(size(in))+intent(in)+value)
C function void get_values(int * nvalues +intent(out), int * values +dimension(3)+intent(out))
C function void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
C function void iota_allocatable(int nvar +intent(in)+value, int * values +deref(allocatable)+dimension(nvar)+intent(out))
C function void iota_dimension(int nvar +intent(in)+value, int * values +dimension(nvar)+intent(out))
C function void Sum(int len +implied(size(values))+intent(in)+value, const int * values +intent(in)+rank(1), int * result +intent(out))
C function void fillIntArray(int * out +dimension(3)+intent(out))
C function void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+intent(in)+value)
C function void fill_with_zeros(double * x +intent(inout)+rank(1), int x_length +implied(size(x))+intent(in)+value)
C function int accumulate(const int * arr +intent(in)+rank(1), size_t len +implied(size(arr))+intent(in)+value)
C function int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C function int acceptCharArrayIn(char * * names +intent(in)+len+rank(1)+size)
C function void setGlobalInt(int value +intent(in)+value)
C function int sumFixedArray()
C function void getPtrToScalar(int * * nitems +deref(pointer)+intent(out))
C function void getPtrToScalar(int * * nitems +context+deref(pointer)+intent(out))
C function void getPtrToFixedArray(int * * count +deref(pointer)+dimension(10)+intent(out))
C function void getPtrToFixedArray(int * * count +context+deref(pointer)+dimension(10)+intent(out))
C function void getPtrToDynamicArray(int * * count +deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C function void getPtrToDynamicArray(int * * count +context+deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C function void getPtrToFuncArray(int * * count +deref(pointer)+dimension(getLen())+intent(out))
C function void getPtrToFuncArray(int * * count +context+deref(pointer)+dimension(getLen())+intent(out))
C function void getPtrToConstScalar(const int * * nitems +deref(pointer)+intent(out))
C function void getPtrToConstScalar(const int * * nitems +context+deref(pointer)+intent(out))
C function void getPtrToFixedConstArray(const int * * count +deref(pointer)+dimension(10)+intent(out))
C function void getPtrToFixedConstArray(const int * * count +context+deref(pointer)+dimension(10)+intent(out))
C function void getPtrToDynamicConstArray(const int * * count +deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C function void getPtrToDynamicConstArray(const int * * count +context+deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C function void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
C function void getRawPtrToScalar(int * * nitems +context+deref(raw)+intent(out))
C function void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
C function void getRawPtrToScalarForce(int * * nitems +context+deref(raw)+intent(out))
C function void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
C function void getRawPtrToFixedArray(int * * count +context+deref(raw)+intent(out))
C function void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
C function void getRawPtrToFixedArrayForce(int * * count +context+deref(raw)+intent(out))
C function void getRawPtrToInt2d(int * * * arg +intent(out))
C function int checkInt2d(int * * arg +intent(in))
C function void DimensionIn(const int * arg +dimension(10,20)+intent(in))
C function void * returnAddress1(int flag +intent(in)+value)
C function void * returnAddress2(int flag +intent(in)+value)
C function void fetchVoidPtr(void * * addr +intent(out))
C function int * returnIntPtrToScalar()
C function int * returnIntPtrToFixedArray() +dimension(10)
C function int * returnIntPtrToFixedArray() +context(DSHC_rv)+dimension(10)
C function const int * returnIntPtrToConstScalar()
C function const int * returnIntPtrToFixedConstArray() +dimension(10)
C function const int * returnIntPtrToFixedConstArray() +context(DSHC_rv)+dimension(10)
C function int * returnIntScalar() +deref(scalar)
C function int * returnIntRaw() +deref(raw)
C function int * returnIntRawWithArgs(const char * name +intent(in)) +deref(raw)
C function int * * returnRawPtrToInt2d()
Close wrappointers.h
Close wrappointers.c
Close typespointers.h
C-interface, Fortran function void intargs_in(const int * arg +intent(in))
C-interface, Fortran function void intargs_inout(int * arg +intent(inout))
C-interface, Fortran function void intargs_out(int * arg +intent(out))
C-interface, Fortran function void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
C-interface, Fortran function void cos_doubles(double * in +intent(in)+rank(1), double * out +deref(allocatable)+dimension(size(in))+intent(out), int sizein +implied(size(in))+intent(in)+value)
C-interface, Fortran function void truncate_to_int(double * in +intent(in)+rank(1), int * out +deref(allocatable)+dimension(size(in))+intent(out), int sizein +implied(size(in))+intent(in)+value)
C-interface, Fortran function void get_values(int * nvalues +intent(out), int * values +dimension(3)+intent(out))
C-interface, Fortran function void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
C-interface, Fortran function void iota_allocatable(int nvar +intent(in)+value, int * values +deref(allocatable)+dimension(nvar)+intent(out))
C-interface, Fortran function void iota_dimension(int nvar +intent(in)+value, int * values +dimension(nvar)+intent(out))
C-interface, Fortran function void Sum(int len +implied(size(values))+intent(in)+value, const int * values +intent(in)+rank(1), int * result +intent(out))
C-interface, Fortran function void fillIntArray(int * out +dimension(3)+intent(out))
C-interface, Fortran function void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+intent(in)+value)
C-interface, Fortran function void fill_with_zeros(double * x +intent(inout)+rank(1), int x_length +implied(size(x))+intent(in)+value)
C-interface, Fortran function int accumulate(const int * arr +intent(in)+rank(1), size_t len +implied(size(arr))+intent(in)+value)
C-interface, Fortran function int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C-interface function int acceptCharArrayIn(char * * names +intent(in)+len+rank(1)+size)
C-interface, Fortran function void setGlobalInt(int value +intent(in)+value)
C-interface, Fortran function int sumFixedArray()
C-interface, Fortran function void getPtrToScalar(int * * nitems +deref(pointer)+intent(out))
C-interface function void getPtrToScalar(int * * nitems +context+deref(pointer)+intent(out))
C-interface, Fortran function void getPtrToFixedArray(int * * count +deref(pointer)+dimension(10)+intent(out))
C-interface function void getPtrToFixedArray(int * * count +context+deref(pointer)+dimension(10)+intent(out))
C-interface, Fortran function void getPtrToDynamicArray(int * * count +deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface function void getPtrToDynamicArray(int * * count +context+deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface, Fortran function void getPtrToFuncArray(int * * count +deref(pointer)+dimension(getLen())+intent(out))
C-interface function void getPtrToFuncArray(int * * count +context+deref(pointer)+dimension(getLen())+intent(out))
C-interface, Fortran function void getPtrToConstScalar(const int * * nitems +deref(pointer)+intent(out))
C-interface function void getPtrToConstScalar(const int * * nitems +context+deref(pointer)+intent(out))
C-interface, Fortran function void getPtrToFixedConstArray(const int * * count +deref(pointer)+dimension(10)+intent(out))
C-interface function void getPtrToFixedConstArray(const int * * count +context+deref(pointer)+dimension(10)+intent(out))
C-interface, Fortran function void getPtrToDynamicConstArray(const int * * count +deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface function void getPtrToDynamicConstArray(const int * * count +context+deref(pointer)+dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface, Fortran function void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
C-interface function void getRawPtrToScalar(int * * nitems +context+deref(raw)+intent(out))
C-interface, Fortran function void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
C-interface function void getRawPtrToScalarForce(int * * nitems +context+deref(raw)+intent(out))
C-interface, Fortran function void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
C-interface function void getRawPtrToFixedArray(int * * count +context+deref(raw)+intent(out))
C-interface, Fortran function void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
C-interface function void getRawPtrToFixedArrayForce(int * * count +context+deref(raw)+intent(out))
C-interface, Fortran function void getRawPtrToInt2d(int * * * arg +intent(out))
C-interface, Fortran function int checkInt2d(int * * arg +intent(in))
C-interface, Fortran function void DimensionIn(const int * arg +dimension(10,20)+intent(in))
C-interface, Fortran function void * returnAddress1(int flag +intent(in)+value)
C-interface, Fortran function void * returnAddress2(int flag +intent(in)+value)
C-interface, Fortran function void fetchVoidPtr(void * * addr +intent(out))
C-interface, Fortran function int * returnIntPtrToScalar()
C-interface, Fortran function int * returnIntPtrToFixedArray() +dimension(10)
C-interface function int * returnIntPtrToFixedArray() +context(DSHC_rv)+dimension(10)
C-interface, Fortran function const int * returnIntPtrToConstScalar()
C-interface, Fortran function const int * returnIntPtrToFixedConstArray() +dimension(10)
C-interface function const int * returnIntPtrToFixedConstArray() +context(DSHC_rv)+dimension(10)
C-interface, Fortran function int * returnIntScalar() +deref(scalar)
C-interface, Fortran function int * returnIntRaw() +deref(raw)
C-interface, Fortran function int * returnIntRawWithArgs(const char * name +intent(in)) +deref(raw)
C-interface, Fortran function int * * returnRawPtrToInt2d()
Close wrapfpointers.f
