{
    "__NOTICE__": "This file is generated by Shroud 0.12.1 and is useful for debugging.",
    "library": {
        "classes": [
            {
                "cxx_header": [],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapArrayWrapper.h",
                    "C_impl_filename": "wrapArrayWrapper.cpp",
                    "C_name_scope": "ArrayWrapper_",
                    "C_type_name": "ARR_ArrayWrapper",
                    "F_capsule_data_type": "SHROUD_arraywrapper_capsule",
                    "F_derived_name": "arraywrapper",
                    "F_name_scope": "arraywrapper_",
                    "PY_PyObject": "PY_ArrayWrapper",
                    "PY_PyTypeObject": "PY_ArrayWrapper_Type",
                    "PY_capsule_name": "PY_ArrayWrapper_capsule_name",
                    "PY_from_object_func": "PP_ArrayWrapper_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_ArrayWrapper_to_Object",
                    "PY_to_object_idtor_func": "PP_ArrayWrapper_to_Object_idtor",
                    "PY_type_filename": "pyArrayWrappertype.cpp",
                    "class_scope": "ArrayWrapper::",
                    "cxx_class": "ArrayWrapper",
                    "cxx_type": "ArrayWrapper",
                    "file_scope": "ArrayWrapper"
                },
                "functions": [
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "ARR_ArrayWrapper",
                                "c_var": "SHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "ArrayWrapper",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "1",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_scalar_ctor",
                                "stmt1": "c_shadow_scalar_ctor"
                            },
                            "fmtf": {
                                "cxx_type": "ArrayWrapper",
                                "f_type": "type(arraywrapper)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_ctor",
                                "stmt1": "f_shadow_ctor",
                                "stmtc0": "c_shadow_ctor",
                                "stmtc1": "c_shadow_ctor"
                            },
                            "fmtpy": {
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_ArrayWrapper_to_Object_idtor",
                                "PyObject": "PY_ArrayWrapper",
                                "PyTypeObject": "PY_ArrayWrapper_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "ArrayWrapper",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv",
                                "vargs": "SHCXX_rv"
                            }
                        },
                        "_overloaded": true,
                        "ast": {
                            "attrs": {
                                "_constructor": true,
                                "_name": "ctor"
                            },
                            "params": [],
                            "specifier": [
                                "ArrayWrapper"
                            ],
                            "typemap_name": "ArrayWrapper"
                        },
                        "decl": "ArrayWrapper()",
                        "declgen": "ArrayWrapper()",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_ctor",
                            "C_prototype": "ARR_ArrayWrapper * SHC_rv",
                            "C_return_type": "ARR_ArrayWrapper *",
                            "F_C_call": "c_arraywrapper_ctor",
                            "F_C_name": "c_arraywrapper_ctor",
                            "F_arg_c_call": "SHT_rv%cxxmem",
                            "F_arguments": "",
                            "F_name_function": "ctor",
                            "F_name_generic": "arraywrapper",
                            "F_name_impl": "arraywrapper_ctor",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_ArrayWrapper_tp_init",
                            "PY_type_impl": "PY_ArrayWrapper_tp_init",
                            "PY_type_method": "tp_init",
                            "cxx_rv_decl": "ArrayWrapper SHCXX_rv",
                            "function_name": "ctor",
                            "underscore_name": "ctor"
                        },
                        "options": {
                            "F_create_generic": true
                        }
                    },
                    {
                        "_fmtargs": {
                            "size": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "size",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&size",
                                    "cxx_type": "int",
                                    "cxx_var": "size",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_size",
                                    "c_var": "size",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "size",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "size",
                                    "ctor_expr": "size",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&size",
                                    "cxx_type": "int",
                                    "cxx_var": "size",
                                    "data_var": "SHData_size",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_size",
                                    "size_var": "SHSize_size",
                                    "stmt0": "py_native_scalar_in",
                                    "stmt1": "py_default",
                                    "value_var": "SHValue_size"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "setSize",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "size",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void setSize(int size)",
                        "declgen": "void setSize(int size +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "size",
                            "C_name": "ARR_ArrayWrapper_set_size",
                            "C_prototype": "ARR_ArrayWrapper * self,\t int size",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_set_size",
                            "F_C_name": "c_arraywrapper_set_size",
                            "F_arg_c_call": "obj%cxxmem,\t size",
                            "F_arguments": "obj,\t size",
                            "F_name_function": "set_size",
                            "F_name_generic": "set_size",
                            "F_name_impl": "arraywrapper_set_size",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_setSize",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "setSize",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "set_size"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHC_rv",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "int",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "int",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_INT",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_scalar_result",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "getSize",
                                "pointer": []
                            },
                            "func_const": true,
                            "params": [],
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int getSize() const",
                        "declgen": "int getSize() const",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_size",
                            "C_prototype": "const ARR_ArrayWrapper * self",
                            "C_return_type": "int",
                            "F_C_call": "c_arraywrapper_get_size",
                            "F_C_name": "c_arraywrapper_get_size",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "get_size",
                            "F_name_generic": "get_size",
                            "F_name_impl": "arraywrapper_get_size",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getSize",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "int SHC_rv",
                            "function_name": "getSize",
                            "underscore_name": "get_size"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "size": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "size",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&size",
                                    "cxx_type": "int",
                                    "cxx_var": "size",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_&_out",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_size",
                                    "c_var": "size",
                                    "f_intent": "OUT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "size",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_&_out",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_&_out",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "size",
                                    "ctor_expr": "size",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&size",
                                    "cxx_type": "int",
                                    "cxx_var": "size",
                                    "data_var": "SHData_size",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_size",
                                    "size_var": "SHSize_size",
                                    "stmt0": "py_native_&_out",
                                    "stmt1": "py_native_&_out",
                                    "value_var": "SHValue_size"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fillSize",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "size",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fillSize(int &size +intent(out))",
                        "declgen": "void fillSize(int & size +intent(out))",
                        "fmtdict": {
                            "C_call_list": "*size",
                            "C_name": "ARR_ArrayWrapper_fill_size",
                            "C_prototype": "ARR_ArrayWrapper * self,\t int * size",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fill_size",
                            "F_C_name": "c_arraywrapper_fill_size",
                            "F_arg_c_call": "obj%cxxmem,\t size",
                            "F_arguments": "obj,\t size",
                            "F_name_function": "fill_size",
                            "F_name_generic": "fill_size",
                            "F_name_impl": "arraywrapper_fill_size",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fillSize",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fillSize",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fill_size"
                        },
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "allocate",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void allocate()",
                        "declgen": "void allocate()",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_allocate",
                            "C_prototype": "ARR_ArrayWrapper * self",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_allocate",
                            "F_C_name": "c_arraywrapper_allocate",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "allocate",
                            "F_name_generic": "allocate",
                            "F_name_impl": "arraywrapper_allocate",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_allocate",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "allocate",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "allocate"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHC_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "c_var_context": "DSHC_rv",
                                "c_var_dimension": "getSize()",
                                "cxx_type": "double",
                                "f_array_allocate": "(obj->getSize())",
                                "f_array_shape": ", DSHC_rv%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_type": "real(C_DOUBLE)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "f_native_*_result_pointer",
                                "stmt1": "f_native_*_result_pointer",
                                "stmtc0": "c_native_*_result_buf",
                                "stmtc1": "c_native_*_result_buf"
                            },
                            "fmtpy": {
                                "array_size": "self->obj->getSize()",
                                "c_deref": "*",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "*SHCXX_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHCXX_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "npy_dims_var": "SHD_rv",
                                "npy_intp_asgn": "SHD_rv[0] = self->obj->getSize();\n",
                                "npy_intp_decl": "npy_intp SHD_rv[1];\n",
                                "npy_rank": "1",
                                "numpy_type": "NPY_DOUBLE",
                                "py_var": "SHTPy_rv",
                                "rank": "1",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_*_result_pointer_numpy",
                                "stmt1": "py_native_*_result_pointer_numpy",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "declarator": {
                                "name": "getArray",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "double* getArray() +dimension(getSize())",
                        "declgen": "double * getArray() +dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array",
                            "C_prototype": "ARR_ArrayWrapper * self",
                            "C_return_type": "double *",
                            "F_C_call": "c_arraywrapper_get_array_bufferify",
                            "F_C_name": "c_arraywrapper_get_array",
                            "F_arg_c_call": "obj%cxxmem,\t DSHC_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_array",
                            "F_name_generic": "get_array",
                            "F_name_impl": "arraywrapper_get_array",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getArray",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "double * SHC_rv",
                            "function_name": "getArray",
                            "underscore_name": "get_array"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nDSHC_rv->shape[0] = SH_this->getSize();",
                                "c_array_size": "DSHC_rv->shape[0]",
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "c_var_context": "DSHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHC_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result_buf",
                                "stmt1": "c_native_*_result_buf"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "attrs": {
                                "context": "DSHC_rv",
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "declarator": {
                                "name": "getArray",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "double* getArray() +dimension(getSize())",
                        "declgen": "double * getArray() +context(DSHC_rv)+dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *DSHC_rv",
                            "C_return_type": "double *",
                            "F_C_name": "c_arraywrapper_get_array_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "double * SHC_rv",
                            "function_name": "getArray",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_array"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHC_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "c_var_context": "DSHC_rv",
                                "c_var_dimension": "getSize()",
                                "cxx_type": "double",
                                "f_array_allocate": "(obj->getSize())",
                                "f_array_shape": ", DSHC_rv%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_type": "real(C_DOUBLE)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "f_native_*_result_pointer",
                                "stmt1": "f_native_*_result_pointer",
                                "stmtc0": "c_native_*_result_buf",
                                "stmtc1": "c_native_*_result_buf"
                            },
                            "fmtpy": {
                                "array_size": "self->obj->getSize()",
                                "c_deref": "*",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "*SHCXX_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHCXX_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "npy_dims_var": "SHD_rv",
                                "npy_intp_asgn": "SHD_rv[0] = self->obj->getSize();\n",
                                "npy_intp_decl": "npy_intp SHD_rv[1];\n",
                                "npy_rank": "1",
                                "numpy_type": "NPY_DOUBLE",
                                "py_var": "SHTPy_rv",
                                "rank": "1",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_*_result_pointer_numpy",
                                "stmt1": "py_native_*_result_pointer_numpy",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "declarator": {
                                "name": "getArrayConst",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "func_const": true,
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "double* getArrayConst() const +dimension(getSize())",
                        "declgen": "double * getArrayConst() const +dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_const",
                            "C_prototype": "const ARR_ArrayWrapper * self",
                            "C_return_type": "double *",
                            "F_C_call": "c_arraywrapper_get_array_const_bufferify",
                            "F_C_name": "c_arraywrapper_get_array_const",
                            "F_arg_c_call": "obj%cxxmem,\t DSHC_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_array_const",
                            "F_name_generic": "get_array_const",
                            "F_name_impl": "arraywrapper_get_array_const",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getArrayConst",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "double * SHC_rv",
                            "function_name": "getArrayConst",
                            "underscore_name": "get_array_const"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nDSHC_rv->shape[0] = SH_this->getSize();",
                                "c_array_size": "DSHC_rv->shape[0]",
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "c_var_context": "DSHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "SHC_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result_buf",
                                "stmt1": "c_native_*_result_buf"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "attrs": {
                                "context": "DSHC_rv",
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "declarator": {
                                "name": "getArrayConst",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "func_const": true,
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "double* getArrayConst() const +dimension(getSize())",
                        "declgen": "double * getArrayConst() const +context(DSHC_rv)+dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_const_bufferify",
                            "C_prototype": "const ARR_ArrayWrapper * self,\t ARR_SHROUD_array *DSHC_rv",
                            "C_return_type": "double *",
                            "F_C_name": "c_arraywrapper_get_array_const_bufferify",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "double * SHC_rv",
                            "function_name": "getArrayConst",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_array_const"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "const ",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHC_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "c_var_context": "DSHC_rv",
                                "c_var_dimension": "getSize()",
                                "cxx_type": "double",
                                "f_array_allocate": "(obj->getSize())",
                                "f_array_shape": ", DSHC_rv%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_type": "real(C_DOUBLE)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "f_native_*_result_pointer",
                                "stmt1": "f_native_*_result_pointer",
                                "stmtc0": "c_native_*_result_buf",
                                "stmtc1": "c_native_*_result_buf"
                            },
                            "fmtpy": {
                                "array_size": "self->obj->getSize()",
                                "c_deref": "*",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "*SHCXX_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHCXX_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "npy_dims_var": "SHD_rv",
                                "npy_intp_asgn": "SHD_rv[0] = self->obj->getSize();\n",
                                "npy_intp_decl": "npy_intp SHD_rv[1];\n",
                                "npy_rank": "1",
                                "numpy_type": "NPY_DOUBLE",
                                "py_var": "SHTPy_rv",
                                "rank": "1",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_*_result_pointer_numpy",
                                "stmt1": "py_native_*_result_pointer_numpy",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getArrayC",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "const double *getArrayC() +dimension(getSize())",
                        "declgen": "const double * getArrayC() +dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_c",
                            "C_prototype": "ARR_ArrayWrapper * self",
                            "C_return_type": "const double *",
                            "F_C_call": "c_arraywrapper_get_array_c_bufferify",
                            "F_C_name": "c_arraywrapper_get_array_c",
                            "F_arg_c_call": "obj%cxxmem,\t DSHC_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_array_c",
                            "F_name_generic": "get_array_c",
                            "F_name_impl": "arraywrapper_get_array_c",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getArrayC",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "const double * SHC_rv",
                            "function_name": "getArrayC",
                            "underscore_name": "get_array_c"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nDSHC_rv->shape[0] = SH_this->getSize();",
                                "c_array_size": "DSHC_rv->shape[0]",
                                "c_const": "const ",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "c_var_context": "DSHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHC_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result_buf",
                                "stmt1": "c_native_*_result_buf"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "attrs": {
                                "context": "DSHC_rv",
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getArrayC",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "const double *getArrayC() +dimension(getSize())",
                        "declgen": "const double * getArrayC() +context(DSHC_rv)+dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_c_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *DSHC_rv",
                            "C_return_type": "const double *",
                            "F_C_name": "c_arraywrapper_get_array_c_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "const double * SHC_rv",
                            "function_name": "getArrayC",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_array_c"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "const ",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHC_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "c_var_context": "DSHC_rv",
                                "c_var_dimension": "getSize()",
                                "cxx_type": "double",
                                "f_array_allocate": "(obj->getSize())",
                                "f_array_shape": ", DSHC_rv%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_type": "real(C_DOUBLE)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "f_native_*_result_pointer",
                                "stmt1": "f_native_*_result_pointer",
                                "stmtc0": "c_native_*_result_buf",
                                "stmtc1": "c_native_*_result_buf"
                            },
                            "fmtpy": {
                                "array_size": "self->obj->getSize()",
                                "c_deref": "*",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "*SHCXX_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHCXX_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "npy_dims_var": "SHD_rv",
                                "npy_intp_asgn": "SHD_rv[0] = self->obj->getSize();\n",
                                "npy_intp_decl": "npy_intp SHD_rv[1];\n",
                                "npy_rank": "1",
                                "numpy_type": "NPY_DOUBLE",
                                "py_var": "SHTPy_rv",
                                "rank": "1",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_*_result_pointer_numpy",
                                "stmt1": "py_native_*_result_pointer_numpy",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getArrayConstC",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "func_const": true,
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "const double *getArrayConstC() const +dimension(getSize())",
                        "declgen": "const double * getArrayConstC() const +dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_const_c",
                            "C_prototype": "const ARR_ArrayWrapper * self",
                            "C_return_type": "const double *",
                            "F_C_call": "c_arraywrapper_get_array_const_c_bufferify",
                            "F_C_name": "c_arraywrapper_get_array_const_c",
                            "F_arg_c_call": "obj%cxxmem,\t DSHC_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_array_const_c",
                            "F_name_generic": "get_array_const_c",
                            "F_name_impl": "arraywrapper_get_array_const_c",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getArrayConstC",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "const double * SHC_rv",
                            "function_name": "getArrayConstC",
                            "underscore_name": "get_array_const_c"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nDSHC_rv->shape[0] = SH_this->getSize();",
                                "c_array_size": "DSHC_rv->shape[0]",
                                "c_const": "const ",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "c_var_context": "DSHC_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_nonconst_ptr": "const_cast<double *>\t(SHC_rv)",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_*_result_buf",
                                "stmt1": "c_native_*_result_buf"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "attrs": {
                                "context": "DSHC_rv",
                                "deref": "pointer",
                                "dimension": "getSize()"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getArrayConstC",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "func_const": true,
                            "metaattrs": {
                                "dimension": [
                                    {
                                        "args": [],
                                        "name": "getSize"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "const double *getArrayConstC() const +dimension(getSize())",
                        "declgen": "const double * getArrayConstC() const +context(DSHC_rv)+dimension(getSize())",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_get_array_const_c_bufferify",
                            "C_prototype": "const ARR_ArrayWrapper * self,\t ARR_SHROUD_array *DSHC_rv",
                            "C_return_type": "const double *",
                            "F_C_name": "c_arraywrapper_get_array_const_c_bufferify",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "const double * SHC_rv",
                            "function_name": "getArrayConstC",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_array_const_c"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_**_out",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "isize",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "double",
                                    "c_var": "array",
                                    "ctor_expr": "*array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "npy_dims_var": "SHD_array",
                                    "npy_intp_asgn": "SHD_array[0] = isize;\n",
                                    "npy_intp_decl": "npy_intp SHD_array[1];\n",
                                    "npy_rank": "1",
                                    "numpy_type": "NPY_DOUBLE",
                                    "py_var": "SHPy_array",
                                    "rank": "1",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_native_**_out_pointer_numpy",
                                    "stmt1": "py_native_**_out_pointer_numpy",
                                    "value_var": "SHValue_array"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_*_inout",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "int",
                                    "c_var": "isize",
                                    "ctor_expr": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "data_var": "SHData_isize",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_isize",
                                    "size_var": "SHSize_isize",
                                    "stmt0": "py_native_*_inout",
                                    "stmt1": "py_native_*_inout",
                                    "value_var": "SHValue_isize"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayPtr",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayPtr(double **array +intent(out)+dimension(isize), int *isize     +hidden)",
                        "declgen": "void fetchArrayPtr(double * * array +deref(pointer)+dimension(isize)+intent(out), int * isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "array,\t isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ptr",
                            "C_prototype": "ARR_ArrayWrapper * self,\t double * * array,\t int * isize",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_array_ptr_bufferify",
                            "F_C_name": "c_arraywrapper_fetch_array_ptr",
                            "F_arg_c_call": "obj%cxxmem,\t Darray,\t isize",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_array_ptr",
                            "F_name_generic": "fetch_array_ptr",
                            "F_name_impl": "arraywrapper_fetch_array_ptr",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchArrayPtr",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayPtr",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_array_ptr"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_shape": "\nDarray->shape[0] = *isize;",
                                    "c_array_size": "Darray->shape[0]",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_**_out_buf",
                                    "stmt1": "c_native_**_out_buf"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "c_var_dimension": "isize",
                                    "f_array_allocate": "(isize)",
                                    "f_array_shape": ", Darray%shape(1:1)",
                                    "f_assumed_shape": "(:)",
                                    "f_intent": "OUT",
                                    "f_type": "real(C_DOUBLE)",
                                    "f_var": "array",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "f_native_**_out_pointer",
                                    "stmt1": "f_native_**_out",
                                    "stmtc0": "c_native_**_out_buf",
                                    "stmtc1": "c_native_**_out_buf"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_*_inout_buf",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_isize",
                                    "c_var": "isize",
                                    "f_intent": "INOUT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "isize",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_*_inout",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_*_inout_buf",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayPtr",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "context": "Darray",
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayPtr(double **array +intent(out)+dimension(isize), int *isize     +hidden)",
                        "declgen": "void fetchArrayPtr(double * * array +context+deref(pointer)+dimension(isize)+intent(out), int * isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "&array,\t isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ptr_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *Darray,\t int * isize",
                            "C_return_type": "void",
                            "F_C_name": "c_arraywrapper_fetch_array_ptr_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayPtr",
                            "function_suffix": "_bufferify",
                            "stmt0": "c",
                            "stmt1": "c_default",
                            "underscore_name": "fetch_array_ptr"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_*&_out",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "isize",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "double",
                                    "c_var": "array",
                                    "ctor_expr": "*array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "npy_dims_var": "SHD_array",
                                    "npy_intp_asgn": "SHD_array[0] = isize;\n",
                                    "npy_intp_decl": "npy_intp SHD_array[1];\n",
                                    "npy_rank": "1",
                                    "numpy_type": "NPY_DOUBLE",
                                    "py_var": "SHPy_array",
                                    "rank": "1",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_native_*&_out_pointer_numpy",
                                    "stmt1": "py_native_*&_out_pointer_numpy",
                                    "value_var": "SHValue_array"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_&_inout",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "isize",
                                    "ctor_expr": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "data_var": "SHData_isize",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_isize",
                                    "size_var": "SHSize_isize",
                                    "stmt0": "py_native_&_inout",
                                    "stmt1": "py_native_&_inout",
                                    "value_var": "SHValue_isize"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayRef",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayRef(double *&array +intent(out)+dimension(isize), int &isize     +hidden)",
                        "declgen": "void fetchArrayRef(double * & array +deref(pointer)+dimension(isize)+intent(out), int & isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "*array,\t *isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ref",
                            "C_prototype": "ARR_ArrayWrapper * self,\t double * * array,\t int * isize",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_array_ref_bufferify",
                            "F_C_name": "c_arraywrapper_fetch_array_ref",
                            "F_arg_c_call": "obj%cxxmem,\t Darray,\t isize",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_array_ref",
                            "F_name_generic": "fetch_array_ref",
                            "F_name_impl": "arraywrapper_fetch_array_ref",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchArrayRef",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayRef",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_array_ref"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_shape": "\nDarray->shape[0] = *isize;",
                                    "c_array_size": "Darray->shape[0]",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_*&_out_buf",
                                    "stmt1": "c_native_*&_out_buf"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "c_var_dimension": "isize",
                                    "f_array_allocate": "(isize)",
                                    "f_array_shape": ", Darray%shape(1:1)",
                                    "f_assumed_shape": "(:)",
                                    "f_intent": "OUT",
                                    "f_type": "real(C_DOUBLE)",
                                    "f_var": "array",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "f_native_*&_out_pointer",
                                    "stmt1": "f_native_*&_out",
                                    "stmtc0": "c_native_*&_out_buf",
                                    "stmtc1": "c_native_*&_out_buf"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_&_inout_buf",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_isize",
                                    "c_var": "isize",
                                    "f_intent": "INOUT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "isize",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_&_inout",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_&_inout_buf",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayRef",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "context": "Darray",
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayRef(double *&array +intent(out)+dimension(isize), int &isize     +hidden)",
                        "declgen": "void fetchArrayRef(double * & array +context+deref(pointer)+dimension(isize)+intent(out), int & isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "array,\t *isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ref_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *Darray,\t int * isize",
                            "C_return_type": "void",
                            "F_C_name": "c_arraywrapper_fetch_array_ref_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayRef",
                            "function_suffix": "_bufferify",
                            "stmt0": "c",
                            "stmt1": "c_default",
                            "underscore_name": "fetch_array_ref"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_**_out",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "isize",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_type": "double",
                                    "c_var": "array",
                                    "ctor_expr": "*array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "npy_dims_var": "SHD_array",
                                    "npy_intp_asgn": "SHD_array[0] = isize;\n",
                                    "npy_intp_decl": "npy_intp SHD_array[1];\n",
                                    "npy_rank": "1",
                                    "numpy_type": "NPY_DOUBLE",
                                    "py_var": "SHPy_array",
                                    "rank": "1",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_native_**_out_pointer_numpy",
                                    "stmt1": "py_native_**_out_pointer_numpy",
                                    "value_var": "SHValue_array"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_*_inout",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "int",
                                    "c_var": "isize",
                                    "ctor_expr": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "data_var": "SHData_isize",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_isize",
                                    "size_var": "SHSize_isize",
                                    "stmt0": "py_native_*_inout",
                                    "stmt1": "py_native_*_inout",
                                    "value_var": "SHValue_isize"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayPtrConst",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayPtrConst( const double **array +intent(out)+dimension(isize), int *isize     +hidden)",
                        "declgen": "void fetchArrayPtrConst(const double * * array +deref(pointer)+dimension(isize)+intent(out), int * isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "array,\t isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ptr_const",
                            "C_prototype": "ARR_ArrayWrapper * self,\t const double * * array,\t int * isize",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_array_ptr_const_bufferify",
                            "F_C_name": "c_arraywrapper_fetch_array_ptr_const",
                            "F_arg_c_call": "obj%cxxmem,\t Darray,\t isize",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_array_ptr_const",
                            "F_name_generic": "fetch_array_ptr_const",
                            "F_name_impl": "arraywrapper_fetch_array_ptr_const",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchArrayPtrConst",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayPtrConst",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_array_ptr_const"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_shape": "\nDarray->shape[0] = *isize;",
                                    "c_array_size": "Darray->shape[0]",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_**_out_buf",
                                    "stmt1": "c_native_**_out_buf"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "c_var_dimension": "isize",
                                    "f_array_allocate": "(isize)",
                                    "f_array_shape": ", Darray%shape(1:1)",
                                    "f_assumed_shape": "(:)",
                                    "f_intent": "OUT",
                                    "f_type": "real(C_DOUBLE)",
                                    "f_var": "array",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "f_native_**_out_pointer",
                                    "stmt1": "f_native_**_out",
                                    "stmtc0": "c_native_**_out_buf",
                                    "stmtc1": "c_native_**_out_buf"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_*_inout_buf",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_isize",
                                    "c_var": "isize",
                                    "f_intent": "INOUT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "isize",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_*_inout",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_*_inout_buf",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayPtrConst",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "context": "Darray",
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayPtrConst( const double **array +intent(out)+dimension(isize), int *isize     +hidden)",
                        "declgen": "void fetchArrayPtrConst(const double * * array +context+deref(pointer)+dimension(isize)+intent(out), int * isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "&array,\t isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ptr_const_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *Darray,\t int * isize",
                            "C_return_type": "void",
                            "F_C_name": "c_arraywrapper_fetch_array_ptr_const_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayPtrConst",
                            "function_suffix": "_bufferify",
                            "stmt0": "c",
                            "stmt1": "c_default",
                            "underscore_name": "fetch_array_ptr_const"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_*&_out",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "isize",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_type": "double",
                                    "c_var": "array",
                                    "ctor_expr": "*array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "npy_dims_var": "SHD_array",
                                    "npy_intp_asgn": "SHD_array[0] = isize;\n",
                                    "npy_intp_decl": "npy_intp SHD_array[1];\n",
                                    "npy_rank": "1",
                                    "numpy_type": "NPY_DOUBLE",
                                    "py_var": "SHPy_array",
                                    "rank": "1",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_native_*&_out_pointer_numpy",
                                    "stmt1": "py_native_*&_out_pointer_numpy",
                                    "value_var": "SHValue_array"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_&_inout",
                                    "stmt1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "isize",
                                    "ctor_expr": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "data_var": "SHData_isize",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_isize",
                                    "size_var": "SHSize_isize",
                                    "stmt0": "py_native_&_inout",
                                    "stmt1": "py_native_&_inout",
                                    "value_var": "SHValue_isize"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayRefConst",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayRefConst( const double *&array +intent(out)+dimension(isize), int &isize     +hidden)",
                        "declgen": "void fetchArrayRefConst(const double * & array +deref(pointer)+dimension(isize)+intent(out), int & isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "*array,\t *isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ref_const",
                            "C_prototype": "ARR_ArrayWrapper * self,\t const double * * array,\t int * isize",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_array_ref_const_bufferify",
                            "F_C_name": "c_arraywrapper_fetch_array_ref_const",
                            "F_arg_c_call": "obj%cxxmem,\t Darray,\t isize",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_array_ref_const",
                            "F_name_generic": "fetch_array_ref_const",
                            "F_name_impl": "arraywrapper_fetch_array_ref_const",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchArrayRefConst",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayRefConst",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_array_ref_const"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_shape": "\nDarray->shape[0] = *isize;",
                                    "c_array_size": "Darray->shape[0]",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "const_cast<double *>\t(array)",
                                    "cxx_type": "double",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "c_native_*&_out_buf",
                                    "stmt1": "c_native_*&_out_buf"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "c_var_context": "Darray",
                                    "c_var_dimension": "isize",
                                    "f_array_allocate": "(isize)",
                                    "f_array_shape": ", Darray%shape(1:1)",
                                    "f_assumed_shape": "(:)",
                                    "f_intent": "OUT",
                                    "f_type": "real(C_DOUBLE)",
                                    "f_var": "array",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_DOUBLE",
                                    "stmt0": "f_native_*&_out_pointer",
                                    "stmt1": "f_native_*&_out",
                                    "stmtc0": "c_native_*&_out_buf",
                                    "stmtc1": "c_native_*&_out_buf"
                                }
                            },
                            "isize": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "isize",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&isize",
                                    "cxx_type": "int",
                                    "cxx_var": "isize",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_&_inout_buf",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_isize",
                                    "c_var": "isize",
                                    "f_intent": "INOUT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "isize",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_&_inout",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_&_inout_buf",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "fetchArrayRefConst",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "context": "Darray",
                                        "deref": "pointer",
                                        "dimension": "isize",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "isize"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "double"
                                },
                                {
                                    "attrs": {
                                        "hidden": true,
                                        "intent": "inout"
                                    },
                                    "declarator": {
                                        "name": "isize",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchArrayRefConst( const double *&array +intent(out)+dimension(isize), int &isize     +hidden)",
                        "declgen": "void fetchArrayRefConst(const double * & array +context+deref(pointer)+dimension(isize)+intent(out), int & isize +hidden+intent(inout))",
                        "fmtdict": {
                            "C_call_list": "array,\t *isize",
                            "C_name": "ARR_ArrayWrapper_fetch_array_ref_const_bufferify",
                            "C_prototype": "ARR_ArrayWrapper * self,\t ARR_SHROUD_array *Darray,\t int * isize",
                            "C_return_type": "void",
                            "F_C_name": "c_arraywrapper_fetch_array_ref_const_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchArrayRefConst",
                            "function_suffix": "_bufferify",
                            "stmt0": "c",
                            "stmt1": "c_default",
                            "underscore_name": "fetch_array_ref_const"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "c_void_**_out",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "f_intent": "OUT",
                                    "f_type": "type(C_PTR)",
                                    "f_var": "array",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "f_void_**_out",
                                    "stmt1": "f_void_**_out",
                                    "stmtc0": "c_void_**_out",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "void",
                                    "c_var": "array",
                                    "ctor_expr": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "numpy_type": null,
                                    "py_var": "SHPy_array",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_void_**_out",
                                    "stmt1": "py_void_**_out",
                                    "value_var": "SHValue_array"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchVoidPtr",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchVoidPtr(void **array +intent(out))",
                        "declgen": "void fetchVoidPtr(void * * array +intent(out))",
                        "fmtdict": {
                            "C_call_list": "array",
                            "C_name": "ARR_ArrayWrapper_fetch_void_ptr",
                            "C_prototype": "ARR_ArrayWrapper * self,\t void * * array",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_void_ptr",
                            "F_C_name": "c_arraywrapper_fetch_void_ptr",
                            "F_arg_c_call": "obj%cxxmem,\t array",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_void_ptr",
                            "F_name_generic": "fetch_void_ptr",
                            "F_name_impl": "arraywrapper_fetch_void_ptr",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchVoidPtr",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchVoidPtr",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_void_ptr"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "c_void_*&_out",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "f_intent": "OUT",
                                    "f_type": "type(C_PTR)",
                                    "f_var": "array",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "f_void_*&_out",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_void_*&_out",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "void",
                                    "c_var": "array",
                                    "ctor_expr": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "numpy_type": null,
                                    "py_var": "SHPy_array",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_void_*&_out",
                                    "stmt1": "py_void_*&_out",
                                    "value_var": "SHValue_array"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "fetchVoidRef",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            },
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void fetchVoidRef(void *&array +intent(out))",
                        "declgen": "void fetchVoidRef(void * & array +intent(out))",
                        "fmtdict": {
                            "C_call_list": "*array",
                            "C_name": "ARR_ArrayWrapper_fetch_void_ref",
                            "C_prototype": "ARR_ArrayWrapper * self,\t void * * array",
                            "C_return_type": "void",
                            "F_C_call": "c_arraywrapper_fetch_void_ref",
                            "F_C_name": "c_arraywrapper_fetch_void_ref",
                            "F_arg_c_call": "obj%cxxmem,\t array",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "fetch_void_ref",
                            "F_name_generic": "fetch_void_ref",
                            "F_name_impl": "arraywrapper_fetch_void_ref",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_fetchVoidRef",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "fetchVoidRef",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "fetch_void_ref"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "array": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "c_void_*_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_array",
                                    "c_var": "array",
                                    "f_intent": "IN",
                                    "f_type": "type(C_PTR)",
                                    "f_var": "array",
                                    "sh_type": "SH_TYPE_CPTR",
                                    "stmt0": "f_void_*_in",
                                    "stmt1": "f_void_*_in",
                                    "stmtc0": "c_void_*_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "void",
                                    "c_var": "array",
                                    "ctor_expr": "*array",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "array",
                                    "cxx_type": "void",
                                    "cxx_var": "array",
                                    "data_var": "SHData_array",
                                    "numpy_type": null,
                                    "py_var": "SHPy_array",
                                    "pytmp_var": "SHTPy_array",
                                    "size_var": "SHSize_array",
                                    "stmt0": "py_void_*_in",
                                    "stmt1": "py_void_*_in",
                                    "value_var": "SHValue_array"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "bool",
                                "c_var": "SHC_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHC_rv",
                                "cxx_type": "bool",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_BOOL",
                                "stmt0": "c_bool_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "bool",
                                "f_type": "logical",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_BOOL",
                                "stmt0": "f_bool_scalar_result",
                                "stmt1": "f_bool_result",
                                "stmtc0": "c_bool_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "PyTypeObject": "PyBool_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "bool",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_BOOL",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_bool_scalar_result",
                                "stmt1": "py_bool_result",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "checkPtr",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "array",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                }
                            ],
                            "specifier": [
                                "bool"
                            ],
                            "typemap_name": "bool"
                        },
                        "decl": "bool checkPtr(void *array)",
                        "declgen": "bool checkPtr(void * array +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "array",
                            "C_name": "ARR_ArrayWrapper_check_ptr",
                            "C_prototype": "ARR_ArrayWrapper * self,\t void * array",
                            "C_return_type": "bool",
                            "F_C_call": "c_arraywrapper_check_ptr",
                            "F_C_name": "c_arraywrapper_check_ptr",
                            "F_arg_c_call": "obj%cxxmem,\t array",
                            "F_arguments": "obj,\t array",
                            "F_name_function": "check_ptr",
                            "F_name_generic": "check_ptr",
                            "F_name_impl": "arraywrapper_check_ptr",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_checkPtr",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "bool SHC_rv",
                            "function_name": "checkPtr",
                            "underscore_name": "check_ptr"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "double",
                                "c_var": "SHC_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHC_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "double",
                                "f_type": "real(C_DOUBLE)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_DOUBLE",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "double",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_DOUBLE",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_scalar_result",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "sumArray",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "decl": "double sumArray()",
                        "declgen": "double sumArray()",
                        "fmtdict": {
                            "C_name": "ARR_ArrayWrapper_sum_array",
                            "C_prototype": "ARR_ArrayWrapper * self",
                            "C_return_type": "double",
                            "F_C_call": "c_arraywrapper_sum_array",
                            "F_C_name": "c_arraywrapper_sum_array",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "sum_array",
                            "F_name_generic": "sum_array",
                            "F_name_impl": "arraywrapper_sum_array",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_sumArray",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "cxx_rv_decl": "double SHC_rv",
                            "function_name": "sumArray",
                            "underscore_name": "sum_array"
                        },
                        "options": {}
                    }
                ],
                "name": "ArrayWrapper",
                "options": {},
                "scope": "ArrayWrapper::",
                "typemap_name": "ArrayWrapper"
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "arrayclass.hpp"
        ],
        "language": "cxx",
        "scope_file": [
            "arrayclass"
        ]
    }
}