{
    "__NOTICE__": "This file is generated by Shroud 0.12.1 and is useful for debugging.",
    "library": {
        "classes": [
            {
                "as_struct": true,
                "cxx_header": [],
                "fmtdict": {
                    "C_header_filename": "wrapCstruct_as_class.h",
                    "C_impl_filename": "wrapCstruct_as_class.cpp",
                    "C_name_scope": "Cstruct_as_class_",
                    "C_type_name": "STR_cstruct_as_class",
                    "F_capsule_data_type": "SHROUD_cstruct_as_class_capsule",
                    "F_derived_name": "cstruct_as_class",
                    "F_name_scope": "cstruct_as_class_",
                    "PY_PyObject": "PY_Cstruct_as_class",
                    "PY_PyTypeObject": "PY_Cstruct_as_class_Type",
                    "PY_capsule_name": "PY_Cstruct_as_class_capsule_name",
                    "PY_from_object_func": "PP_Cstruct_as_class_from_Object",
                    "PY_struct_array_descr_create": "PY_Cstruct_as_class_create_array_descr",
                    "PY_struct_array_descr_name": "Cstruct_as_class_dtype",
                    "PY_struct_array_descr_variable": "PY_Cstruct_as_class_array_descr",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Cstruct_as_class_to_Object",
                    "PY_to_object_idtor_func": "PP_Cstruct_as_class_to_Object_idtor",
                    "PY_type_filename": "pyCstruct_as_classtype.cpp",
                    "class_scope": "Cstruct_as_class::",
                    "cxx_class": "Cstruct_as_class",
                    "cxx_type": "Cstruct_as_class",
                    "file_scope": "Cstruct_as_class"
                },
                "functions": [
                    {
                        "_fmtargs": {
                            "x1": {
                                "fmtpy": {
                                    "PY_member_object": "XXXPY_member_object",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "x1",
                                    "ctor_expr": "x1",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&x1",
                                    "cxx_type": "int",
                                    "cxx_var": "x1",
                                    "data_var": "SHData_x1",
                                    "field_name": "x1",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_x1",
                                    "size_var": "SHSize_x1",
                                    "stmt0": "py_ctor_native_scalar_numpy",
                                    "stmt1": "py_ctor_native",
                                    "value_var": "SHValue_x1"
                                }
                            },
                            "y1": {
                                "fmtpy": {
                                    "PY_member_object": "XXXPY_member_object",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "y1",
                                    "ctor_expr": "y1",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&y1",
                                    "cxx_type": "int",
                                    "cxx_var": "y1",
                                    "data_var": "SHData_y1",
                                    "field_name": "y1",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_y1",
                                    "size_var": "SHSize_y1",
                                    "stmt0": "py_ctor_native_scalar_numpy",
                                    "stmt1": "py_ctor_native",
                                    "value_var": "SHValue_y1"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtpy": {
                                "PYN_descr": "PY_Cstruct_as_class_array_descr",
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_Cstruct_as_class_to_Object_idtor",
                                "PyObject": "PY_Cstruct_as_class",
                                "PyTypeObject": "PY_Cstruct_as_class_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "Cstruct_as_class",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv",
                                "vargs": "SHCXX_rv"
                            }
                        },
                        "_generated": "struct_as_class_ctor",
                        "ast": {
                            "attrs": {
                                "_constructor": true,
                                "name": "Cstruct_as_class_ctor"
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "declarator": {
                                        "name": "x1",
                                        "pointer": []
                                    },
                                    "metaattrs": {
                                        "struct_member": "x1"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "declarator": {
                                        "name": "y1",
                                        "pointer": []
                                    },
                                    "metaattrs": {
                                        "struct_member": "y1"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "Cstruct_as_class"
                            ],
                            "typemap_name": "Cstruct_as_class"
                        },
                        "decl": "Cstruct_as_class_ctor",
                        "declgen": "Cstruct_as_class(int x1 +intent(in), int y1 +intent(in)) +name(Cstruct_as_class_ctor)",
                        "fmtdict": {
                            "PY_name_impl": "PY_Cstruct_as_class_tp_init",
                            "PY_type_impl": "PY_Cstruct_as_class_tp_init",
                            "PY_type_method": "tp_init",
                            "function_name": "Cstruct_as_class_ctor",
                            "underscore_name": "cstruct_as_class_ctor"
                        },
                        "options": {
                            "wrap_c": false,
                            "wrap_fortran": false,
                            "wrap_lua": false
                        }
                    }
                ],
                "name": "Cstruct_as_class",
                "options": {
                    "PY_struct_arg": "class"
                },
                "scope": "Cstruct_as_class::",
                "typemap_name": "Cstruct_as_class",
                "variables": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "x1",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Cstruct_as_class_x1_getter",
                            "PY_setter": "PY_Cstruct_as_class_x1_setter",
                            "PY_struct_context": "self->obj->",
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "x1",
                            "variable_lower": "x1",
                            "variable_name": "x1",
                            "variable_upper": "X1"
                        },
                        "name": "x1",
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "y1",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Cstruct_as_class_y1_getter",
                            "PY_setter": "PY_Cstruct_as_class_y1_setter",
                            "PY_struct_context": "self->obj->",
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "y1",
                            "variable_lower": "y1",
                            "variable_name": "y1",
                            "variable_upper": "Y1"
                        },
                        "name": "y1",
                        "options": {}
                    }
                ]
            },
            {
                "as_struct": true,
                "cxx_header": [],
                "fmtdict": {
                    "C_header_filename": "wrapCstruct_as_numpy.h",
                    "C_impl_filename": "wrapCstruct_as_numpy.cpp",
                    "C_name_scope": "Cstruct_as_numpy_",
                    "C_type_name": "STR_cstruct_as_numpy",
                    "F_capsule_data_type": "SHROUD_cstruct_as_numpy_capsule",
                    "F_derived_name": "cstruct_as_numpy",
                    "F_name_scope": "cstruct_as_numpy_",
                    "PY_PyObject": "PY_Cstruct_as_numpy",
                    "PY_PyTypeObject": "PY_Cstruct_as_numpy_Type",
                    "PY_from_object_func": "PP_Cstruct_as_numpy_from_Object",
                    "PY_struct_array_descr_create": "PY_Cstruct_as_numpy_create_array_descr",
                    "PY_struct_array_descr_name": "Cstruct_as_numpy_dtype",
                    "PY_struct_array_descr_variable": "PY_Cstruct_as_numpy_array_descr",
                    "PY_to_object_func": "PP_Cstruct_as_numpy_to_Object",
                    "PY_to_object_idtor_func": "PP_Cstruct_as_numpy_to_Object_idtor",
                    "class_scope": "Cstruct_as_numpy::",
                    "cxx_class": "Cstruct_as_numpy",
                    "cxx_type": "Cstruct_as_numpy",
                    "file_scope": "Cstruct_as_numpy"
                },
                "name": "Cstruct_as_numpy",
                "options": {
                    "PY_struct_arg": "numpy"
                },
                "scope": "Cstruct_as_numpy::",
                "typemap_name": "Cstruct_as_numpy",
                "variables": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "x2",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "x2",
                            "variable_lower": "x2",
                            "variable_name": "x2",
                            "variable_upper": "X2"
                        },
                        "name": "x2",
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "y2",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "y2",
                            "variable_lower": "y2",
                            "variable_name": "y2",
                            "variable_upper": "Y2"
                        },
                        "name": "y2",
                        "options": {}
                    }
                ]
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "struct.h"
        ],
        "functions": [
            {
                "_fmtargs": {
                    "s1": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct_as_class_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct_as_class_to_Object_idtor",
                            "PyObject": "PY_Cstruct_as_class",
                            "PyTypeObject": "PY_Cstruct_as_class_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_type": "STR_cstruct_as_class",
                            "c_var": "s1",
                            "ctor_expr": "*s1",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "s1",
                            "cxx_type": "Cstruct_as_class",
                            "cxx_var": "s1",
                            "data_var": "SHData_s1",
                            "numpy_type": null,
                            "py_type": "PY_Cstruct_as_class",
                            "py_var": "SHPy_s1",
                            "size_var": "SHSize_s1",
                            "stmt0": "py_struct_*_in_class",
                            "stmt1": "py_struct_*_in_class",
                            "value_var": "SHValue_s1"
                        }
                    },
                    "s2": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct_as_numpy_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct_as_numpy_to_Object_idtor",
                            "PyObject": "PY_Cstruct_as_numpy",
                            "PyTypeObject": "PY_Cstruct_as_numpy_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_type": "STR_cstruct_as_numpy",
                            "c_var": "s2",
                            "ctor_expr": "*s2",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "s2",
                            "cxx_type": "Cstruct_as_numpy",
                            "cxx_var": "s2",
                            "data_var": "SHData_s2",
                            "numpy_type": null,
                            "py_var": "SHPy_s2",
                            "pytmp_var": "SHTPy_s2",
                            "size_var": "SHSize_s2",
                            "stmt0": "py_struct_*_in_numpy",
                            "stmt1": "py_struct_*_in_numpy",
                            "value_var": "SHValue_s2"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_scalar_result",
                        "stmt1": "py_default",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "acceptBothStructs",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in"
                            },
                            "declarator": {
                                "name": "s1",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct_as_class"
                            ],
                            "typemap_name": "Cstruct_as_class"
                        },
                        {
                            "attrs": {
                                "intent": "in"
                            },
                            "declarator": {
                                "name": "s2",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct_as_numpy"
                            ],
                            "typemap_name": "Cstruct_as_numpy"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int acceptBothStructs( Cstruct_as_class *s1 +intent(in), Cstruct_as_numpy *s2 +intent(in))",
                "declgen": "int acceptBothStructs(Cstruct_as_class * s1 +intent(in), Cstruct_as_numpy * s2 +intent(in))",
                "fmtdict": {
                    "PY_name_impl": "PY_acceptBothStructs",
                    "function_name": "acceptBothStructs",
                    "underscore_name": "accept_both_structs"
                },
                "options": {}
            }
        ],
        "language": "cxx",
        "scope_file": [
            "struct"
        ]
    }
}