Read yaml vectors.yaml
Skipping std::vector<{cxx_T}>, unable to create C wrapper for function returning ReturnVectorAlloc instance (must return a pointer or reference). Bufferify version will still be created.
C function int vector_sum(const std::vector<int> & arg +intent(in)+rank(1)+size)
C function void vector_iota_out(std::vector<int> & arg +context+intent(out)+rank(1))
C function void vector_iota_out_with_num(std::vector<int> & arg +context+intent(out)+rank(1))
C function void vector_iota_out_with_num2(std::vector<int> & arg +context+intent(out)+rank(1))
C function void vector_iota_out_alloc(std::vector<int> & arg +context+deref(allocatable)+intent(out)+rank(1))
C function void vector_iota_inout_alloc(std::vector<int> & arg +context+deref(allocatable)+intent(inout)+rank(1)+size)
C function void vector_increment(std::vector<int> & arg +context+intent(inout)+rank(1)+size)
C function void vector_iota_out_d(std::vector<double> & arg +context+intent(out)+rank(1))
C function int vector_string_count(const std::vector<std::string> & arg +intent(in)+len+rank(1)+size)
C function void ReturnVectorAlloc(int n +intent(in)+value, std::vector<int> * SHF_rv +context(DSHF_rv)+deref(allocatable)+intent(out)+rank(1)) +rank(1)
Close wrapvectors.h
Close wrapvectors.cpp
Close typesvectors.h
Fortran function int vector_sum(const std::vector<int> & arg +intent(in)+rank(1))
C-interface function int vector_sum(const std::vector<int> & arg +intent(in)+rank(1)+size)
Fortran function void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
C-interface function void vector_iota_out(std::vector<int> & arg +context+intent(out)+rank(1))
Fortran function void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
C-interface function void vector_iota_out_with_num(std::vector<int> & arg +context+intent(out)+rank(1))
Fortran function void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
C-interface function void vector_iota_out_with_num2(std::vector<int> & arg +context+intent(out)+rank(1))
Fortran function void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
C-interface function void vector_iota_out_alloc(std::vector<int> & arg +context+deref(allocatable)+intent(out)+rank(1))
Fortran function void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
C-interface function void vector_iota_inout_alloc(std::vector<int> & arg +context+deref(allocatable)+intent(inout)+rank(1)+size)
Fortran function void vector_increment(std::vector<int> & arg +intent(inout)+rank(1))
C-interface function void vector_increment(std::vector<int> & arg +context+intent(inout)+rank(1)+size)
Fortran function void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
C-interface function void vector_iota_out_d(std::vector<double> & arg +context+intent(out)+rank(1))
Fortran function int vector_string_count(const std::vector<std::string> & arg +intent(in)+rank(1))
C-interface function int vector_string_count(const std::vector<std::string> & arg +intent(in)+len+rank(1)+size)
Fortran function std::vector<int> ReturnVectorAlloc(int n +intent(in)+value) +deref(allocatable)+rank(1)
C-interface function void ReturnVectorAlloc(int n +intent(in)+value, std::vector<int> * SHF_rv +context(DSHF_rv)+deref(allocatable)+intent(out)+rank(1)) +rank(1)
Close wrapfvectors.f
Close utilvectors.cpp
