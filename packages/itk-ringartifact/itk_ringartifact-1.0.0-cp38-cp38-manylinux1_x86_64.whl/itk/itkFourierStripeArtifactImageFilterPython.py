# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFourierStripeArtifactImageFilterPython
else:
    import _itkFourierStripeArtifactImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFourierStripeArtifactImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFourierStripeArtifactImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkFourierStripeArtifactImageFilterID2_New():
    return itkFourierStripeArtifactImageFilterID2.New()

class itkFourierStripeArtifactImageFilterID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkFourierStripeArtifactImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_Clone)
    SetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_GetDirection)
    SetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_GetSigma)
    SetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_SetStartFrequency)
    GetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_GetStartFrequency)
    __swig_destroy__ = _itkFourierStripeArtifactImageFilterPython.delete_itkFourierStripeArtifactImageFilterID2
    cast = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkFourierStripeArtifactImageFilterID2

        Create a new object of the class itkFourierStripeArtifactImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFourierStripeArtifactImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFourierStripeArtifactImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFourierStripeArtifactImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFourierStripeArtifactImageFilterID2 in _itkFourierStripeArtifactImageFilterPython:
_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_swigregister(itkFourierStripeArtifactImageFilterID2)
itkFourierStripeArtifactImageFilterID2___New_orig__ = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2___New_orig__
itkFourierStripeArtifactImageFilterID2_cast = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID2_cast


def itkFourierStripeArtifactImageFilterID3_New():
    return itkFourierStripeArtifactImageFilterID3.New()

class itkFourierStripeArtifactImageFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkFourierStripeArtifactImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_Clone)
    SetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_GetDirection)
    SetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_GetSigma)
    SetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_SetStartFrequency)
    GetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_GetStartFrequency)
    __swig_destroy__ = _itkFourierStripeArtifactImageFilterPython.delete_itkFourierStripeArtifactImageFilterID3
    cast = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkFourierStripeArtifactImageFilterID3

        Create a new object of the class itkFourierStripeArtifactImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFourierStripeArtifactImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFourierStripeArtifactImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFourierStripeArtifactImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFourierStripeArtifactImageFilterID3 in _itkFourierStripeArtifactImageFilterPython:
_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_swigregister(itkFourierStripeArtifactImageFilterID3)
itkFourierStripeArtifactImageFilterID3___New_orig__ = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3___New_orig__
itkFourierStripeArtifactImageFilterID3_cast = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterID3_cast


def itkFourierStripeArtifactImageFilterIF2_New():
    return itkFourierStripeArtifactImageFilterIF2.New()

class itkFourierStripeArtifactImageFilterIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkFourierStripeArtifactImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_Clone)
    SetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_GetDirection)
    SetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_SetSigma)
    GetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_GetSigma)
    SetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_SetStartFrequency)
    GetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_GetStartFrequency)
    __swig_destroy__ = _itkFourierStripeArtifactImageFilterPython.delete_itkFourierStripeArtifactImageFilterIF2
    cast = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkFourierStripeArtifactImageFilterIF2

        Create a new object of the class itkFourierStripeArtifactImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFourierStripeArtifactImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFourierStripeArtifactImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFourierStripeArtifactImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFourierStripeArtifactImageFilterIF2 in _itkFourierStripeArtifactImageFilterPython:
_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_swigregister(itkFourierStripeArtifactImageFilterIF2)
itkFourierStripeArtifactImageFilterIF2___New_orig__ = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2___New_orig__
itkFourierStripeArtifactImageFilterIF2_cast = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF2_cast


def itkFourierStripeArtifactImageFilterIF3_New():
    return itkFourierStripeArtifactImageFilterIF3.New()

class itkFourierStripeArtifactImageFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkFourierStripeArtifactImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_Clone)
    SetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_GetDirection)
    SetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_SetSigma)
    GetSigma = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_GetSigma)
    SetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_SetStartFrequency)
    GetStartFrequency = _swig_new_instance_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_GetStartFrequency)
    __swig_destroy__ = _itkFourierStripeArtifactImageFilterPython.delete_itkFourierStripeArtifactImageFilterIF3
    cast = _swig_new_static_method(_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkFourierStripeArtifactImageFilterIF3

        Create a new object of the class itkFourierStripeArtifactImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFourierStripeArtifactImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFourierStripeArtifactImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFourierStripeArtifactImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFourierStripeArtifactImageFilterIF3 in _itkFourierStripeArtifactImageFilterPython:
_itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_swigregister(itkFourierStripeArtifactImageFilterIF3)
itkFourierStripeArtifactImageFilterIF3___New_orig__ = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3___New_orig__
itkFourierStripeArtifactImageFilterIF3_cast = _itkFourierStripeArtifactImageFilterPython.itkFourierStripeArtifactImageFilterIF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def fourier_stripe_artifact_image_filter(*args, **kwargs):
    """Procedural interface for FourierStripeArtifactImageFilter"""
    import itk
    instance = itk.FourierStripeArtifactImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def fourier_stripe_artifact_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.FourierStripeArtifactImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.FourierStripeArtifactImageFilter.values()[0]
    else:
        filter_object = itk.FourierStripeArtifactImageFilter

    fourier_stripe_artifact_image_filter.__doc__ = filter_object.__doc__
    fourier_stripe_artifact_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    fourier_stripe_artifact_image_filter.__doc__ += "Available Keyword Arguments:\n"
    fourier_stripe_artifact_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



