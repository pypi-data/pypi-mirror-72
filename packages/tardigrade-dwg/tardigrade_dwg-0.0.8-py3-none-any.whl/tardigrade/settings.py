"""
Django settings for dwg project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from configurations import Configuration, values

class BaseConfiguration(Configuration):

    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = values.SecretValue(environ_prefix='TARDIGRADE')

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = values.BooleanValue(False, environ_prefix='TARDIGRADE')

    # 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a space between each.
    # For example: 'DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]'
    ALLOWED_HOSTS = ['*'] #os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',

        'rest_framework',
       # 'rest_framework_mongoengine',
        'tardigrade.mdm',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'tardigrade.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'tardigrade.wsgi.application'


    # Database
    # https://docs.djangoproject.com/en/3.0/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
        # 'default': {
        #     'ENGINE': 'djongo',
        #     'NAME': 'tardigrade',
        #     #'CLIENT': {
        #     'HOST': 'leviathan.cherubits.hu',
        #     'PORT': 27017,
        #     'USER': 'tardigrade',
        #     'PASSWORD': 'qwe123',
        #     #}
        #     'CLIENT': {
        #         'HOST': 'leviathan.cherubits.hu',
        #         'PORT': 27017,
        #         'USER': 'tardigrade',
        #         'PASSWORD': 'qwe123'
        #     }
        # }
    }

    # DATABASES = {
    #     "default": {
    #         "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
    #         "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
    #         "USER": os.environ.get("SQL_USER", "user"),
    #         "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
    #         "HOST": os.environ.get("SQL_HOST", "localhost"),
    #         "PORT": os.environ.get("SQL_PORT", "5432"),
    #     }
    # }


    # Password validation
    # https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]


    # Internationalization
    # https://docs.djangoproject.com/en/3.0/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True


    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.0/howto/static-files/

    STATIC_URL = '/static/'
    STATIC_ROOT = values.PathValue(os.path.join(BASE_DIR, 'static'), check_exists=True, environ_prefix='TARDIGRADE')

class Development(BaseConfiguration):
    """
    Development configuration for local development environment.
    """
    SECRET_KEY = '01234'
    DEBUG = values.BooleanValue(True, environ_prefix='TARDIGRADE')

class Staging(BaseConfiguration):
    """
    Staging configuration for containerized staging environment.
    """
    pass

class Production(BaseConfiguration):
    """
    Production configuration for secure production environment.
    """
    pass