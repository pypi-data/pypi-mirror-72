# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2020.06.25
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.list_message_users_response import ListMessageUsersResponse  # noqa: E501
from agilicus_api.rest import ApiException

class TestListMessageUsersResponse(unittest.TestCase):
    """ListMessageUsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListMessageUsersResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.list_message_users_response.ListMessageUsersResponse()  # noqa: E501
        if include_optional :
            return ListMessageUsersResponse(
                user_messages = [
                    agilicus_api.models.message_user.MessageUser(
                        metadata = {"id":"ac233asaksjfF","created":"2017-07-07T15:49:51.230+00:00","updated":"2020-01-27T12:19:46.430+00:00"}, 
                        spec = agilicus_api.models.message_user_spec.MessageUserSpec(
                            preferred = 'web_push', 
                            endpoints = [
                                agilicus_api.models.message_endpoint.MessageEndpoint(
                                    id = '123', 
                                    created = '2015-07-07T15:49:51.230+02:00', 
                                    updated = '2015-07-07T15:49:51.230+02:00', 
                                    type = 'web_push', 
                                    nickname = '0', 
                                    address = '0', )
                                ], ), )
                    ], 
                limit = 56
            )
        else :
            return ListMessageUsersResponse(
                limit = 56,
        )

    def testListMessageUsersResponse(self):
        """Test ListMessageUsersResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
