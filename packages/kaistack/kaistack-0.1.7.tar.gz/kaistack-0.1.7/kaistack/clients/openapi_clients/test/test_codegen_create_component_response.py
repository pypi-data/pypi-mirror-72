# coding: utf-8

"""
    pipelinecomponentapis.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kaistack.clients.openapi_clients
from kaistack.clients.openapi_clients.models.codegen_create_component_response import CodegenCreateComponentResponse  # noqa: E501
from kaistack.clients.openapi_clients.rest import ApiException

class TestCodegenCreateComponentResponse(unittest.TestCase):
    """CodegenCreateComponentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CodegenCreateComponentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kaistack.clients.openapi_clients.models.codegen_create_component_response.CodegenCreateComponentResponse()  # noqa: E501
        if include_optional :
            return CodegenCreateComponentResponse(
                component = kaistack.clients.openapi_clients.models.codegen_pipeline_component.codegenPipelineComponent(
                    id = '0', 
                    name = '0', 
                    description = '0', 
                    image = '0', 
                    creator = '0', 
                    version = '0', 
                    help_link = '0', 
                    spec = '0', ), 
                error = '0'
            )
        else :
            return CodegenCreateComponentResponse(
        )

    def testCodegenCreateComponentResponse(self):
        """Test CodegenCreateComponentResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
