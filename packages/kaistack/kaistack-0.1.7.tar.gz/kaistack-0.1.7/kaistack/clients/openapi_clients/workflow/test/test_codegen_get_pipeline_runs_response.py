# coding: utf-8

"""
    workflowapis.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kaistack.clients.openapi_clients.workflow
from kaistack.clients.openapi_clients.workflow.models.codegen_get_pipeline_runs_response import CodegenGetPipelineRunsResponse  # noqa: E501
from kaistack.clients.openapi_clients.workflow.rest import ApiException

class TestCodegenGetPipelineRunsResponse(unittest.TestCase):
    """CodegenGetPipelineRunsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CodegenGetPipelineRunsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kaistack.clients.openapi_clients.workflow.models.codegen_get_pipeline_runs_response.CodegenGetPipelineRunsResponse()  # noqa: E501
        if include_optional :
            return CodegenGetPipelineRunsResponse(
                runs = [
                    kaistack.clients.openapi_clients.workflow.models.codegen_run.codegenRun(
                        run_id = '0', 
                        name = '0', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        node = '0', 
                        pipeline_id = '0', 
                        properties = {
                            'key' : '0'
                            }, 
                        status = '0', )
                    ], 
                err = '0'
            )
        else :
            return CodegenGetPipelineRunsResponse(
        )

    def testCodegenGetPipelineRunsResponse(self):
        """Test CodegenGetPipelineRunsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
