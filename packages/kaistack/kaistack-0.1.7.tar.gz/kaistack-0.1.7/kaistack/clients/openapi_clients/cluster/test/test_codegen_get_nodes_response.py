# coding: utf-8

"""
    clusterapis.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kaistack.clients.openapi_clients.cluster
from kaistack.clients.openapi_clients.cluster.models.codegen_get_nodes_response import CodegenGetNodesResponse  # noqa: E501
from kaistack.clients.openapi_clients.cluster.rest import ApiException

class TestCodegenGetNodesResponse(unittest.TestCase):
    """CodegenGetNodesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CodegenGetNodesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kaistack.clients.openapi_clients.cluster.models.codegen_get_nodes_response.CodegenGetNodesResponse()  # noqa: E501
        if include_optional :
            return CodegenGetNodesResponse(
                nodes = [
                    kaistack.clients.openapi_clients.cluster.models.codegen_node.codegenNode(
                        node_name = '0', 
                        status = '0', 
                        resources = {
                            'key' : '0'
                            }, 
                        labels = {
                            'key' : '0'
                            }, 
                        annotations = {
                            'key' : '0'
                            }, )
                    ]
            )
        else :
            return CodegenGetNodesResponse(
        )

    def testCodegenGetNodesResponse(self):
        """Test CodegenGetNodesResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
