# coding: utf-8

"""
    pipelinecomponentapis.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from kaistack.clients.openapi_clients.configuration import Configuration


class CodegenPipelineComponent(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'name': 'str',
        'description': 'str',
        'image': 'str',
        'creator': 'str',
        'version': 'str',
        'help_link': 'str',
        'spec': 'str',
        'sha256': 'str',
        'created_time': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'description': 'description',
        'image': 'image',
        'creator': 'creator',
        'version': 'version',
        'help_link': 'helpLink',
        'spec': 'spec',
        'sha256': 'sha256',
        'created_time': 'createdTime'
    }

    def __init__(self, id=None, name=None, description=None, image=None, creator=None, version=None, help_link=None, spec=None, sha256=None, created_time=None, local_vars_configuration=None):  # noqa: E501
        """CodegenPipelineComponent - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._name = None
        self._description = None
        self._image = None
        self._creator = None
        self._version = None
        self._help_link = None
        self._spec = None
        self._sha256 = None
        self._created_time = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if image is not None:
            self.image = image
        if creator is not None:
            self.creator = creator
        if version is not None:
            self.version = version
        if help_link is not None:
            self.help_link = help_link
        if spec is not None:
            self.spec = spec
        if sha256 is not None:
            self.sha256 = sha256
        if created_time is not None:
            self.created_time = created_time

    @property
    def id(self):
        """Gets the id of this CodegenPipelineComponent.  # noqa: E501


        :return: The id of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodegenPipelineComponent.


        :param id: The id of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CodegenPipelineComponent.  # noqa: E501


        :return: The name of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CodegenPipelineComponent.


        :param name: The name of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this CodegenPipelineComponent.  # noqa: E501


        :return: The description of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CodegenPipelineComponent.


        :param description: The description of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def image(self):
        """Gets the image of this CodegenPipelineComponent.  # noqa: E501


        :return: The image of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this CodegenPipelineComponent.


        :param image: The image of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._image = image

    @property
    def creator(self):
        """Gets the creator of this CodegenPipelineComponent.  # noqa: E501


        :return: The creator of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this CodegenPipelineComponent.


        :param creator: The creator of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._creator = creator

    @property
    def version(self):
        """Gets the version of this CodegenPipelineComponent.  # noqa: E501


        :return: The version of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CodegenPipelineComponent.


        :param version: The version of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def help_link(self):
        """Gets the help_link of this CodegenPipelineComponent.  # noqa: E501


        :return: The help_link of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._help_link

    @help_link.setter
    def help_link(self, help_link):
        """Sets the help_link of this CodegenPipelineComponent.


        :param help_link: The help_link of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._help_link = help_link

    @property
    def spec(self):
        """Gets the spec of this CodegenPipelineComponent.  # noqa: E501


        :return: The spec of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this CodegenPipelineComponent.


        :param spec: The spec of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._spec = spec

    @property
    def sha256(self):
        """Gets the sha256 of this CodegenPipelineComponent.  # noqa: E501


        :return: The sha256 of this CodegenPipelineComponent.  # noqa: E501
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this CodegenPipelineComponent.


        :param sha256: The sha256 of this CodegenPipelineComponent.  # noqa: E501
        :type: str
        """

        self._sha256 = sha256

    @property
    def created_time(self):
        """Gets the created_time of this CodegenPipelineComponent.  # noqa: E501


        :return: The created_time of this CodegenPipelineComponent.  # noqa: E501
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this CodegenPipelineComponent.


        :param created_time: The created_time of this CodegenPipelineComponent.  # noqa: E501
        :type: datetime
        """

        self._created_time = created_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodegenPipelineComponent):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CodegenPipelineComponent):
            return True

        return self.to_dict() != other.to_dict()
