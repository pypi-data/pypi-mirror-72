# Copyright (c) IMToolkit Development Team
# This toolkit is released under the MIT License, see LICENSE.txt

import numpy as np
from .Util import CayleyTransform, CayleyTransformInv, getDFTMatrixNumpy, getRandomHermitianMatrix, asnumpy, ascupy
from .ChaosUtil import getLogisticMapSequenceOriginal, getUniformLogisticMapSequenceOriginal
from .Basis import Basis

class ChaosBasis(object):
    """This class generates a time-varying basis set for nonsquare differential encoding and decoding, which is proposed in [1]. The logistic map is converted into a near-Gaussian random variable based on [2].

    - [1] N. Ishikawa and J. Hamamreh, "?????," ????.
    - [2] J. J. Collins, M. Fanciulli, R. G. Hohlfeld, D. C. Finch, G. v. H. Sandri, and E. S. Shtatland, "A random number generator based on the logit transform of the logistic variable," Comput. Phys., vol. 6, no. 6, pp. 630â€“632, 1992.
    """

    def __init__(self, type, M, T, W, x0, Nskip = 0, **kwargs):
        """
        Args:
            type (str): the type of chaos basis.
            M (int): the number of transmit antennas.
            T (int): the number of reduced time slots.
            W (int): the length of transmission block.
            x0 (float): the initial condition of the logistic map.
            Nskip (int): the first Nskip variables are discarded.
        """
        self.M = M
        self.T = T
        self.W = W
        self.x0 = x0
        if x0 < 0 or x0 > 1:
            self.x0 = 0.07874446950884428 # hist var = 0.006675766564429977
        self.Nskip = Nskip
        self.x = getLogisticMapSequenceOriginal(x0, W + Nskip)[Nskip:]  # W-length logistic map sequence
        self.xu = getUniformLogisticMapSequenceOriginal(x0, W + Nskip)[Nskip:]
        self.bases = np.zeros((W, int(M / T), M, T), dtype=np.complex)

        if type[0].lower() == 'd':
            # Chaos DFT Basis
            self.initChaosDFTBasis()
        elif type[0].lower() == 'h':
            # Chaos Hermitian Basis
            random = kwargs["random"] if "random" in kwargs else False
            initA = kwargs["initA"] if "initA" in kwargs else None
            self.initChaosHermitianBasis(random, initA)
        elif type[0].lower() == 'g':
            # Chaos GSP Basis
            E1 = kwargs["E1"] if "E1" in kwargs else None
            #E1 = np.exp(2.0j * np.pi / 2.0) * np.ones((M, 1)) / np.sqrt(M)
            self.initChaosGSPBasis(type, E1)
        elif type[0].lower() == 'c':
            self.initChaosGRBasis(type)

    def initChaosDFTBasis(self):
        exps = np.exp(2.j * np.pi * self.xu)
        bs = np.kron(exps, getDFTMatrixNumpy(self.M))
        self.bases = np.array(np.hsplit(bs, self.W)).reshape(self.W, int(self.M / self.T), self.M, self.T)

    def initChaosGRBasis(self, type):
        I = np.eye(self.M, dtype=np.complex)
        #P = np.zeros((self.M, self.M), dtype=np.complex)
        #for m in range(self.M):
        #    P[(m+1)%self.M, m] = 1

        #U = np.matmul(getDFTMatrixNumpy(self.M), P)
        #U = np.exp(2.j * np.pi / (2.0 * self.M)) * getDFTMatrixNumpy(self.M)

        #E1 = np.exp(2.j * np.pi / (2.0 * self.M)) * np.ones((self.M, 1)) / np.sqrt(self.M)
        theta = 0.25
        E1 = np.exp(2.j * np.pi * theta) * np.ones((self.M, 1)) / np.sqrt(self.M)

        U = Basis.constructUnitaryFromE1(E1)
        #print(np.round(U, decimals=4))
        #print("---------------------------------------------------------------")

        #self.A = CayleyTransformInv(U)
        #print(np.round(self.A))

        if "cg" in type:
            # chaos Gaussian basis
            y = np.log(self.x / (1.0 - self.x)) / np.sqrt(2.0 * np.pi)
            print("ChaosBasis.py: y = logit / sqrt(2pi)")
        elif "cr" in type:
            # chaos Rayleigh basis
            #y = np.sqrt(-2.0 * np.log(self.xu))
            #print("ChaosBasis.py: y = Rayleigh")
            y = self.xu  # uniform distribution
            indsr = np.where(y >= 0.5)[0]
            indsl = np.where(y < 0.5)[0]
            y[indsr] = np.sqrt(-2.0 * np.log(2.0 * (1.0 - y[indsr])))
            y[indsl] = -np.sqrt(-2.0 * np.log(2.0 * y[indsl]))
            print("ChaosBasis.py: y = bimodal Rayleigh")
        elif "cu" in type:
            # chaos uniform basis
            y = 0.5 + self.xu
            print("ChaosBasis.py: y = [0.5, 1.5]")
            #y = self.xu
            #y[y >= 0.5] += 0.25
            #y[y < 0.5] -= 1.25
            #print("ChaosBasis.py: y = [-1.25, -0.75], [0.75, 1.25]")

        for w in range(self.W):
            #E = CayleyTransform(y[w] * self.A)
            E = np.linalg.inv((1+y[w]) * I + (1-y[w]) * U) @ ((1-y[w]) * I + (1+y[w]) * U)
            self.bases[w, :, :, :] = self.convertUnitaryToBases(E)

    def initChaosGSPBasis(self, type, E1):
        I = np.eye(self.M, dtype=np.complex)
        U = Basis.constructUnitaryFromE1(E1)
        print(U)
        #self.A = CayleyTransformInv(U)
        #print(self.A)

        if "gb" in type:
            y = np.log(self.x / (1.0 - self.x))  # converted into a near-Gaussian random variables
            s = float(type.replace("gb", ""))
            y /= np.sqrt(s)
            y[y >= 0] += 1
            y[y < 0] -= 1
            print("ChaosBasis.py: y = logit / sqrt(%f); y[y >= 0] += 1; y[y < 0] -= 1" % s)
        elif "gg" in type:
            s = float(type.replace("gg", ""))
            y = np.log(self.x / (1.0 - self.x)) / np.sqrt(s)
            print("ChaosBasis.py: y = logit / sqrt(%f)" % s)
        elif "gp" in type:
            y = np.log(self.x / (1.0 - self.x))  # converted into a near-Gaussian random variables
            s = float(type.replace("gp", ""))
            y = 1.0 + y / np.sqrt(s)
            print("ChaosBasis.py: y = 1.0 + logit / sqrt(%f)" % s)
        elif "gu" in type:
            y = 0.5 + self.xu
            print("ChaosBasis.py: y = [0.5, 1.5]")
            #y = self.x
            #y[y >= 0.5] += 0.25
            #y[y < 0.5] -= 1.25
            #print("ChaosBasis.py: y = [-1.25, -0.75], [0.75, 1.25]")
        elif "gr1" in type:
            y = np.sqrt(-2.0 * np.log(self.x))
            print("ChaosBasis.py: y = unimodal Rayleigh")
        elif "gr2" in type:
            y = self.xu # uniform distribution
            indsr = np.where(y >= 0.5)[0]
            indsl = np.where(y < 0.5)[0]
            y[indsr] = np.sqrt(-2.0 * np.log(2.0 * (1.0 - y[indsr])))
            y[indsl] = -np.sqrt(-2.0 * np.log(2.0 * y[indsl]))
            print("ChaosBasis.py: y = bimodal Rayleigh")

        #print("ChaosBasis.py: y = logit / sqrt(100)")
        #y /= np.sqrt(100)
        #y[y >= 0] += 1
        #y[y < 0] -= 1
        # 2
        #print("ChaosBasis.py: y = 1 + logit / sqrt(100)")
        #y = y / np.sqrt(100) + 1.0
        #print("ChaosBasis.py: y = 1 + logit/sqrt(10)")
        #y = y / np.sqrt(10) + 1.0
        #print("ChaosBasis.py: y = [0.5,1.5]")
        #y = 0.5 + self.x
        #
        #y = self.x
        #y[y >= 0.5] += 0.25
        #y[y < 0.5] -= 1.25
        for w in range(self.W):
            #E = CayleyTransform(y[w] * self.A)
            E = np.linalg.inv((1 + y[w]) * I + (1 - y[w]) * U) @ ((1 - y[w]) * I + (1 + y[w]) * U)
            #print(E)
            #print(np.linalg.norm(np.matmul(E, E.T.conj()) - np.eye(self.M)))
            self.bases[w, :, :, :] = self.convertUnitaryToBases(E)

    def initChaosHermitianBasis(self, random, initA):
        # prepare a fixed random Hermitian matrix
        if random:
            self.A = asnumpy(getRandomHermitianMatrix(self.M))
            # print("A random Hermitian matrix is generated.")
            # print("A = " + str(self.A))
        elif 'None' not in str(type(initA)):
            self.A = initA
        else:
            if self.M == 2:
                # visual based
                # self.A = np.array([[-0.70399283 + 0.j, -0.08557269 + 0.10130662j], [-0.08557269 - 0.10130662j, 0.68499829 + 0.j]])

                # Minimum of MEDs = 0.16776827036815617
                # self.A = np.array([[-2.35764373 + 0.j, 1.42053292 - 1.14133999j], [1.42053292 + 1.14133999j, 1.16303756 + 0.j]])

                # DUC, M=2, L=16, Mean of MEDs = 0.5664201707530412, Minimum of MEDs > 0, y = logit
                # self.A = np.array([[-0.48353751 + 0.j, 0.01933315 + 1.13095611j], [0.01933315 - 1.13095611j, - 3.76645997 + 0.j]])
                # DUC, M=2, L=16, Mean of MEDs = 0.5844957180325929, y = logit
                # self.A = np.array([[-30.06624886 + 0.j, - 1.02719676 - 9.74751481j], [-1.02719676 + 9.74751481j, - 3.22356122 + 0.j]])
                # DUC, M=2, L=16, Mean of MEDs = 0.5857864376269035, y = 0.5 + x
                self.A = np.array([[-2.69580554 + 0.j, -0.33669241 + 0.54832796j], [-0.33669241 - 0.54832796j, -0.67832545 + 0.j]])

                # DUC, M=2, L=256, Mean of MEDs = 0.03819899216833257, Minimum of MEDs > 0
                # self.A = np.array([[1.31452993 + 0.j, - 0.15717351 + 0.29047624j], [-0.15717351 - 0.29047624j, - 0.03529202 + 0.j]])
            elif self.M == 4:
                # # DUC, M=4, L=4, Mean of MEDs = 2.0
                # self.A = np.array([[-1.6767525 +0.j, -1.43281702+0.12455722j,  0.43528435-0.99978832j, 0.60563977+0.79001848j],
                #  [-1.43281702-0.12455722j, 1.57939217+0.j, -0.14382729-0.30912406j, -0.58291449-0.68128306j],
                #  [0.43528435+0.99978832j, -0.14382729+0.30912406j, -0.51099803+0.j, -0.14429482+0.28428189j],
                #  [0.60563977-0.79001848j, -0.58291449+0.68128306j, -0.14429482-0.28428189j, 0.08437894+0.j]])

                # # DUC, M=4, L=64, Mean of MEDs = 0.6691422732538577, may be improved more
                # self.A = np.array([[-5.38457174 + 0.j, -1.32021547 - 1.41857389j, -1.50098508 + 3.38172446j, -1.94800958 + 4.06347048j],
                #                    [-1.32021547 + 1.41857389j, 2.95383589 + 0.j, -0.59533297 + 4.1465249j, 2.05047534 + 1.39383066j],
                #                    [-1.50098508 - 3.38172446j, -0.59533297 - 4.1465249j, -7.24579112 + 0.j, 2.23600331 - 0.42266965j],
                #                    [-1.94800958 - 4.06347048j, 2.05047534 - 1.39383066j, 2.23600331 + 0.42266965j, -8.09198152 + 0.j]])
                # DUC, M=4, L=256, Mean of MEDs = 0.5083353263965924, may be improve more
                self.A = np.array([[1.66308227+0.j, 0.4018552 +0.59386878j, 0.24742134+0.49232791j, -0.8061019 +0.84267469j],
                                   [0.4018552-0.59386878j, 0.59849173+0.j, 0.99190854+0.20565645j, -0.24867569-0.18074346j],
                                   [0.24742134-0.49232791j, 0.99190854-0.20565645j, 0.40110048+0.j, -1.0974096 +0.29047862j],
                                   [-0.8061019-0.84267469j, -0.24867569+0.18074346j, -1.0974096-0.29047862j, 0.73860485+0.j]])
            elif self.M == 8:
                # DUC, M=8, L=256, Mean of MEDs = 0.41507262488676755, y = 0.5 + self.x
                self.A = np.array([[2.07902945+0.j        , -0.53068732-0.1599162j , -0.89313191-0.54075074j, -0.3673276 -1.87674756j, -0.22994981+0.15536471j, 0.55894196+2.47760022j , -1.85515361+0.10516709j, 1.41343625+0.84749303j],
[-0.53068732+0.1599162j , -2.43832683+0.j        , 0.56518272-0.41827222j , -1.02225649-2.94223795j, 2.15076743+1.85260238j , 0.24422309-0.69251369j , -0.33543865-4.59096749j, -3.80751521+0.39568995j],
[-0.89313191+0.54075074j, 0.56518272+0.41827222j , -0.67624045+0.j        , -2.36630802-3.19361613j, -1.52587102+0.22733198j, -0.34646932+1.40261724j, 2.4398296 -1.44864521j , -2.15840649+0.2142272j ],
[-0.3673276+1.87674756j , -1.02225649+2.94223795j, -2.36630802+3.19361613j, -0.4779382+0.j         , 2.40563157+2.37590521j , 2.7347352 -2.30861442j , 1.6693872+0.3602891j   , 0.93893756+0.82800689j],
[-0.22994981-0.15536471j, 2.15076743-1.85260238j , -1.52587102-0.22733198j, 2.40563157-2.37590521j , 0.63815568+0.j         , 3.59061563-0.45056252j , -1.50402768-0.98599654j, -0.80906934+0.9061844j ],
[0.55894196-2.47760022j , 0.24422309+0.69251369j , -0.34646932-1.40261724j, 2.7347352+2.30861442j  , 3.59061563+0.45056252j , 6.61366782+0.j         , 0.13318667-0.30817013j , -1.30377863-0.53599701j],
[-1.85515361-0.10516709j, -0.33543865+4.59096749j, 2.4398296+1.44864521j  , 1.6693872 -0.3602891j  , -1.50402768+0.98599654j, 0.13318667+0.30817013j , -2.17468796+0.j        , -1.63856021+1.67874574j],
[1.41343625-0.84749303j , -3.80751521-0.39568995j, -2.15840649-0.2142272j , 0.93893756-0.82800689j , -0.80906934-0.9061844j , -1.30377863+0.53599701j, -1.63856021-1.67874574j, 0.93523125+0.j        ]])
#                 # DUC, M=8, L=256, Mean of MEDs = 0.3325482581923371, y = y / np.sqrt(10) + 1.0, bad performance
#                 self.A = np.array([[-0.38392284+0.j, 0.52473954-1.23369j, 0.92014132+0.03807321j, 2.50768871-1.41557082j, -1.11684395-2.26760343j, -0.16507626-1.54162214j, 1.67614262+2.4010766j, 1.03445256-0.16229789j],
# [0.52473954+1.23369j, -2.16361935+0.j, -2.97376401-0.66049001j, 0.83897702+0.23592787j, -0.65917418-0.12073355j, -1.93945908-0.66676808j, -0.97988834+1.21072958j, 1.39624004-1.34158174j],
# [0.92014132-0.03807321j, -2.97376401+0.66049001j, -0.62159401+0.j, 1.0125636-0.62171166j, 0.60019761-2.00870378j, -2.29221654+0.44654314j, 1.2246585-0.79303293j, 0.36496879-2.57962713j],
# [2.50768871+1.41557082j, 0.83897702-0.23592787j, 1.0125636+0.62171166j, 1.19062249+0.j, 0.69315599-1.13182802j, -0.37520159-0.94695117j, 0.40440299-1.69083508j, 2.63628162-0.80707006j],
# [-1.11684395+2.26760343j, -0.65917418+0.12073355j, 0.60019761+2.00870378j, 0.69315599+1.13182802j, 1.0622644+0.j, 1.89962071+1.00328534j, 1.35558518-1.92705505j, 1.81235845+4.16623303j],
# [-0.16507626+1.54162214j, -1.93945908+0.66676808j, -2.29221654-0.44654314j, -0.37520159+0.94695117j, 1.89962071-1.00328534j, -1.32154792+0.j, -0.86373528-1.70176162j, 1.3254211+0.32155129j],
# [1.67614262-2.4010766j, -0.97988834-1.21072958j, 1.2246585+0.79303293j, 0.40440299+1.69083508j, 1.35558518+1.92705505j, -0.86373528+1.70176162j, 0.69656416+0.j, -0.96992534-1.33680417j],
# [1.03445256+0.16229789j, 1.39624004+1.34158174j, 0.36496879+2.57962713j, 2.63628162+0.80707006j, 1.81235845-4.16623303j, 1.3254211-0.32155129j, -0.96992534+1.33680417j, 1.04351696+0.j]])
#                 # ADSM, M=8, L=32, Mean of MEDs = 0.038429439193538806, y=logit, not good performance
#                 self.A = np.array([[1.18735214+0.j, -1.08078996-0.40226803j, -0.14558545-0.60768167j, 0.27022225-0.67927234j, 1.06092192-0.14161613j, -0.1341956+0.70918695j, -0.23583052+1.19746209j, -1.46204281+0.11594564j],
#                                    [-1.08078996+0.40226803j, -1.90139481+0.j, -0.40133816-0.28970537j, 0.21009029-0.08780412j, -1.20494266+0.47736531j, 0.52862892+0.47676432j, -0.37197413+0.79774405j, -0.47734349-0.11827385j],
#                                    [-0.14558545+0.60768167j, -0.40133816+0.28970537j, 0.34758639+0.j, -0.55241542-0.44578212j, -0.59649845-0.16071398j, -0.40120475+0.40247323j, -0.05866383-1.15908257j, 1.00433123+0.17873813j],
#                                    [0.27022225+0.67927234j, 0.21009029+0.08780412j, -0.55241542+0.44578212j, -0.5778333+0.j, -0.6190845-1.02169174j, -0.50450115+0.71620298j, 0.36693585+0.49402353j, 1.00493134+0.54898282j],
#                                    [1.06092192+0.14161613j, -1.20494266-0.47736531j, -0.59649845+0.16071398j, -0.6190845+1.02169174j, 1.00925205+0.j, 0.93073696+0.5164986j, -0.01011784-1.75988587j, -0.33300328+0.98806986j],
#                                    [-0.1341956-0.70918695j, 0.52862892-0.47676432j, -0.40120475-0.40247323j, -0.50450115-0.71620298j, 0.93073696-0.5164986j, -0.58481136+0.j, 0.26814191+0.11330636j, 0.01917293-0.97397286j],
#                                    [-0.23583052-1.19746209j, -0.37197413-0.79774405j, -0.05866383+1.15908257j, 0.36693585-0.49402353j, -0.01011784+1.75988587j, 0.26814191-0.11330636j, 1.51991126+0.j, -0.89890436-0.44245139j],
#                                    [-1.46204281-0.11594564j, -0.47734349+0.11827385j, 1.00433123-0.17873813j, 1.00493134-0.54898282j, -0.33300328-0.98806986j, 0.01917293+0.97397286j, -0.89890436+0.44245139j, -0.21654459+0.j]])
            elif self.M == 16:
                # # DUC, L=16, Mean of MEDs = 1.8421934296848488
                # self.A = np.array([[0.9927977744 + 0.j, -2.185793117 + 1.0631742597j,
                #       -1.4558947845 + 0.4781759513j, -0.0966945327 + 0.9793935392j,
                #       1.2194267403 - 2.1008312224j, -0.8028457045 + 0.4907942357j,
                #       -0.4282512836 + 0.5522977225j, 0.6456773562 - 1.7489731875j,
                #       0.5123627161 - 0.0188951672j, -1.8329542581 - 0.2368327486j,
                #       -0.4562060933 - 1.0055336116j, -1.1414486282 + 0.3025306779j,
                #       1.0880478242 + 0.3653403079j, -0.8602421749 + 0.7343689288j,
                #       -1.1156883248 + 0.1131907651j, -1.1502313369 - 1.1576676938j],
                #      [-2.185793117 - 1.0631742597j, -1.7121015847 + 0.j,
                #       -0.8827521482 - 0.8630770135j, -0.8573658525 - 0.830515255j,
                #       -1.5322081278 + 1.2212530098j, 1.0590920633 - 1.0781717206j,
                #       1.0189951207 + 0.4143907253j, 0.1143391243 - 0.0211211631j,
                #       -0.8852258508 + 0.3296010452j, -0.8571846976 - 0.9074792854j,
                #       0.965755681 + 0.166487523j, -2.1077176641 - 0.4984912088j,
                #       -1.0343520083 + 0.7914557184j, -0.3782293097 - 0.0995214334j,
                #       1.0643591511 + 1.5223579051j, 1.1568242107 - 0.7495839085j],
                #      [-1.4558947845 - 0.4781759513j, -0.8827521482 + 0.8630770135j,
                #       -0.9933626425 + 0.j, -0.9961430818 + 0.3355070227j,
                #       1.1945704302 + 0.3055421012j, 0.1859581889 - 0.6780932966j,
                #       0.0689968077 - 0.7374563321j, -0.7201931921 + 0.7533768731j,
                #       -0.2060261053 - 1.9783140966j, -0.691828556 + 0.00956991j,
                #       0.3956732294 - 0.4074605362j, 1.9329875763 + 1.5101104607j,
                #       -1.0977352855 - 0.2643068579j, 1.1162109907 - 1.1577367544j,
                #       0.8115821573 + 0.3182621564j, -0.866977249 + 0.59644799j],
                #      [-0.0966945327 - 0.9793935392j, -0.8573658525 + 0.830515255j,
                #       -0.9961430818 - 0.3355070227j, -2.4348433602 + 0.j,
                #       0.1060548037 + 0.5366288791j, 0.0690936914 + 2.8117641206j,
                #       1.0246208136 - 1.4214713692j, 0.7573985947 + 0.6724943184j,
                #       -0.0079565491 - 0.7529779575j, -1.9169215809 - 0.1316055811j,
                #       -0.2872020959 - 0.7613024634j, -1.0004200232 - 0.3013942568j,
                #       0.4225002494 - 0.2994596535j, 2.0818939229 - 0.2267628095j,
                #       -0.043324258 + 0.3898346731j, -0.0492779313 + 0.1433810468j],
                #      [1.2194267403 + 2.1008312224j, -1.5322081278 - 1.2212530098j,
                #       1.1945704302 - 0.3055421012j, 0.1060548037 - 0.5366288791j,
                #       -0.3848191423 + 0.j, 1.4148636446 - 0.4813223817j,
                #       0.806027569 + 0.5872550469j, 0.7934837286 + 0.0649000164j,
                #       -1.6161082736 + 0.397697193j, -0.9072614967 + 0.3306972982j,
                #       -1.6187388488 - 0.187226092j, -0.6110664086 + 1.6587523926j,
                #       -2.0658480127 + 0.0186891444j, 1.9151821896 + 0.6324822795j,
                #       -1.3238907673 - 0.1230225801j, 2.121389176 - 1.7640477799j],
                #      [-0.8028457045 - 0.4907942357j, 1.0590920633 + 1.0781717206j,
                #       0.1859581889 + 0.6780932966j, 0.0690936914 - 2.8117641206j,
                #       1.4148636446 + 0.4813223817j, -1.3175804288 + 0.j,
                #       0.1711507094 + 1.5986036657j, -1.3858404452 + 0.4560730377j,
                #       0.4432574137 + 0.4314751288j, -0.3589777324 - 0.320409621j,
                #       1.0253176246 - 0.2601047475j, 1.021038168 - 0.6809856173j,
                #       1.1447759883 - 0.2589986713j, -1.7172215137 - 0.8723270441j,
                #       0.3086160723 + 0.730661202j, -0.0209634383 - 1.8643983216j],
                #      [-0.4282512836 - 0.5522977225j, 1.0189951207 - 0.4143907253j,
                #       0.0689968077 + 0.7374563321j, 1.0246208136 + 1.4214713692j,
                #       0.806027569 - 0.5872550469j, 0.1711507094 - 1.5986036657j,
                #       -2.6224246158 + 0.j, 0.4075965439 + 0.1278900762j,
                #       -0.1969118816 + 0.7084974263j, 0.6709048633 - 1.1865473166j,
                #       -0.473714773 - 0.6077805185j, 0.760520375 + 0.153601323j,
                #       -0.7632689859 - 1.7095361147j, -0.6828144042 - 0.1451622672j,
                #       0.3627515927 - 0.4898734889j, -0.437393456 + 0.5288677412j],
                #      [0.6456773562 + 1.7489731875j, 0.1143391243 + 0.0211211631j,
                #       -0.7201931921 - 0.7533768731j, 0.7573985947 - 0.6724943184j,
                #       0.7934837286 - 0.0649000164j, -1.3858404452 - 0.4560730377j,
                #       0.4075965439 - 0.1278900762j, 0.6504908843 + 0.j,
                #       -0.4501024644 + 0.6704019558j, 0.5279607985 + 1.3409212435j,
                #       -0.4447502784 - 0.5459018268j, 0.3971431512 - 1.8762916238j,
                #       1.1583731972 + 1.4658689869j, -0.0640109193 + 1.7057903115j,
                #       -0.1891836043 + 0.3903715664j, -0.803055345 - 1.0801212644j],
                #      [0.5123627161 + 0.0188951672j, -0.8852258508 - 0.3296010452j,
                #       -0.2060261053 + 1.9783140966j, -0.0079565491 + 0.7529779575j,
                #       -1.6161082736 - 0.397697193j, 0.4432574137 - 0.4314751288j,
                #       -0.1969118816 - 0.7084974263j, -0.4501024644 - 0.6704019558j,
                #       0.4420099311 + 0.j, 2.2823424547 + 0.4468529729j,
                #       -1.491424131 - 0.2509534535j, -0.467488413 - 0.7085388248j,
                #       -0.7729100958 + 0.2912657986j, 1.1618374653 + 0.095400348j,
                #       -0.3688108579 + 0.0557519554j, -0.6489108558 - 1.3689816122j],
                #      [-1.8329542581 + 0.2368327486j, -0.8571846976 + 0.9074792854j,
                #       -0.691828556 - 0.00956991j, -1.9169215809 + 0.1316055811j,
                #       -0.9072614967 - 0.3306972982j, -0.3589777324 + 0.320409621j,
                #       0.6709048633 + 1.1865473166j, 0.5279607985 - 1.3409212435j,
                #       2.2823424547 - 0.4468529729j, -0.5374639437 + 0.j,
                #       -1.0119722436 - 2.1961854986j, -1.4556714784 + 0.0371302033j,
                #       -2.0436385825 + 0.0426433353j, -0.6005087997 - 0.6319630658j,
                #       -1.3250632514 + 0.0832741741j, 1.2767907429 - 1.2213114837j],
                #      [-0.4562060933 + 1.0055336116j, 0.965755681 - 0.166487523j,
                #       0.3956732294 + 0.4074605362j, -0.2872020959 + 0.7613024634j,
                #       -1.6187388488 + 0.187226092j, 1.0253176246 + 0.2601047475j,
                #       -0.473714773 + 0.6077805185j, -0.4447502784 + 0.5459018268j,
                #       -1.491424131 + 0.2509534535j, -1.0119722436 + 2.1961854986j,
                #       0.0387498563 + 0.j, -0.3360406243 + 1.1124565605j,
                #       0.526775124 - 0.6948399984j, -2.3226116517 + 0.7261761092j,
                #       -0.3003014384 - 0.1236784676j, -0.518264777 - 0.1773598481j],
                #      [-1.1414486282 - 0.3025306779j, -2.1077176641 + 0.4984912088j,
                #       1.9329875763 - 1.5101104607j, -1.0004200232 + 0.3013942568j,
                #       -0.6110664086 - 1.6587523926j, 1.021038168 + 0.6809856173j,
                #       0.760520375 - 0.153601323j, 0.3971431512 + 1.8762916238j,
                #       -0.467488413 + 0.7085388248j, -1.4556714784 - 0.0371302033j,
                #       -0.3360406243 - 1.1124565605j, 0.1922831436 + 0.j,
                #       1.187725282 - 0.2846457059j, 0.5519122603 + 0.8020273506j,
                #       0.6607090825 + 0.1900648556j, 0.0259456946 - 1.0684095462j],
                #      [1.0880478242 - 0.3653403079j, -1.0343520083 - 0.7914557184j,
                #       -1.0977352855 + 0.2643068579j, 0.4225002494 + 0.2994596535j,
                #       -2.0658480127 - 0.0186891444j, 1.1447759883 + 0.2589986713j,
                #       -0.7632689859 + 1.7095361147j, 1.1583731972 - 1.4658689869j,
                #       -0.7729100958 - 0.2912657986j, -2.0436385825 - 0.0426433353j,
                #       0.526775124 + 0.6948399984j, 1.187725282 + 0.2846457059j,
                #       -0.9493477547 + 0.j, 0.4473152376 - 0.0320061694j,
                #       0.8369849547 - 0.8979818017j, 0.1038280074 + 0.0431863128j],
                #      [-0.8602421749 - 0.7343689288j, -0.3782293097 + 0.0995214334j,
                #       1.1162109907 + 1.1577367544j, 2.0818939229 + 0.2267628095j,
                #       1.9151821896 - 0.6324822795j, -1.7172215137 + 0.8723270441j,
                #       -0.6828144042 + 0.1451622672j, -0.0640109193 - 1.7057903115j,
                #       1.1618374653 - 0.095400348j, -0.6005087997 + 0.6319630658j,
                #       -2.3226116517 - 0.7261761092j, 0.5519122603 - 0.8020273506j,
                #       0.4473152376 + 0.0320061694j, -1.7974705606 + 0.j,
                #       0.8548208775 + 1.0016529781j, 0.009619731 - 0.0299800535j],
                #      [-1.1156883248 - 0.1131907651j, 1.0643591511 - 1.5223579051j,
                #       0.8115821573 - 0.3182621564j, -0.043324258 - 0.3898346731j,
                #       -1.3238907673 + 0.1230225801j, 0.3086160723 - 0.730661202j,
                #       0.3627515927 + 0.4898734889j, -0.1891836043 - 0.3903715664j,
                #       -0.3688108579 - 0.0557519554j, -1.3250632514 - 0.0832741741j,
                #       -0.3003014384 + 0.1236784676j, 0.6607090825 - 0.1900648556j,
                #       0.8369849547 + 0.8979818017j, 0.8548208775 - 1.0016529781j,
                #       1.8910378026 + 0.j, 1.8231229904 - 0.2945198391j],
                #      [-1.1502313369 + 1.1576676938j, 1.1568242107 + 0.7495839085j,
                #       -0.866977249 - 0.59644799j, -0.0492779313 - 0.1433810468j,
                #       2.121389176 + 1.7640477799j, -0.0209634383 + 1.8643983216j,
                #       -0.437393456 - 0.5288677412j, -0.803055345 + 1.0801212644j,
                #       -0.6489108558 + 1.3689816122j, 1.2767907429 + 1.2213114837j,
                #       -0.518264777 + 0.1773598481j, 0.0259456946 + 1.0684095462j,
                #       0.1038280074 - 0.0431863128j, 0.009619731 + 0.0299800535j,
                #       1.8231229904 + 0.2945198391j, -1.2138491743 + 0.j]])
 #                # ADSM, L=1, Mean of MEDs = 2.0057965015543786
 #                self.A = np.array([[-11.3616373046+0.0000000000e+00j,  2.1122591974+1.7621655333e+00j,
 #   -9.0570878139-5.2486025000e+00j, -0.7181567528-4.6112510518e+00j,
 #    6.5645483159-1.4876064643e+00j,  2.0666599876+2.8877236045e+00j,
 #   -8.0478207246+3.6719383374e+00j, -4.5984591025-1.7740438723e+00j,
 #   -0.2702379273-8.6277498308e-01j, -5.9190935998+6.5588978631e+00j,
 #   -6.2554442427-6.3897137423e-01j,  7.1218793553+2.6779377730e+00j,
 #   -1.8051289096+6.5060957515e-01j, -3.2609489904+2.5745695851e+00j,
 #    4.9677934564-1.1459886862e+00j,  4.3776381518+2.0945088618e+00j],
 # [  2.1122591974-1.7621655333e+00j,  4.1635157786+0.0000000000e+00j,
 #   -3.7247146445+2.3080189670e-01j, -1.5706523152-6.5417099900e-01j,
 #   -7.0897822658+6.1290889222e+00j, -1.6528745621+7.6564778724e+00j,
 #    0.8231709525-5.6605254317e-01j,  0.8768063171+2.7630944295e+00j,
 #   -3.030225581 -8.8989789003e-01j, -2.1620729364-7.5933711608e-01j,
 #   -2.1096269497+7.6673747943e-02j, -0.9688609232-2.4268924346e+00j,
 #    0.2263932252+1.2693798189e+00j, -3.1800043695+7.2909070820e+00j,
 #    0.1453685484+5.8999406786e+00j, -0.1365458162-3.0074895215e+00j],
 # [ -9.0570878139+5.2486025000e+00j, -3.7247146445-2.3080189670e-01j,
 #    1.5303139011+0.0000000000e+00j, -3.8769420363-4.1177592769e-01j,
 #   -3.6378852698+4.1211156167e+00j,  1.3638501704-9.1169634382e-01j,
 #    2.1778964716-3.1009726356e+00j,  2.2696521038+2.9751078142e+00j,
 #    1.2143951749-3.9172407105e+00j,  2.5195185583+3.1674538151e+00j,
 #    3.1618136559+6.8148473973e+00j, -2.0519522882+2.9882325902e+00j,
 #    5.8228304596-1.9372024282e+00j,  4.8004865193+2.6977512573e+00j,
 #   -2.8589757709+4.0350997511e+00j, -2.0838586995+3.1120951419e-01j],
 # [ -0.7181567528+4.6112510518e+00j, -1.5706523152+6.5417099900e-01j,
 #   -3.8769420363+4.1177592769e-01j,  5.3111434152+0.0000000000e+00j,
 #   -1.9868461142-2.0192315322e+00j,  2.8135389414+3.5730982294e+00j,
 #    0.4445008523-4.3506277938e+00j,  6.923200144 +2.7371862108e+00j,
 #   -0.3622909344+2.5240381004e+00j, -0.8505821828+1.0115621312e-02j,
 #   -3.2641062284-1.7050049573e+00j,  1.308884601 -1.9401916095e-01j,
 #    7.1515712261+5.0274772682e+00j, -0.7460585477-2.3336021496e+00j,
 #   -4.020019208 +1.0095183764e+00j, -2.6550751597-3.8506139749e+00j],
 # [  6.5645483159+1.4876064643e+00j, -7.0897822658-6.1290889222e+00j,
 #   -3.6378852698-4.1211156167e+00j, -1.9868461142+2.0192315322e+00j,
 #   -0.9010607369+0.0000000000e+00j, -1.3558859527+4.0208299821e+00j,
 #    0.3678421128+3.5286001791e+00j, -3.7639902303+4.6732472299e-01j,
 #   -1.1282570425-5.4148081171e-01j, -0.3019824782+3.0487662001e+00j,
 #    0.2316470753+3.5607146658e+00j, -0.9959720853+3.2605421408e+00j,
 #   -1.7410086198+2.4083770221e+00j,  2.5750005805+2.6730327401e+00j,
 #   -1.0861874597+3.7177301302e+00j, -4.1535033606-7.9514341140e-01j],
 # [  2.0666599876-2.8877236045e+00j, -1.6528745621-7.6564778724e+00j,
 #    1.3638501704+9.1169634382e-01j,  2.8135389414-3.5730982294e+00j,
 #   -1.3558859527-4.0208299821e+00j, 10.0323772521+0.0000000000e+00j,
 #   -4.4698482112-2.1139857227e+00j, -2.4866168944-2.5259570896e-01j,
 #    2.8726758627-3.3714219349e+00j, -0.4125427516-4.1909488412e+00j,
 #   -0.768569373 -2.2012029340e+00j,  1.2747689819-3.4555712506e+00j,
 #   -3.352270915 +3.3010339267e-01j, -5.0006563058+3.5536755986e+00j,
 #    3.157979423 +3.7692346411e+00j,  1.8374477893+2.4653302817e+00j],
 # [ -8.0478207246-3.6719383374e+00j,  0.8231709525+5.6605254317e-01j,
 #    2.1778964716+3.1009726356e+00j,  0.4445008523+4.3506277938e+00j,
 #    0.3678421128-3.5286001791e+00j, -4.4698482112+2.1139857227e+00j,
 #    5.4342606987+0.0000000000e+00j, -0.7847103787+2.9924366498e+00j,
 #    3.4607205761+2.1801454113e+00j,  3.5536756035+9.8714098990e-01j,
 #   -1.1565084772+1.2690945897e+00j,  1.6706488356+1.5970226281e+00j,
 #    0.1647615155+1.0284896974e+00j, -2.7379362861-1.2428719668e+00j,
 #   -2.2251645963+1.0441391600e+00j, -5.432623427 +1.6303624824e+00j],
 # [ -4.5984591025+1.7740438723e+00j,  0.8768063171-2.7630944295e+00j,
 #    2.2696521038-2.9751078142e+00j,  6.923200144 -2.7371862108e+00j,
 #   -3.7639902303-4.6732472299e-01j, -2.4866168944+2.5259570896e-01j,
 #   -0.7847103787-2.9924366498e+00j, -1.1657021845+0.0000000000e+00j,
 #    4.421612948 +2.3072961348e+00j, -1.4869245875-4.5906699504e+00j,
 #    1.6210059121-2.4185847058e+00j, -0.9625724192-3.3424309184e+00j,
 #   -0.4068463124-2.7369858857e+00j,  6.8370272153+2.3549899604e+00j,
 #   -3.297995318 +1.8168893902e+00j, -0.8723585965+1.4534410209e+00j],
 # [ -0.2702379273+8.6277498308e-01j, -3.030225581 +8.8989789003e-01j,
 #    1.2143951749+3.9172407105e+00j, -0.3622909344-2.5240381004e+00j,
 #   -1.1282570425+5.4148081171e-01j,  2.8726758627+3.3714219349e+00j,
 #    3.4607205761-2.1801454113e+00j,  4.421612948 -2.3072961348e+00j,
 #    4.1919644364+0.0000000000e+00j, -0.524552086 -6.3315297305e+00j,
 #    2.5434131446+4.1687067677e+00j,  4.6185822496+1.2823988957e+00j,
 #    5.0098465306-3.7188639415e+00j, -5.6409234654-1.8599316666e+00j,
 #   -2.6957887409+4.1722214915e+00j,  4.209514539 +2.9909588902e+00j],
 # [ -5.9190935998-6.5588978631e+00j, -2.1620729364+7.5933711608e-01j,
 #    2.5195185583-3.1674538151e+00j, -0.8505821828-1.0115621312e-02j,
 #   -0.3019824782-3.0487662001e+00j, -0.4125427516+4.1909488412e+00j,
 #    3.5536756035-9.8714098990e-01j, -1.4869245875+4.5906699504e+00j,
 #   -0.524552086 +6.3315297305e+00j, -1.5368988278+0.0000000000e+00j,
 #   -3.8720778404-3.6400669532e+00j,  1.0292444143-3.3876512726e+00j,
 #   -4.4846346013+1.9744387914e+00j, -0.8664616079-4.5534112784e+00j,
 #    2.0580548775-4.5746939189e-01j, -0.6238533728-3.6377975787e+00j],
 # [ -6.2554442427+6.3897137423e-01j, -2.1096269497-7.6673747943e-02j,
 #    3.1618136559-6.8148473973e+00j, -3.2641062284+1.7050049573e+00j,
 #    0.2316470753-3.5607146658e+00j, -0.768569373 +2.2012029340e+00j,
 #   -1.1565084772-1.2690945897e+00j,  1.6210059121+2.4185847058e+00j,
 #    2.5434131446-4.1687067677e+00j, -3.8720778404+3.6400669532e+00j,
 #   -0.9897873585+0.0000000000e+00j,  3.0746144721-2.4960009511e+00j,
 #   -0.8068681645-1.2812029057e+00j,  1.951495989 +3.4645752101e+00j,
 #   -1.4707279702+3.3873141675e+00j, -2.6601558289-1.4931064192e+00j],
 # [  7.1218793553-2.6779377730e+00j, -0.9688609232+2.4268924346e+00j,
 #   -2.0519522882-2.9882325902e+00j,  1.308884601 +1.9401916095e-01j,
 #   -0.9959720853-3.2605421408e+00j,  1.2747689819+3.4555712506e+00j,
 #    1.6706488356-1.5970226281e+00j, -0.9625724192+3.3424309184e+00j,
 #    4.6185822496-1.2823988957e+00j,  1.0292444143+3.3876512726e+00j,
 #    3.0746144721+2.4960009511e+00j, -2.2711465043+0.0000000000e+00j,
 #   -8.7579516407+1.3653441401e-01j, -1.4029626566+7.0498905868e-01j,
 #   -3.4018000007+7.4825186822e-01j, -1.5065496885+1.1080431895e+00j],
 # [ -1.8051289096-6.5060957515e-01j,  0.2263932252-1.2693798189e+00j,
 #    5.8228304596+1.9372024282e+00j,  7.1515712261-5.0274772682e+00j,
 #   -1.7410086198-2.4083770221e+00j, -3.352270915 -3.3010339267e-01j,
 #    0.1647615155-1.0284896974e+00j, -0.4068463124+2.7369858857e+00j,
 #    5.0098465306+3.7188639415e+00j, -4.4846346013-1.9744387914e+00j,
 #   -0.8068681645+1.2812029057e+00j, -8.7579516407-1.3653441401e-01j,
 #    7.1085452173+0.0000000000e+00j, -0.2048260262-5.3192045796e-01j,
 #    1.8633551491-1.8983027532e-03j, -2.9239894843-1.2910412447e+00j],
 # [ -3.2609489904-2.5745695851e+00j, -3.1800043695-7.2909070820e+00j,
 #    4.8004865193-2.6977512573e+00j, -0.7460585477+2.3336021496e+00j,
 #    2.5750005805-2.6730327401e+00j, -5.0006563058-3.5536755986e+00j,
 #   -2.7379362861+1.2428719668e+00j,  6.8370272153-2.3549899604e+00j,
 #   -5.6409234654+1.8599316666e+00j, -0.8664616079+4.5534112784e+00j,
 #    1.951495989 -3.4645752101e+00j, -1.4029626566-7.0498905868e-01j,
 #   -0.2048260262+5.3192045796e-01j,  5.9009593612+0.0000000000e+00j,
 #    0.4637706232+2.4245815652e+00j, -2.7790118199-1.8509244388e+00j],
 # [  4.9677934564+1.1459886862e+00j,  0.1453685484-5.8999406786e+00j,
 #   -2.8589757709-4.0350997511e+00j, -4.020019208 -1.0095183764e+00j,
 #   -1.0861874597-3.7177301302e+00j,  3.157979423 -3.7692346411e+00j,
 #   -2.2251645963-1.0441391600e+00j, -3.297995318 -1.8168893902e+00j,
 #   -2.6957887409-4.1722214915e+00j,  2.0580548775+4.5746939189e-01j,
 #   -1.4707279702-3.3873141675e+00j, -3.4018000007-7.4825186822e-01j,
 #    1.8633551491+1.8983027532e-03j,  0.4637706232-2.4245815652e+00j,
 #   -2.0919993227+0.0000000000e+00j,  2.5710002689+2.7267758207e+00j],
 # [  4.3776381518-2.0945088618e+00j, -0.1365458162+3.0074895215e+00j,
 #   -2.0838586995-3.1120951419e-01j, -2.6550751597+3.8506139749e+00j,
 #   -4.1535033606+7.9514341140e-01j,  1.8374477893-2.4653302817e+00j,
 #   -5.432623427 -1.6303624824e+00j, -0.8723585965-1.4534410209e+00j,
 #    4.209514539 -2.9909588902e+00j, -0.6238533728+3.6377975787e+00j,
 #   -2.6601558289+1.4931064192e+00j, -1.5065496885-1.1080431895e+00j,
 #   -2.9239894843+1.2910412447e+00j, -2.7790118199+1.8509244388e+00j,
 #    2.5710002689-2.7267758207e+00j,  1.2022523882+0.0000000000e+00j]])
 #                # ADSM, L=1, Mean of MEDs = 2.083820963233103
 #                self.A = np.array([[-0.5902224577+0.j          , 0.559660484 -1.3420801509j,
 #  -0.2902778734+0.502698745j ,-1.0309192377+0.235212254j ,
 #   0.8404270651+0.9589036547j, 0.3491529527-0.5792666965j,
 #   0.9702902666-0.3486751411j, 0.8928780239-0.4812334516j,
 #  -1.8172252797+0.1389154465j,-1.012408438 +1.7147330225j,
 #  -0.1186318699-0.5131395948j,-0.8985326524-0.306530384j ,
 #   1.1755756995-0.4888023463j, 0.9438094635-0.7630188968j,
 #   1.0033562504+0.5271433267j, 0.0213886342-0.0204000833j],
 # [ 0.559660484 +1.3420801509j,-0.0613848373+0.j          ,
 #  -0.0800589914-0.2514705544j,-0.2431211146-1.3962778794j,
 #  -0.267918579 +0.0612265281j,-0.4224852078-1.2878564902j,
 #   0.6675964422-0.0886674318j, 0.3525023537-0.0292807964j,
 #  -0.4231531215-0.2414565914j,-0.1922987525-0.9294902811j,
 #   0.5370081437+1.0673358231j, 1.0025069851-1.0909051244j,
 #  -0.2383758233-0.2585926073j,-0.662779187 +0.6261315842j,
 #   0.1366904555-0.4225750648j, 0.2000306795-0.645133925j ],
 # [-0.2902778734-0.502698745j ,-0.0800589914+0.2514705544j,
 #   0.8093127976+0.j          ,-0.7738654619-0.1453258457j,
 #   0.9594345055+1.1245046019j, 2.2288683604+0.084408351j ,
 #  -0.0806273882+0.1260645991j,-0.1445238758+0.8126944469j,
 #  -0.0620776191-0.0809989451j,-0.1562636594-0.6730620578j,
 #  -1.1342881861+0.2283768127j,-0.6601298726+1.4414458124j,
 #  -0.2886825284+0.4652566866j,-0.9854539582-0.3817432609j,
 #  -0.4986893034-1.0063271298j, 0.5559383055+0.146314052j ],
 # [-1.0309192377-0.235212254j ,-0.2431211146+1.3962778794j,
 #  -0.7738654619+0.1453258457j, 0.7882462341+0.j          ,
 #  -1.188083604 +0.5518748419j,-0.2369821163+0.9013213953j,
 #   1.0302198835+0.6161470126j,-0.9104326292-1.0013456152j,
 #  -0.0555012289+0.7023111264j,-0.8010257194-0.1976496569j,
 #  -0.5601085959-0.1067028587j,-0.3874839883-0.2683992454j,
 #  -0.1092670347-0.5592497795j, 0.4232863052+0.4865648417j,
 #  -0.1095622941-0.2027674591j, 0.2183202699-0.2719952813j],
 # [ 0.8404270651-0.9589036547j,-0.267918579 -0.0612265281j,
 #   0.9594345055-1.1245046019j,-1.188083604 -0.5518748419j,
 #   0.8301653864+0.j          ,-0.6486533728+0.1193216151j,
 #   0.8936231844-0.0335634629j,-0.3093722136+0.9170128775j,
 #  -0.0231833207-0.0170009959j,-0.057230448 -1.9944842129j,
 #  -0.370002961 +1.8951587745j, 0.5983084777-0.3949457443j,
 #  -0.0853070028-0.0597375903j, 0.7637059848+0.4166499178j,
 #   0.1846826301+0.2381328616j, 0.4343003896-0.1427815011j],
 # [ 0.3491529527+0.5792666965j,-0.4224852078+1.2878564902j,
 #   2.2288683604-0.084408351j ,-0.2369821163-0.9013213953j,
 #  -0.6486533728-0.1193216151j,-0.2852373789+0.j          ,
 #  -1.0472461251-1.1997562698j,-1.5165146355-0.3459947355j,
 #   0.4773633102-0.1040143192j, 1.5297106897+0.176513652j ,
 #   1.3808822527-0.8455590491j,-0.2434501488+1.086583759j ,
 #   0.7444404107+0.183904938j , 0.7000681756+0.8184009068j,
 #   0.4113086774+0.1020061533j, 0.5071044294-0.3878928091j],
 # [ 0.9702902666+0.3486751411j, 0.6675964422+0.0886674318j,
 #  -0.0806273882-0.1260645991j, 1.0302198835-0.6161470126j,
 #   0.8936231844+0.0335634629j,-1.0472461251+1.1997562698j,
 #  -0.9250060714+0.j          ,-0.7721002907-0.7398276921j,
 #  -0.3992060098+0.7919972526j,-1.1679446257-0.8487735841j,
 #  -0.4864058448+0.2054318048j,-0.2404855229+0.1465066466j,
 #   0.3303792014-0.3527953677j,-0.8252671836-1.0876785754j,
 #   0.3458521633-0.6521460254j, 0.5238849255-0.5834842435j],
 # [ 0.8928780239+0.4812334516j, 0.3525023537+0.0292807964j,
 #  -0.1445238758-0.8126944469j,-0.9104326292+1.0013456152j,
 #  -0.3093722136-0.9170128775j,-1.5165146355+0.3459947355j,
 #  -0.7721002907+0.7398276921j,-1.812433872 +0.j          ,
 #   1.1024021428+0.1497126204j, 0.0364619729-0.4799525637j,
 #   1.5811070576+0.6779559309j,-0.7160074254-1.1557772207j,
 #  -0.0151738139+0.0475853137j, 0.198905028 -0.6969051029j,
 #  -0.0340341137+1.0858840051j,-0.937476813 -0.0039531135j],
 # [-1.8172252797-0.1389154465j,-0.4231531215+0.2414565914j,
 #  -0.0620776191+0.0809989451j,-0.0555012289-0.7023111264j,
 #  -0.0231833207+0.0170009959j, 0.4773633102+0.1040143192j,
 #  -0.3992060098-0.7919972526j, 1.1024021428-0.1497126204j,
 #  -0.7636726009+0.j          , 0.6865708301-0.8215943303j,
 #  -0.2751723633-0.1158414026j, 0.4999521147+1.3969098323j,
 #   0.2702025076-0.3710157685j, 1.0125338319+0.5839091509j,
 #  -0.1801521628+0.4796388238j, 0.7438639188-1.0105972886j],
 # [-1.012408438 -1.7147330225j,-0.1922987525+0.9294902811j,
 #  -0.1562636594+0.6730620578j,-0.8010257194+0.1976496569j,
 #  -0.057230448 +1.9944842129j, 1.5297106897-0.176513652j ,
 #  -1.1679446257+0.8487735841j, 0.0364619729+0.4799525637j,
 #   0.6865708301+0.8215943303j,-2.0396740408+0.j          ,
 #   1.0627116476+1.0121730704j,-0.169485714 -0.7484971445j,
 #   0.6420361185-0.4172542617j, 0.5063044159-0.7608398958j,
 #   0.987267087 -1.2382802882j,-0.2636388821-0.3413707995j],
 # [-0.1186318699+0.5131395948j, 0.5370081437-1.0673358231j,
 #  -1.1342881861-0.2283768127j,-0.5601085959+0.1067028587j,
 #  -0.370002961 -1.8951587745j, 1.3808822527+0.8455590491j,
 #  -0.4864058448-0.2054318048j, 1.5811070576-0.6779559309j,
 #  -0.2751723633+0.1158414026j, 1.0627116476-1.0121730704j,
 #   0.8127794784+0.j          , 1.3089671451-0.5639111486j,
 #  -0.3229373387+0.1457017961j, 0.030139528 -0.0201536447j,
 #   0.3959141199-0.9340989243j, 1.1406280656-0.6396568786j],
 # [-0.8985326524+0.306530384j , 1.0025069851+1.0909051244j,
 #  -0.6601298726-1.4414458124j,-0.3874839883+0.2683992454j,
 #   0.5983084777+0.3949457443j,-0.2434501488-1.086583759j ,
 #  -0.2404855229-0.1465066466j,-0.7160074254+1.1557772207j,
 #   0.4999521147-1.3969098323j,-0.169485714 +0.7484971445j,
 #   1.3089671451+0.5639111486j, 0.6144613113+0.j          ,
 #  -0.4821302558-0.1070639771j, 0.1170733064+0.8676943062j,
 #  -0.6180792569-0.51625035j  ,-0.2355754391-0.2768281547j],
 # [ 1.1755756995+0.4888023463j,-0.2383758233+0.2585926073j,
 #  -0.2886825284-0.4652566866j,-0.1092670347+0.5592497795j,
 #  -0.0853070028+0.0597375903j, 0.7444404107-0.183904938j ,
 #   0.3303792014+0.3527953677j,-0.0151738139-0.0475853137j,
 #   0.2702025076+0.3710157685j, 0.6420361185+0.4172542617j,
 #  -0.3229373387-0.1457017961j,-0.4821302558+0.1070639771j,
 #   0.2626477469+0.j          , 0.8478436778-0.4295847864j,
 #  -0.5170609343+0.1629266952j, 0.5526470231+0.0233170746j],
 # [ 0.9438094635+0.7630188968j,-0.662779187 -0.6261315842j,
 #  -0.9854539582+0.3817432609j, 0.4232863052-0.4865648417j,
 #   0.7637059848-0.4166499178j, 0.7000681756-0.8184009068j,
 #  -0.8252671836+1.0876785754j, 0.198905028 +0.6969051029j,
 #   1.0125338319-0.5839091509j, 0.5063044159+0.7608398958j,
 #   0.030139528 +0.0201536447j, 0.1170733064-0.8676943062j,
 #   0.8478436778+0.4295847864j, 0.74456707  +0.j          ,
 #   0.0925640306-0.5044865588j,-0.444965927 -0.437041909j ],
 # [ 1.0033562504-0.5271433267j, 0.1366904555+0.4225750648j,
 #  -0.4986893034+1.0063271298j,-0.1095622941+0.2027674591j,
 #   0.1846826301-0.2381328616j, 0.4113086774-0.1020061533j,
 #   0.3458521633+0.6521460254j,-0.0340341137-1.0858840051j,
 #  -0.1801521628-0.4796388238j, 0.987267087 +1.2382802882j,
 #   0.3959141199+0.9340989243j,-0.6180792569+0.51625035j  ,
 #  -0.5170609343-0.1629266952j, 0.0925640306+0.5044865588j,
 #  -1.5974944151+0.j          , 0.6381898347+0.0435811994j],
 # [ 0.0213886342+0.0204000833j, 0.2000306795+0.645133925j ,
 #   0.5559383055-0.146314052j , 0.2183202699+0.2719952813j,
 #   0.4343003896+0.1427815011j, 0.5071044294+0.3878928091j,
 #   0.5238849255+0.5834842435j,-0.937476813 +0.0039531135j,
 #   0.7438639188+1.0105972886j,-0.2636388821+0.3413707995j,
 #   1.1406280656+0.6396568786j,-0.2355754391+0.2768281547j,
 #   0.5526470231-0.0233170746j,-0.444965927 +0.437041909j ,
 #   0.6381898347-0.0435811994j, 1.3250445716+0.j          ]])
 #                # TAST, L=1, Q=1, Mean of MEDs = 2.00048954180048
 #                self.A = np.array([[ -667.9317632526   +0.j          , -124.5022668867 -729.4193229477j,
 #  -1315.7853197508 +234.4307583078j,   59.7785345144 +521.1156024366j,
 #   -768.6177734565 +158.5782252712j,  642.8162709561 -890.4857913274j,
 #   -911.3426123212 -300.5215993902j,  564.1441259427 +181.1215664974j,
 #    471.1998873814+1253.4074359751j,  849.47692946   +293.025612713j ,
 #    600.8668534462-1479.4170866178j, -780.4780927633 +299.266271003j ,
 #   -170.7001165825  +80.844382998j ,-1755.7436526823 +206.7862794461j,
 #   -824.6003268341 -519.3523145624j, -682.6865732282 -137.2324892019j],
 # [ -124.5022668867 +729.4193229477j, 1244.0503361858   +0.j          ,
 #   -445.7375651094+1267.2632635278j,  447.3652541193 -730.3729710164j,
 #   -818.6299561473 -604.2120338209j,-1306.7851157766 +437.5418468618j,
 #   -180.374835342  -792.7374817186j,  275.5110658916 +271.0558499019j,
 #    401.0893059414-1551.2191929257j, -687.3997827643 -107.8398031222j,
 #     73.1936506466 +177.5713031542j, 1204.7659616675 -145.3311880147j,
 #    898.271897326  -732.5077393763j,  290.0986655768 +167.7747872161j,
 #    415.2939802491 +760.6714649268j,  294.3017346089+1282.3360210953j],
 # [-1315.7853197508 -234.4307583078j, -445.7375651094-1267.2632635278j,
 #   1539.9559281397   +0.j          , -691.4187745939+1079.946151463j ,
 #   -929.9856473989 +909.0157047005j,  553.8037089433  -56.7897670491j,
 #   1035.5715880573 -486.3975154125j,  797.7574577835-1564.7903239822j,
 #   -611.3902007517 +392.6291486088j,  472.4505823526 +922.5091801804j,
 #    145.4783068274  -32.1604476841j,  365.1346877572 -357.904115154j ,
 #  -1020.9805509274 -207.0227662811j,-1136.910865612  +200.5290983284j,
 #   -113.1955320466 -417.8111232687j, 1615.0109681215   +6.0616964647j],
 # [   59.7785345144 -521.1156024366j,  447.3652541193 +730.3729710164j,
 #   -691.4187745939-1079.946151463j , -451.800830708    +0.j          ,
 #   1055.8163877692 +577.8529727331j, -557.6903356405 -727.5912341613j,
 #    762.8837278789 +810.6660088055j,  300.0385452734 -610.1697690016j,
 #   -215.4312011083 +199.5731272581j,  668.7323682586 -917.9310627648j,
 #      5.3633992337 +442.3538911682j, -441.4100667392  -40.8022077816j,
 #   -688.854297962  -494.4674831737j, -541.1700803976 +606.3897750533j,
 #    457.1271109114 -445.065119496j , -538.3948903332+1372.538773219j ],
 # [ -768.6177734565 -158.5782252712j, -818.6299561473 +604.2120338209j,
 #   -929.9856473989 -909.0157047005j, 1055.8163877692 -577.8529727331j,
 #    982.9752981628   +0.j          , -943.8156361822 -291.1379116823j,
 #   -453.8977215827 -187.0472148129j, -446.7992031461 -407.5542000763j,
 #    870.2766077173 -409.1102497396j, -607.5051358766 -359.0991727563j,
 #   1048.8205998977 -483.4027649505j,  327.2837819831+1265.837426341j ,
 #   -301.6459436341 +414.0747070416j, -552.9887424673 +101.4608740106j,
 #   -675.5493975337 +611.2977253032j,  -41.8410209577 +447.0386906187j],
 # [  642.8162709561 +890.4857913274j,-1306.7851157766 -437.5418468618j,
 #    553.8037089433  +56.7897670491j, -557.6903356405 +727.5912341613j,
 #   -943.8156361822 +291.1379116823j, 1625.5305947732   +0.j          ,
 #     63.0655421632+1380.7760281422j, -342.7287393214 +914.2810614936j,
 #   -199.1137815799  +65.4382964779j,  198.9740047786 +847.0515921428j,
 #   -207.6087619274  -72.5273387579j,  738.5259281573 +311.6618916241j,
 #   -336.9025962068 -800.8703216963j, -397.3075508784 -908.1720719016j,
 #   1758.6676130084-1205.8531375495j,  841.9470258178 +373.2457505806j],
 # [ -911.3426123212 +300.5215993902j, -180.374835342  +792.7374817186j,
 #   1035.5715880573 +486.3975154125j,  762.8837278789 -810.6660088055j,
 #   -453.8977215827 +187.0472148129j,   63.0655421632-1380.7760281422j,
 #   -935.8268843728   +0.j          ,  414.9705507823-1954.8676433869j,
 #    600.2227087199 -316.5666023505j, -522.7005413725  -23.8373328852j,
 #    113.6497312541 -363.3152812952j, -803.3075272106 +305.3140203835j,
 #    128.9731470648+1043.7406191364j,  516.7614321775  +83.072530624j ,
 #    306.7343722432 -100.7097504588j,-2451.1432435582+1189.8321000932j],
 # [  564.1441259427 -181.1215664974j,  275.5110658916 -271.0558499019j,
 #    797.7574577835+1564.7903239822j,  300.0385452734 +610.1697690016j,
 #   -446.7992031461 +407.5542000763j, -342.7287393214 -914.2810614936j,
 #    414.9705507823+1954.8676433869j, -277.1419916927   +0.j          ,
 #   -589.6338151646 +243.2099942686j, -336.2707355664 +264.6838248263j,
 #   -865.0291390027 +572.4747756495j,    4.1146170022 +761.6602226343j,
 #   -460.5537758713 -101.3478095187j, -671.2913358668+1584.176793097j ,
 #   1700.1132935919 -259.6065945096j, -595.4463849311-1037.7172480919j],
 # [  471.1998873814-1253.4074359751j,  401.0893059414+1551.2191929257j,
 #   -611.3902007517 -392.6291486088j, -215.4312011083 -199.5731272581j,
 #    870.2766077173 +409.1102497396j, -199.1137815799  -65.4382964779j,
 #    600.2227087199 +316.5666023505j, -589.6338151646 -243.2099942686j,
 #  -1340.4020027817   +0.j          ,  274.8069508883 +535.3867525841j,
 #    491.9148958871 +761.3983971559j,  762.7497548949  +69.3482357658j,
 #   -244.9262003876 +161.6579832788j,  974.7192365907  +92.7912965063j,
 #    211.4622471738 -934.6752458085j,  285.6974606999 +656.5141671647j],
 # [  849.47692946   -293.025612713j , -687.3997827643 +107.8398031222j,
 #    472.4505823526 -922.5091801804j,  668.7323682586 +917.9310627648j,
 #   -607.5051358766 +359.0991727563j,  198.9740047786 -847.0515921428j,
 #   -522.7005413725  +23.8373328852j, -336.2707355664 -264.6838248263j,
 #    274.8069508883 -535.3867525841j, -833.3356464439   +0.j          ,
 #     68.9172343037 +514.4647511401j, 1074.62100075    -97.4418803353j,
 #    296.3634976855 +691.4077010288j, -294.0894962219 +202.2191829723j,
 #     49.4562046373 -308.7252754484j,  236.0777342849 -425.2546259137j],
 # [  600.8668534462+1479.4170866178j,   73.1936506466 -177.5713031542j,
 #    145.4783068274  +32.1604476841j,    5.3633992337 -442.3538911682j,
 #   1048.8205998977 +483.4027649505j, -207.6087619274  +72.5273387579j,
 #    113.6497312541 +363.3152812952j, -865.0291390027 -572.4747756495j,
 #    491.9148958871 -761.3983971559j,   68.9172343037 -514.4647511401j,
 #   -462.8220516257   +0.j          ,  453.7982216975 -105.0334322006j,
 #   -609.3691557712 -354.5385364956j, -347.7110510481 +464.0158203646j,
 #    460.0336930989 -769.7268841299j, -445.7216496921 -463.335574673j ],
 # [ -780.4780927633 -299.266271003j , 1204.7659616675 +145.3311880147j,
 #    365.1346877572 +357.904115154j , -441.4100667392  +40.8022077816j,
 #    327.2837819831-1265.837426341j ,  738.5259281573 -311.6618916241j,
 #   -803.3075272106 -305.3140203835j,    4.1146170022 -761.6602226343j,
 #    762.7497548949  -69.3482357658j, 1074.62100075    +97.4418803353j,
 #    453.7982216975 +105.0334322006j, -791.5636812075   +0.j          ,
 #   -523.46952034   +343.172834125j , -200.8964489188 -438.6229361672j,
 #    647.2879539548 +179.0786542209j,   33.9503859201 -315.2545723653j],
 # [ -170.7001165825  -80.844382998j ,  898.271897326  +732.5077393763j,
 #  -1020.9805509274 +207.0227662811j, -688.854297962  +494.4674831737j,
 #   -301.6459436341 -414.0747070416j, -336.9025962068 +800.8703216963j,
 #    128.9731470648-1043.7406191364j, -460.5537758713 +101.3478095187j,
 #   -244.9262003876 -161.6579832788j,  296.3634976855 -691.4077010288j,
 #   -609.3691557712 +354.5385364956j, -523.46952034   -343.172834125j ,
 #    -30.6922835567   +0.j          , -546.6834960715  -20.7889231613j,
 #   1363.5031389395  +52.3760279558j,  655.705825187  -183.8343891259j],
 # [-1755.7436526823 -206.7862794461j,  290.0986655768 -167.7747872161j,
 #  -1136.910865612  -200.5290983284j, -541.1700803976 -606.3897750533j,
 #   -552.9887424673 -101.4608740106j, -397.3075508784 +908.1720719016j,
 #    516.7614321775  -83.072530624j , -671.2913358668-1584.176793097j ,
 #    974.7192365907  -92.7912965063j, -294.0894962219 -202.2191829723j,
 #   -347.7110510481 -464.0158203646j, -200.8964489188 +438.6229361672j,
 #   -546.6834960715  +20.7889231613j,  -26.3207470429   +0.j          ,
 #    -56.2286211941 -863.9141541786j, 1786.8269415829 +985.2646640687j],
 # [ -824.6003268341 +519.3523145624j,  415.2939802491 -760.6714649268j,
 #   -113.1955320466 +417.8111232687j,  457.1271109114 +445.065119496j ,
 #   -675.5493975337 -611.2977253032j, 1758.6676130084+1205.8531375495j,
 #    306.7343722432 +100.7097504588j, 1700.1132935919 +259.6065945096j,
 #    211.4622471738 +934.6752458085j,   49.4562046373 +308.7252754484j,
 #    460.0336930989 +769.7268841299j,  647.2879539548 -179.0786542209j,
 #   1363.5031389395  -52.3760279558j,  -56.2286211941 +863.9141541786j,
 #  -1244.3154193986   +0.j          ,  274.2188729284 +158.9740210929j],
 # [ -682.6865732282 +137.2324892019j,  294.3017346089-1282.3360210953j,
 #   1615.0109681215   -6.0616964647j, -538.3948903332-1372.538773219j ,
 #    -41.8410209577 -447.0386906187j,  841.9470258178 -373.2457505806j,
 #  -2451.1432435582-1189.8321000932j, -595.4463849311+1037.7172480919j,
 #    285.6974606999 -656.5141671647j,  236.0777342849 +425.2546259137j,
 #   -445.7216496921 +463.335574673j ,   33.9503859201 +315.2545723653j,
 #    655.705825187  +183.8343891259j, 1786.8269415829 -985.2646640687j,
 #    274.2188729284 -158.9740210929j,  754.9594788886   +0.j          ]])
                # DUC, L=256, 0.5-1.0-1.5, Mean of MEDs = 1.2312449102362413
                self.A = np.array([[1.9868507271 + 0.j, 0.5030520482 - 0.4606041702j, 1.2064507569 - 0.4623212566j,
                                    0.328977943 - 0.2078016414j, 0.565842305 + 0.8210793843j,
                                    -0.063114308 - 0.5689154718j, -0.4676790321 + 0.5555327908j,
                                    -0.1824843293 + 0.7861994462j, -0.8909034038 + 0.1314038262j,
                                    -0.1236473624 + 0.7934526163j, -0.0244007396 + 0.241696829j,
                                    -1.0082133769 + 0.2840835823j, 0.7002900128 - 0.7279225411j,
                                    -0.2144732169 - 0.7061668994j, -0.1342185231 - 0.1840840636j,
                                    0.0533356285 - 0.3082660313j],
                                   [0.5030520482 + 0.4606041702j, -0.4229488828 + 0.j, 0.1052445392 + 0.4842939985j,
                                    0.9167389787 - 0.7237954924j, 0.642489195 + 1.0041775817j,
                                    -1.6123369075 + 0.0466482848j, 0.2724140703 + 1.0390718883j,
                                    0.4853195933 + 1.0010520176j, 0.5861327808 + 0.0375990415j,
                                    -0.2180632539 - 2.1043501996j, -0.2173609988 + 0.6807222861j,
                                    -0.2090070817 - 0.4116775588j, -0.0557614174 + 0.2151733366j,
                                    -0.3551160433 - 0.3840047604j, 0.1015972607 + 0.3964439973j,
                                    0.4074590202 + 1.3820961441j],
                                   [1.2064507569 + 0.4623212566j, 0.1052445392 - 0.4842939985j, -0.7813364823 + 0.j,
                                    0.4419839159 - 0.1974701307j, -0.4712038875 - 1.1228583101j,
                                    0.7079089376 + 0.1565363462j, 0.3606631453 + 1.0904457747j,
                                    0.1332550051 + 0.3292295971j, 0.4994092 + 0.5990287841j,
                                    1.067134816 - 0.1218074613j, -0.7440288799 - 0.9000099723j,
                                    -0.7941306901 - 0.0260765025j, 0.2003139426 - 0.618133402j,
                                    0.7080318674 - 0.8255681962j, -0.4866435532 - 0.4631153149j,
                                    0.280031874 - 1.6654556436j],
                                   [0.328977943 + 0.2078016414j, 0.9167389787 + 0.7237954924j,
                                    0.4419839159 + 0.1974701307j, 1.2836670117 + 0.j, -0.1773742629 + 0.1344521787j,
                                    1.7235358761 + 0.780004504j, -0.2720349241 + 0.6026049591j,
                                    0.7781855517 + 0.1558817011j, -0.1728856757 + 0.2298496404j,
                                    -0.3540540847 + 0.5679448994j, 0.8609410171 + 0.501516047j,
                                    -0.4323232188 + 0.9016961205j, 0.8034194862 + 0.1862524951j,
                                    0.2245896415 - 0.4159297564j, 1.0344078851 + 0.0478533165j,
                                    0.5182462913 + 0.2444091146j],
                                   [0.565842305 - 0.8210793843j, 0.642489195 - 1.0041775817j,
                                    -0.4712038875 + 1.1228583101j, -0.1773742629 - 0.1344521787j, 0.2857596165 + 0.j,
                                    0.3746090955 - 0.2627110276j, 0.0600983442 - 0.3270755986j,
                                    1.0026404269 + 0.0354615442j, 0.128171468 + 0.1701657523j,
                                    -0.1303784025 + 1.0523396439j, 0.5471853017 + 0.1598667603j,
                                    0.2162483637 - 0.028662499j, -0.6221774803 - 0.4338978366j,
                                    -0.6876397084 - 0.457499997j, 0.5982863768 - 0.9659281629j,
                                    0.2497286908 + 0.0724985382j],
                                   [-0.063114308 + 0.5689154718j, -1.6123369075 - 0.0466482848j,
                                    0.7079089376 - 0.1565363462j, 1.7235358761 - 0.780004504j,
                                    0.3746090955 + 0.2627110276j, 1.0490769609 + 0.j, -1.1936367466 - 0.6880828653j,
                                    -0.5400455314 - 0.9246038869j, 0.4027792291 - 0.5236374774j,
                                    -0.4295577105 + 0.3962328987j, -0.4468966754 - 0.739674781j,
                                    0.1745182544 - 0.229990104j, -0.0213546351 + 0.4528548669j,
                                    -0.3941668292 + 0.9688295358j, 0.4406041689 - 0.3771720998j,
                                    0.2473822488 - 0.0480534282j],
                                   [-0.4676790321 - 0.5555327908j, 0.2724140703 - 1.0390718883j,
                                    0.3606631453 - 1.0904457747j, -0.2720349241 - 0.6026049591j,
                                    0.0600983442 + 0.3270755986j, -1.1936367466 + 0.6880828653j, -0.4826675642 + 0.j,
                                    0.3068684804 + 0.6182680767j, 0.9026075094 - 0.148849929j,
                                    -0.4760330945 - 0.2714711238j, -1.548327734 + 0.9161601665j,
                                    0.9270403533 + 0.0614059228j, -1.0167139067 + 0.1322685924j,
                                    0.2253076938 + 1.2091937782j, -0.8197451201 - 1.375683411j,
                                    0.3084851581 - 0.11487942j],
                                   [-0.1824843293 - 0.7861994462j, 0.4853195933 - 1.0010520176j,
                                    0.1332550051 - 0.3292295971j, 0.7781855517 - 0.1558817011j,
                                    1.0026404269 - 0.0354615442j, -0.5400455314 + 0.9246038869j,
                                    0.3068684804 - 0.6182680767j, -0.8010344761 + 0.j, -0.3798150394 - 0.4008682124j,
                                    1.3229497843 + 1.0885587232j, -0.237344916 + 0.3797974741j,
                                    -0.9494359651 + 2.3728685819j, 0.3709364748 - 0.1798748833j,
                                    0.6785724054 + 0.5044513379j, -0.7645633591 - 0.4149596544j,
                                    -1.6364884405 + 0.726646518j],
                                   [-0.8909034038 - 0.1314038262j, 0.5861327808 - 0.0375990415j,
                                    0.4994092 - 0.5990287841j, -0.1728856757 - 0.2298496404j,
                                    0.128171468 - 0.1701657523j, 0.4027792291 + 0.5236374774j,
                                    0.9026075094 + 0.148849929j, -0.3798150394 + 0.4008682124j, -0.3601766598 + 0.j,
                                    -1.1888775394 + 1.150803046j, 0.1223262154 - 0.0867107064j,
                                    0.3194673077 + 0.6384627793j, -0.6487919628 + 0.9154618718j,
                                    -1.0725055229 + 0.4118942789j, -0.5450623428 - 0.1006410219j,
                                    0.843764968 - 0.1753579012j],
                                   [-0.1236473624 - 0.7934526163j, -0.2180632539 + 2.1043501996j,
                                    1.067134816 + 0.1218074613j, -0.3540540847 - 0.5679448994j,
                                    -0.1303784025 - 1.0523396439j, -0.4295577105 - 0.3962328987j,
                                    -0.4760330945 + 0.2714711238j, 1.3229497843 - 1.0885587232j,
                                    -1.1888775394 - 1.150803046j, 0.166883774 + 0.j, 1.1206453115 - 0.5563763476j,
                                    -0.9908958919 + 0.1558920226j, -0.437063234 - 0.2434452444j,
                                    -0.2782595335 - 0.0358399758j, -0.7237855249 + 0.3030806575j,
                                    1.1204172641 - 0.2152665134j],
                                   [-0.0244007396 - 0.241696829j, -0.2173609988 - 0.6807222861j,
                                    -0.7440288799 + 0.9000099723j, 0.8609410171 - 0.501516047j,
                                    0.5471853017 - 0.1598667603j, -0.4468966754 + 0.739674781j,
                                    -1.548327734 - 0.9161601665j, -0.237344916 - 0.3797974741j,
                                    0.1223262154 + 0.0867107064j, 1.1206453115 + 0.5563763476j, 1.2283305372 + 0.j,
                                    -0.2038989363 + 0.4866906843j, -0.0378971456 + 1.2231328282j,
                                    0.1143913145 + 0.2668375355j, 0.0040912441 - 0.6732342597j,
                                    0.3431500895 + 1.0384436326j],
                                   [-1.0082133769 - 0.2840835823j, -0.2090070817 + 0.4116775588j,
                                    -0.7941306901 + 0.0260765025j, -0.4323232188 - 0.9016961205j,
                                    0.2162483637 + 0.028662499j, 0.1745182544 + 0.229990104j,
                                    0.9270403533 - 0.0614059228j, -0.9494359651 - 2.3728685819j,
                                    0.3194673077 - 0.6384627793j, -0.9908958919 - 0.1558920226j,
                                    -0.2038989363 - 0.4866906843j, 0.7816001961 + 0.j, 0.7900939717 - 0.7568098615j,
                                    0.1778728173 + 0.0169337338j, 1.2562773449 - 0.2630113917j,
                                    0.1526162704 + 0.8376057273j],
                                   [0.7002900128 + 0.7279225411j, -0.0557614174 - 0.2151733366j,
                                    0.2003139426 + 0.618133402j, 0.8034194862 - 0.1862524951j,
                                    -0.6221774803 + 0.4338978366j, -0.0213546351 - 0.4528548669j,
                                    -1.0167139067 - 0.1322685924j, 0.3709364748 + 0.1798748833j,
                                    -0.6487919628 - 0.9154618718j, -0.437063234 + 0.2434452444j,
                                    -0.0378971456 - 1.2231328282j, 0.7900939717 + 0.7568098615j, -0.1555878658 + 0.j,
                                    0.4750070287 - 0.4644168989j, 0.6299059954 + 0.4919081124j,
                                    0.3980211521 + 0.6997844205j],
                                   [-0.2144732169 + 0.7061668994j, -0.3551160433 + 0.3840047604j,
                                    0.7080318674 + 0.8255681962j, 0.2245896415 + 0.4159297564j,
                                    -0.6876397084 + 0.457499997j, -0.3941668292 - 0.9688295358j,
                                    0.2253076938 - 1.2091937782j, 0.6785724054 - 0.5044513379j,
                                    -1.0725055229 - 0.4118942789j, -0.2782595335 + 0.0358399758j,
                                    0.1143913145 - 0.2668375355j, 0.1778728173 - 0.0169337338j,
                                    0.4750070287 + 0.4644168989j, -0.3069639456 + 0.j, 0.9218824581 - 0.571477401j,
                                    -0.3515400848 - 0.2400086126j],
                                   [-0.1342185231 + 0.1840840636j, 0.1015972607 - 0.3964439973j,
                                    -0.4866435532 + 0.4631153149j, 1.0344078851 - 0.0478533165j,
                                    0.5982863768 + 0.9659281629j, 0.4406041689 + 0.3771720998j,
                                    -0.8197451201 + 1.375683411j, -0.7645633591 + 0.4149596544j,
                                    -0.5450623428 + 0.1006410219j, -0.7237855249 - 0.3030806575j,
                                    0.0040912441 + 0.6732342597j, 1.2562773449 + 0.2630113917j,
                                    0.6299059954 - 0.4919081124j, 0.9218824581 + 0.571477401j, 1.6777125779 + 0.j,
                                    -0.9224448303 - 1.242738683j],
                                   [0.0533356285 + 0.3082660313j, 0.4074590202 - 1.3820961441j,
                                    0.280031874 + 1.6654556436j, 0.5182462913 - 0.2444091146j,
                                    0.2497286908 - 0.0724985382j, 0.2473822488 + 0.0480534282j,
                                    0.3084851581 + 0.11487942j, -1.6364884405 - 0.726646518j,
                                    0.843764968 + 0.1753579012j, 1.1204172641 + 0.2152665134j,
                                    0.3431500895 - 1.0384436326j, 0.1526162704 - 0.8376057273j,
                                    0.3980211521 - 0.6997844205j, -0.3515400848 + 0.2400086126j,
                                    -0.9224448303 + 1.242738683j, 0.3903596097 + 0.j]])
            else:
                print("M = %d is not yet supported. A temporal Hermitian matrix is generated.")
                self.A = asnumpy(getRandomHermitianMatrix(self.M))
                print("A = " + str(self.A))

        # 1
        #y = np.log(self.x / (1.0 - self.x)) # converted into a near-Gaussian random variables
        # 2
        #y = y / np.sqrt(10) + 1.0
        # 3
        y = 0.5 + self.x

        for w in range(self.W):
            E = CayleyTransform(y[w] * self.A)
            self.bases[w, :, :, :] = self.convertUnitaryToBases(E)

    def convertUnitaryToBases(self, U):
        return np.array(np.hsplit(U, self.M / self.T))
