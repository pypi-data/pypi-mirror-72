# coding: utf-8

"""
    Nomad Envoy

    This is the API descriptor for the Nomad Envoy API, responsible for order creation and product lists.<br><br> Developed by <a href=\"https://samarkand.global\">Samarkand Global</a> in partnership with <a href=\"https://www.sf-express.com/cn/sc/\">SF Express</a><br><br> Install for node with <br>`npm install nomad_envoy_cli`<br><br> Install for python with <br>`pip install nomad-envoy-cli`<br>  # noqa: E501

    The version of the OpenAPI document: 1.40.0
    Contact: paul@samarkand.global
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import nomad_envoy_cli
from nomad_envoy_cli.models.customs_declaration_result import CustomsDeclarationResult  # noqa: E501
from nomad_envoy_cli.rest import ApiException

class TestCustomsDeclarationResult(unittest.TestCase):
    """CustomsDeclarationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CustomsDeclarationResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = nomad_envoy_cli.models.customs_declaration_result.CustomsDeclarationResult()  # noqa: E501
        if include_optional :
            return CustomsDeclarationResult(
                region = 'shanghai', 
                declaration_type = '0', 
                declaration_number = 'ABCDE29102918171', 
                client_order_ref = '0', 
                order_id = '0', 
                product_sku_number = '0', 
                product_barcode = '0', 
                orig_message = '0', 
                is_regsitered = True
            )
        else :
            return CustomsDeclarationResult(
        )

    def testCustomsDeclarationResult(self):
        """Test CustomsDeclarationResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
